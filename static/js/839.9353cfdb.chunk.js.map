{"version":3,"file":"static/js/839.9353cfdb.chunk.js","mappings":"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","sources":["components/CodeHighlighter.jsx","components/EchartsModule.jsx","pages/pageEcharts/PageDemo1.jsx","pages/pageEcharts/PageDemo2.jsx","pages/pageEcharts/PageDemo3.jsx","pages/pageEcharts/PageDemo4.jsx","pages/pageEcharts/PageDemo5.jsx","pages/pageEcharts/PageDemo6.jsx","pages/pageEcharts/PageDemo7.jsx","pages/pageEcharts/PageDemo8.jsx","pages/pageEcharts/PageEcharts.jsx","pages/pageEcharts/Codes.js"],"sourcesContent":["import { useState } from 'react';\nimport { Prism as SyntaxHighlighter } from 'react-syntax-highlighter';\nimport { vscDarkPlus } from 'react-syntax-highlighter/dist/esm/styles/prism';\nimport { CopyToClipboard } from 'react-copy-to-clipboard';\nimport { Button, message, Tooltip } from 'antd';\nimport { CopyOutlined, CheckOutlined } from '@ant-design/icons';\nimport classNames from 'classnames';\n\nconst CodeHighlighter = ({ lang='javascript', children='', className='' }) => {\n  const [messageApi, contextHolder] = message.useMessage();\n  const [copied, setCopied] = useState(false);\n  const onCopy = (text, result) => {\n    if (!text) {\n      messageApi.warning({\n        content: '缺乏待复制内容！',\n        duration: 2,\n      });\n      return;\n    }\n    if (result) {\n      setCopied(true);\n      messageApi.success({\n        content: '复制成功！',\n        duration: 2,\n        onClose: () => {\n          setCopied(false);\n        }\n      });\n    } else {\n      setCopied(false);\n      messageApi.error({\n        content: '复制失败！',\n        duration: 2,\n      });\n    }\n  };\n\n  const customStyle = {\n    borderRadius: '6px',\n    fontSize: '14px',\n    paddingTop: '22px',\n    margin: 0,\n  }\n\n  return (\n    <div className={classNames('relative', className)}>\n      {contextHolder}\n      <div className='absolute right-1 top-1 flex items-center'>\n        <span className='text-zinc-400 mr-3'>{lang}</span>\n        <Tooltip title=\"复制代码\">\n          <CopyToClipboard text={children} onCopy={onCopy}>\n            <Button size=\"small\" className='opacity-80' icon={copied ? <CheckOutlined /> : <CopyOutlined /> }  />\n          </CopyToClipboard>\n        </Tooltip>\n      </div>\n      <SyntaxHighlighter language={lang} showLineNumbers style={vscDarkPlus} customStyle={customStyle}>\n        {children}\n      </SyntaxHighlighter>\n    </div>\n  );\n};\n\nexport default CodeHighlighter;\n","import { useEffect, useImperativeHandle, useRef } from \"react\";\nimport * as echarts from 'echarts';\nimport { useDeepCompareEffect, useMount, useSize, useUnmount, useUpdateEffect } from \"ahooks\";\nimport classNames from 'classnames';\n\nconst EchartsModule = ({\n  // https://echarts.apache.org/zh/api.html#echarts.init\n  // 初始化传入的 opts\n  opts = { renderer: 'svg' },\n  // 配置项\n  options = {},\n  // 数据集合\n  seriesData = [],\n  // 自动切换的时间跨度\n  intervalTime = 1500,\n  // 是否自动播放\n  autoPlay = true,\n  // 是否自动添加鼠标上移事件\n  isAddOn = true,\n  onRef,\n  className = ''\n}) => {\n  \n  const echartsRef = useRef(null);\n  let myChart = useRef(null);\n  let echartsOptions = useRef({});\n  let myChartEventTime = useRef(null);\n  let currentSeriesIndex = useRef(0);\n  let currentDataIndex = useRef(-1);\n  let timer = useRef(intervalTime);\n\n  // 是否调用过 echartsPlay\n  let isEchartsPlay = useRef(false);\n  // echarts初始化\n  function init() {\n    destroyEchart() //判断是否有echart实例，如果有，先销毁\n    myChart.current = echarts.init(echartsRef.current, null, opts)\n    update()\n\n    if (isAddOn) {\n      addEventFn()\n    }\n  }\n\n  // 绑定事件\n  function addEventFn() {\n    // 鼠标移上查看的时候，暂停动画\n    myChart.current.on('mouseover', 'series', event => {\n      // 取消之前高亮的图形\n      myChart.current.dispatchAction({\n        type: 'downplay',\n        seriesIndex: currentSeriesIndex.current,\n        dataIndex: currentDataIndex.current\n      })\n      echartsPause()\n    })\n    // 鼠标移出的时候打开动画\n    myChart.current.on('mouseout', 'series', event => {\n      // 自动播放 或者 调用过 echartsPlay\n      if (autoPlay || isEchartsPlay.current) echartsPlay(true, event.seriesIndex, event.dataIndex - 1)\n    })\n  }\n\n  // 移除事件\n  function removeEventFn() {\n    myChart.current.off('mouseover')\n    myChart.current.off('mouseout')\n  }\n\n  // 数据更新\n  function update() {\n    // 逻辑处理组件options参数\n    const curOptions = {\n      ...options,\n      series: seriesData\n      // other options here ...\n    }\n    echartsOptions.current = curOptions\n    // 调用ECharts组件setOption更新\n    myChart.current.setOption(curOptions, true)\n    if (curOptions.series.length && autoPlay) {\n      myChart.current.dispatchAction({\n        type: 'highlight',\n        seriesIndex: currentSeriesIndex.current,\n        dataIndex: currentDataIndex.current\n      })\n      // 显示 tooltip\n      myChart.current.dispatchAction({\n        type: 'showTip',\n        seriesIndex: currentSeriesIndex.current,\n        dataIndex: currentDataIndex.current\n      })\n      echartsPlay(false, currentSeriesIndex.current, currentDataIndex.current <= seriesData[currentSeriesIndex.current].data.length - 1 ? currentDataIndex.current : -1)\n    }\n  }\n\n  // 销毁echarts\n  function destroyEchart() {\n    if (myChart.current) {\n      if (isAddOn) {\n        removeEventFn()\n      }\n      if (typeof myChart.current.clear === 'function') myChart.current.clear()\n      if (typeof myChart.current.dispose === 'function') myChart.current.dispose()\n      myChart.current = null\n    }\n  }\n\n  /**\n   * echarts开启动画，可手动调用\n   * clear: 是否立即开始动画，并清除上个定时器，开启下个定时器，默认为 false\n   * seriesIndex: series 中的第几项数据，默认为 0\n   * dataIndex: series[seriesIndex].data 中的第几项，默认为 -1\n   */\n  function echartsPlay(clear = false, seriesIndex = 0, dataIndex = -1) {\n    if (clear) {\n      echartsPause()\n    }\n    isEchartsPlay.current = true\n    currentSeriesIndex.current = seriesIndex\n    currentDataIndex.current = dataIndex\n    if (!myChartEventTime.current) {\n      echartsEventPlay(seriesIndex)\n    }\n  }\n\n  function echartsTimeout(seriesIndex = 0) {\n    myChartEventTime.current = setTimeout(() => {\n      echartsEventPlay(seriesIndex)\n    }, timer.current)\n  }\n\n  function echartsEventPlay(seriesIndex = 0) {\n    const dataLen = echartsOptions.current.series[seriesIndex].data.length\n    if (myChart.current && myChart.current.dispatchAction) {\n      // 取消之前高亮的图形\n      myChart.current.dispatchAction({\n        type: 'downplay',\n        seriesIndex,\n        dataIndex: currentDataIndex.current\n      })\n      currentDataIndex.current = (currentDataIndex.current + 1) % dataLen\n      // 高亮当前图形\n      myChart.current.dispatchAction({\n        type: 'highlight',\n        seriesIndex,\n        dataIndex: currentDataIndex.current\n      })\n      // 显示 tooltip\n      myChart.current.dispatchAction({\n        type: 'showTip',\n        seriesIndex,\n        dataIndex: currentDataIndex.current\n      })\n    }\n    echartsTimeout(seriesIndex)\n  }\n\n  // echarts关闭动画，可手动调用\n  function echartsPause() {\n    if (myChart.current && myChart.current.dispatchAction) {\n      // 取消之前高亮的图形\n      myChart.current.dispatchAction({\n        type: 'downplay',\n        seriesIndex: currentSeriesIndex.current,\n        dataIndex: currentDataIndex.current\n      })\n      // 取消显示 tooltip\n      myChart.current.dispatchAction({\n        type: 'hideTip'\n      })\n    }\n    if (myChartEventTime.current) {\n      clearTimeout(myChartEventTime.current)\n      myChartEventTime.current = null\n    }\n  }\n\n  // 重置大小\n  const echartsResize = () => {\n    if (myChart.current) myChart.current.resize()\n  }\n\n  useMount(() => {\n    init()\n  })\n  useUnmount(() => {\n    echartsPause()\n    destroyEchart()\n  })\n\n  useDeepCompareEffect(() => {\n    update()\n  }, [seriesData])\n\n  useUpdateEffect(() => {\n    if (autoPlay) {\n      echartsPlay(false, currentSeriesIndex.current, currentDataIndex.current)\n    } else {\n      echartsPause()\n    }\n  }, [autoPlay])\n\n  useUpdateEffect(() => {\n    timer.current = intervalTime\n  }, [intervalTime])\n\n  useUpdateEffect(() => {\n    if (isAddOn) {\n      addEventFn()\n    } else {\n      removeEventFn()\n    }\n  }, [isAddOn])\n\n  const size = useSize(echartsRef)\n  useEffect(() => {\n    echartsResize()\n  }, [size])\n\n  useImperativeHandle(onRef, () => {\n    return {\n      echartsInstance: () => myChart.current,\n      echartsPlay,\n      echartsPause\n    }\n  });\n\n  return (\n    <div ref={echartsRef} className={classNames('w-full h-full', className)}></div>\n  );\n};\n\nexport default EchartsModule;\n","import { Button, Typography, theme } from \"antd\";\nimport { useState } from \"react\";\nimport EchartsModule from \"../../components/EchartsModule\";\n\nconst { Title } = Typography;\nconst { useToken } = theme;\n\nconst PageDemo = () => {\n  const { token } = useToken();\n  const { colorText, colorBgContainer, colorBorder } = token;\n  const options = {\n    grid: {\n      top: '15%',\n      bottom: '10%',\n    },\n    textStyle: {\n      color: colorText,\n    },\n    legend: {\n      textStyle: {\n        color: colorText,\n      },\n    },\n    xAxis: {\n      type: 'category',\n      data: ['Matcha Latte', 'Milk Tea', 'Cheese Cocoa', 'Walnut Brownie', 'Brownie', 'Cheese']\n    },\n    yAxis: {},\n    tooltip: {\n      trigger: 'axis',\n      className: 'echart-tooltip-zIndex',\n      backgroundColor: colorBgContainer,\n      borderColor: colorBorder,\n      textStyle: {\n        color: colorText,\n      },\n    }\n  }\n\n  const [seriesData, setSeriesData] = useState([\n    {\n      type: 'bar',\n      name: '2015',\n      data: [89.3, 92.1, 94.4, 85.4, 88, 90]\n    },\n    {\n      type: 'bar',\n      name: '2016',\n      data: [95.8, 89.4, 91.2, 76.9, 75, 68]\n    },\n    {\n      type: 'bar',\n      name: '2017',\n      data: [97.7, 83.1, 92.5, 78.1, 95, 93]\n    }\n  ])\n  const changeDate = () => {\n    setSeriesData([\n      {\n        type: 'bar',\n        name: '2015',\n        data: [89.3, 92.1, 94.4, 85.4, 50, 69]\n      },\n      {\n        type: 'bar',\n        name: '2016',\n        data: [95.8, 89.4, 91.2, 76.9, 75, 68]\n      }\n    ])\n  }\n\n  return (\n    <div>\n      <Title level={3}>1、默认展示，测试 seriesData 变更</Title>\n      <div>\n        <Button onClick={changeDate}>切换</Button>\n      </div>\n      <div className=\"w-full h-80\" style={{backgroundColor: colorBgContainer}}>\n        <EchartsModule options={options} seriesData={seriesData}></EchartsModule>\n      </div>\n    </div>\n  );\n};\n\nexport default PageDemo;\n","import { Button, Typography, theme } from \"antd\";\nimport { useState } from \"react\";\nimport EchartsModule from \"../../components/EchartsModule\";\n\nconst { Title } = Typography;\nconst { useToken } = theme;\n\nconst PageDemo = () => {\n  const { token } = useToken();\n  const { colorText, colorBgContainer, colorBorder } = token;\n  const [isShow, setIsShow] = useState(false)\n  const options = {\n    grid: {\n      top: '15%',\n      bottom: '10%',\n    },\n    textStyle: {\n      color: colorText,\n    },\n    legend: {\n      textStyle: {\n        color: colorText,\n      },\n    },\n    xAxis: {},\n    yAxis: {\n      type: 'category',\n      data: ['Latte', 'Tea', 'Cocoa', 'Brownie']\n    },\n    tooltip: {\n      trigger: 'axis',\n      className: 'echart-tooltip-zIndex',\n      backgroundColor: colorBgContainer,\n      borderColor: colorBorder,\n      textStyle: {\n        color: colorText,\n      },\n    }\n  }\n  const [seriesData, setSeriesData] = useState([])\n  function changeDate() {\n    setIsShow(true)\n    setSeriesData([\n      {\n        type: 'bar',\n        name: '2015',\n        data: [89.3, 92.1, 94.4, 85.4]\n      },\n      {\n        type: 'bar',\n        name: '2016',\n        data: [95.8, 89.4, 91.2, 76.9]\n      }\n    ])\n  }\n\n  return (\n    <div>\n      <Title level={3}>2、默认不展示，展示的时候，设置 seriesData</Title>\n      <div>\n        <Button onClick={changeDate}>切换</Button>\n      </div>\n      <div className=\"w-full h-72\" style={{backgroundColor: colorBgContainer}}>\n        {isShow && <EchartsModule options={options} seriesData={seriesData}></EchartsModule>}\n      </div>\n    </div>\n  );\n};\n\nexport default PageDemo;\n","import { Button, Typography, theme } from \"antd\";\nimport { useState } from \"react\";\nimport EchartsModule from \"../../components/EchartsModule\";\n\nconst { Title } = Typography;\nconst { useToken } = theme;\n\nconst PageDemo = () => {\n  const { token } = useToken();\n  const { colorText, colorBgContainer, colorBorder } = token;\n  const options = {\n    grid: {\n      top: '15%',\n      bottom: '10%',\n    },\n    textStyle: {\n      color: colorText,\n    },\n    legend: {\n      textStyle: {\n        color: colorText,\n      },\n    },\n    xAxis: {\n      type: 'category',\n      data: ['Matcha Latte', 'Milk Tea', 'Cheese Cocoa', 'Walnut Brownie', 'Brownie', 'Cheese']\n    },\n    yAxis: {},\n    tooltip: {\n      trigger: 'axis',\n      className: 'echart-tooltip-zIndex',\n      backgroundColor: colorBgContainer,\n      borderColor: colorBorder,\n      textStyle: {\n        color: colorText,\n      },\n    }\n  }\n  const [seriesData, setSeriesData] = useState([\n    {\n      type: 'bar',\n      name: '2015',\n      data: [89.3, 92.1, 94.4, 85.4, 88, 90]\n    },\n    {\n      type: 'bar',\n      name: '2016',\n      data: [95.8, 89.4, 91.2, 76.9, 75, 68]\n    },\n    {\n      type: 'bar',\n      name: '2017',\n      data: [97.7, 83.1, 92.5, 78.1, 95, 93]\n    }\n  ])\n  function changeDate() {\n    setSeriesData([\n      {\n        type: 'bar',\n        name: '2015',\n        data: [89.3, 92.1]\n      }\n    ])\n  }\n\n  return (\n    <div>\n      <Title level={3}>3、前后两次赋值的 seriesData[0].data.length 不一样，动画从头开始</Title>\n      <div>\n        <Button onClick={changeDate}>切换</Button>\n      </div>\n      <div className=\"w-full h-80\" style={{backgroundColor: colorBgContainer}}>\n        <EchartsModule options={options} seriesData={seriesData}></EchartsModule>\n      </div>\n    </div>\n  );\n};\n\nexport default PageDemo;\n","import { Button, Typography, theme } from \"antd\";\nimport { useState } from \"react\";\nimport EchartsModule from \"../../components/EchartsModule\";\n\nconst { Title } = Typography;\nconst { useToken } = theme;\n\nconst PageDemo = () => {\n  const { token } = useToken();\n  const { colorText, colorBgContainer, colorBorder } = token;\n  const [boxWidth, setBoxWidth] = useState(true)\n  const [boxHeight, setBoxHeight] = useState(true)\n  const options = {\n    grid: {\n      top: '15%',\n      bottom: '10%',\n    },\n    textStyle: {\n      color: colorText,\n    },\n    legend: {\n      textStyle: {\n        color: colorText,\n      },\n    },\n    xAxis: {\n      type: 'category',\n      data: ['Matcha Latte', 'Milk Tea', 'Cheese Cocoa', 'Walnut Brownie', 'Brownie', 'Cheese']\n    },\n    yAxis: {},\n    tooltip: {\n      trigger: 'axis',\n      className: 'echart-tooltip-zIndex',\n      backgroundColor: colorBgContainer,\n      borderColor: colorBorder,\n      textStyle: {\n        color: colorText,\n      },\n    }\n  }\n  const seriesData = [\n    {\n      type: 'line',\n      name: '2015',\n      data: [89.3, 92.1, 94.4, 85.4, 88, 90]\n    },\n    {\n      type: 'line',\n      name: '2016',\n      data: [95.8, 89.4, 91.2, 76.9, 75, 68]\n    },\n    {\n      type: 'line',\n      name: '2017',\n      data: [97.7, 83.1, 92.5, 78.1, 95, 93]\n    }\n  ]\n  function changeDate4() {\n    setBoxWidth(!boxWidth)\n  }\n  function changeDate41() {\n    setBoxHeight(!boxHeight)\n  }\n\n  return (\n    <div>\n      <Title level={3}>3、切换宽高，自动 resize</Title>\n      <div>\n        <Button onClick={changeDate4}>切换宽度</Button>\n        <Button className=\"ml-2\" onClick={changeDate41}>切换高度</Button>\n      </div>\n      <div className=\"w-full h-80\">\n        <div style={{width: boxWidth ? '100%' : '50%', height: boxHeight ? '100%' : '75%', backgroundColor: colorBgContainer}}>\n          <EchartsModule options={options} seriesData={seriesData}></EchartsModule>\n        </div>\n      </div>\n    </div>\n  );\n};\n\nexport default PageDemo;\n","import { Button, Typography, theme } from \"antd\";\nimport { useState } from \"react\";\nimport EchartsModule from \"../../components/EchartsModule\";\n\nconst { Title } = Typography;\nconst { useToken } = theme;\n\nconst PageDemo = () => {\n  const { token } = useToken();\n  const { colorText, colorBgContainer, colorBorder } = token;\n  const [autoPlay, setAutoPlay] = useState(true)\n  const options = {\n    textStyle: {\n      color: colorText,\n    },\n    title: {\n      text: '饼图程序调用高亮示例',\n      left: 'center',\n      textStyle: {\n        color: colorText,\n      },\n    },\n    tooltip: {\n      trigger: 'item',\n      formatter: '{a} <br/>{b} : {c} ({d}%)',\n      confine: true,\n      className: 'echart-tooltip-zIndex',\n      backgroundColor: colorBgContainer,\n      borderColor: colorBorder,\n      textStyle: {\n        color: colorText,\n      },\n    },\n    legend: {\n      orient: 'vertical',\n      left: 'left',\n      data: ['直接访问', '邮件营销', '联盟广告', '视频广告', '搜索引擎'],\n      textStyle: {\n        color: colorText,\n      },\n    }\n  }\n\n  const seriesData = [\n    {\n      name: '访问来源',\n      type: 'pie',\n      radius: '55%',\n      center: ['50%', '60%'],\n      lable: {\n        textStyle: {\n          color: colorText,\n        },\n      },\n      data: [\n        { value: 335, name: '直接访问' },\n        { value: 310, name: '邮件营销' },\n        { value: 234, name: '联盟广告' },\n        { value: 135, name: '视频广告' },\n        { value: 1548, name: '搜索引擎' }\n      ],\n      emphasis: {\n        itemStyle: {\n          shadowBlur: 10,\n          shadowOffsetX: 0,\n        }\n      }\n    }\n  ]\n  const changeDate = () => {\n    setAutoPlay(!autoPlay)\n  }\n\n  return (\n    <div>\n      <Title level={3}>5、改变 autoPlay 开始结束动画，使用 autoPlay 改变的好处是可以从上次暂停动画项处继续动画</Title>\n      <div>\n        <Button onClick={changeDate}>{ autoPlay ? '结束' : '开始' }动画</Button>\n      </div>\n      <div className=\"w-full h-80\" style={{backgroundColor: colorBgContainer}}>\n        <EchartsModule options={options} seriesData={seriesData} autoPlay={autoPlay}></EchartsModule>\n      </div>\n    </div>\n  );\n};\n\nexport default PageDemo;\n","import { Button, Typography, theme } from \"antd\";\nimport React from \"react\";\nimport EchartsModule from \"../../components/EchartsModule\";\n\nconst { Title } = Typography;\nconst { useToken } = theme;\n\nconst PageDemo = () => {\n  const { token } = useToken();\n  const { colorText, colorBgContainer, colorBorder } = token;\n  const echartsRef = React.createRef();\n  const options = {\n    textStyle: {\n      color: colorText,\n    },\n    title: {\n      text: '饼图程序调用高亮示例',\n      left: 'center',\n      textStyle: {\n        color: colorText,\n      },\n    },\n    tooltip: {\n      trigger: 'item',\n      formatter: '{a} <br/>{b} : {c} ({d}%)',\n      confine: true,\n      className: 'echart-tooltip-zIndex',\n      backgroundColor: colorBgContainer,\n      borderColor: colorBorder,\n      textStyle: {\n        color: colorText,\n      },\n    },\n    legend: {\n      orient: 'vertical',\n      left: 'left',\n      data: ['直接访问', '邮件营销', '联盟广告', '视频广告', '搜索引擎'],\n      textStyle: {\n        color: colorText,\n      },\n    }\n  }\n\n  const seriesData = [\n    {\n      name: '访问来源',\n      type: 'pie',\n      radius: '55%',\n      center: ['50%', '60%'],\n      lable: {\n        textStyle: {\n          color: colorText,\n        },\n      },\n      data: [\n        { value: 335, name: '直接访问' },\n        { value: 310, name: '邮件营销' },\n        { value: 234, name: '联盟广告' },\n        { value: 135, name: '视频广告' },\n        { value: 1548, name: '搜索引擎' }\n      ],\n      emphasis: {\n        itemStyle: {\n          shadowBlur: 10,\n          shadowOffsetX: 0,\n        }\n      }\n    }\n  ]\n  const changeDate = () => {\n    echartsRef.current.echartsPlay(true, 0, -1)\n  }\n  const changeDate1 = () => {\n    echartsRef.current.echartsPause()\n  }\n  const changeDate2 = () => {\n    const echartsInstance = echartsRef.current.echartsInstance()\n    echartsInstance.clear()\n    echartsInstance.dispose()\n  }\n\n  return (\n    <div>\n      <Title level={3}>6、通过 ref 调用开始结束动画，使用 ref 调用的好处是可以指定在第几项开始动画</Title>\n      <div>\n        <Button onClick={changeDate}>开始动画</Button>\n        <Button className=\"ml-2\" onClick={changeDate1}>结束动画</Button>\n        <Button className=\"ml-2\" onClick={changeDate2}>获取实例，销毁echarts</Button>\n      </div>\n      <div className=\"w-full h-80\" style={{backgroundColor: colorBgContainer}}>\n        <EchartsModule onRef={echartsRef} options={options} seriesData={seriesData}></EchartsModule>\n      </div>\n    </div>\n  );\n};\n\nexport default PageDemo;\n","import { Button, Typography, theme } from \"antd\";\nimport { useState } from \"react\";\nimport EchartsModule from \"../../components/EchartsModule\";\n\nconst { Title } = Typography;\nconst { useToken } = theme;\n\nconst PageDemo = () => {\n  const { token } = useToken();\n  const { colorText, colorBgContainer, colorBorder } = token;\n  const [intervalTime, setIntervalTime] = useState(5000)\n  const options = {\n    grid: {\n      top: '15%',\n      bottom: '10%',\n    },\n    textStyle: {\n      color: colorText,\n    },\n    legend: {\n      textStyle: {\n        color: colorText,\n      },\n    },\n    xAxis: {\n      type: 'category',\n      data: ['Matcha Latte', 'Milk Tea', 'Cheese Cocoa', 'Walnut Brownie', 'Brownie', 'Cheese']\n    },\n    yAxis: {},\n    tooltip: {\n      trigger: 'axis',\n      className: 'echart-tooltip-zIndex',\n      backgroundColor: colorBgContainer,\n      borderColor: colorBorder,\n      textStyle: {\n        color: colorText,\n      },\n    }\n  }\n\n  const seriesData = [\n    {\n      type: 'line',\n      name: '2015',\n      data: [89.3, 92.1, 94.4, 85.4, 88, 90]\n    },\n    {\n      type: 'line',\n      name: '2016',\n      data: [95.8, 89.4, 91.2, 76.9, 75, 68]\n    },\n    {\n      type: 'line',\n      name: '2017',\n      data: [97.7, 83.1, 92.5, 78.1, 95, 93]\n    }\n  ]\n  const changeDate = () => {\n    setIntervalTime(1000)\n  }\n\n  return (\n    <div>\n      <Title level={3}>7、切换动画跳动时间 5s 变 1s</Title>\n      <div>\n        <Button onClick={changeDate}>切换</Button>\n      </div>\n      <div className=\"w-full h-80\" style={{backgroundColor: colorBgContainer}}>\n        <EchartsModule options={options} seriesData={seriesData} intervalTime={intervalTime}></EchartsModule>\n      </div>\n    </div>\n  );\n};\n\nexport default PageDemo;\n","import { Button, Typography, theme } from \"antd\";\nimport { useState } from \"react\";\nimport EchartsModule from \"../../components/EchartsModule\";\n\nconst { Title } = Typography;\nconst { useToken } = theme;\n\nconst PageDemo = () => {\n  const { token } = useToken();\n  const { colorText, colorBgContainer, colorBorder } = token;\n  const [isAddOn, setIsAddOn] = useState(false)\n  const options = {\n    grid: {\n      top: '15%',\n      bottom: '10%',\n    },\n    textStyle: {\n      color: colorText,\n    },\n    legend: {\n      textStyle: {\n        color: colorText,\n      },\n    },\n    xAxis: {\n      type: 'category',\n      data: ['Matcha Latte', 'Milk Tea', 'Cheese Cocoa', 'Walnut Brownie', 'Brownie', 'Cheese']\n    },\n    yAxis: {},\n    tooltip: {\n      trigger: 'axis',\n      className: 'echart-tooltip-zIndex',\n      backgroundColor: colorBgContainer,\n      borderColor: colorBorder,\n      textStyle: {\n        color: colorText,\n      },\n    }\n  }\n\n  const seriesData = [\n    {\n      type: 'line',\n      name: '2015',\n      data: [89.3, 92.1, 94.4, 85.4, 88, 90]\n    },\n    {\n      type: 'line',\n      name: '2016',\n      data: [95.8, 89.4, 91.2, 76.9, 75, 68]\n    },\n    {\n      type: 'line',\n      name: '2017',\n      data: [97.7, 83.1, 92.5, 78.1, 95, 93]\n    }\n  ]\n  const changeDate = () => {\n    setIsAddOn(true)\n  }\n\n  return (\n    <div>\n      <Title level={3}>8、通过 isAddOn 添加移除鼠标事件</Title>\n      <div>\n        <Button onClick={changeDate}>{ isAddOn ? '移除' : '添加' }</Button>\n      </div>\n      <div className=\"w-full h-80\" style={{backgroundColor: colorBgContainer}}>\n        <EchartsModule options={options} seriesData={seriesData} isAddOn={isAddOn}></EchartsModule>\n      </div>\n    </div>\n  );\n};\n\nexport default PageDemo;\n","import { Typography } from 'antd';\nimport CodeHighlighter from '../../components/CodeHighlighter';\nimport PageDemo1 from \"./PageDemo1\";\nimport PageDemo2 from \"./PageDemo2\";\nimport PageDemo3 from \"./PageDemo3\";\nimport PageDemo4 from \"./PageDemo4\";\nimport PageDemo5 from \"./PageDemo5\";\nimport PageDemo6 from \"./PageDemo6\";\nimport PageDemo7 from \"./PageDemo7\";\nimport PageDemo8 from \"./PageDemo8\";\nimport { EchartsModuleCode } from './Codes';\n\nconst { Title } = Typography;\n\nconst PageEcharts = () => {\n\n  return (\n    <div>\n      <Title>echarts</Title>\n      <Title level={2} style={{ marginTop: '0.5em' }}>安装：</Title>\n      <CodeHighlighter lang='sh'>\n        {'npm install echarts --save'}\n      </CodeHighlighter>\n      <Title level={2} style={{ marginTop: '0.5em' }}>例子：</Title>\n      <div className='w-full flex'>\n        <div className='w-1/2 px-3'>\n          <PageDemo1></PageDemo1>\n        </div>\n        <div className='w-1/2 px-3'>\n          <PageDemo2></PageDemo2>\n        </div>\n      </div>\n      <div className='w-full flex'>\n        <div className='w-1/2 px-3'>\n          <PageDemo3></PageDemo3>\n        </div>\n        <div className='w-1/2 px-3'>\n          <PageDemo4></PageDemo4>\n        </div>\n      </div>\n      <div className='w-full flex'>\n        <div className='w-1/2 px-3'>\n          <PageDemo5></PageDemo5>\n        </div>\n        <div className='w-1/2 px-3'>\n          <PageDemo6></PageDemo6>\n        </div>\n      </div>\n      <div className='w-full flex'>\n        <div className='w-1/2 px-3'>\n          <PageDemo7></PageDemo7>\n        </div>\n        <div className='w-1/2 px-3'>\n          <PageDemo8></PageDemo8>\n        </div>\n      </div>\n      <Title level={2} style={{ marginTop: '0.5em' }}>echarts组件封装：</Title>\n      <CodeHighlighter lang='jsx'>\n        {EchartsModuleCode}\n      </CodeHighlighter>\n    </div>\n  );\n};\n\nexport default PageEcharts;\n","export const EchartsModuleCode = `import { useEffect, useImperativeHandle, useRef } from \"react\";\nimport * as echarts from 'echarts';\nimport { useDeepCompareEffect, useMount, useSize, useUnmount, useUpdateEffect } from \"ahooks\";\n\nconst EchartsModule = ({\n  // https://echarts.apache.org/zh/api.html#echarts.init\n  // 初始化传入的 opts\n  opts = { renderer: 'svg' },\n  // 配置项\n  options = {},\n  // 数据集合\n  seriesData = [],\n  // 自动切换的时间跨度\n  intervalTime = 1500,\n  // 是否自动播放\n  autoPlay = true,\n  // 是否自动添加鼠标上移事件\n  isAddOn = true,\n  onRef\n}) => {\n  \n  const echartsRef = useRef(null);\n  let myChart = useRef(null);\n  let echartsOptions = useRef({});\n  let myChartEventTime = useRef(null);\n  let currentSeriesIndex = useRef(0);\n  let currentDataIndex = useRef(-1);\n  let timer = useRef(intervalTime);\n\n  // 是否调用过 echartsPlay\n  let isEchartsPlay = useRef(false);\n  // echarts初始化\n  function init() {\n    destroyEchart() //判断是否有echart实例，如果有，先销毁\n    myChart.current = echarts.init(echartsRef.current, null, opts)\n    update()\n\n    if (isAddOn) {\n      addEventFn()\n    }\n  }\n\n  // 绑定事件\n  function addEventFn() {\n    // 鼠标移上查看的时候，暂停动画\n    myChart.current.on('mouseover', 'series', event => {\n      // 取消之前高亮的图形\n      myChart.current.dispatchAction({\n        type: 'downplay',\n        seriesIndex: currentSeriesIndex.current,\n        dataIndex: currentDataIndex.current\n      })\n      echartsPause()\n    })\n    // 鼠标移出的时候打开动画\n    myChart.current.on('mouseout', 'series', event => {\n      // 自动播放 或者 调用过 echartsPlay\n      if (autoPlay || isEchartsPlay.current) echartsPlay(true, event.seriesIndex, event.dataIndex - 1)\n    })\n  }\n\n  // 移除事件\n  function removeEventFn() {\n    myChart.current.off('mouseover')\n    myChart.current.off('mouseout')\n  }\n\n  // 数据更新\n  function update() {\n    // 逻辑处理组件options参数\n    const curOptions = {\n      ...options,\n      series: seriesData\n      // other options here ...\n    }\n    echartsOptions.current = curOptions\n    // 调用ECharts组件setOption更新\n    myChart.current.setOption(curOptions, true)\n    if (curOptions.series.length && autoPlay) {\n      myChart.current.dispatchAction({\n        type: 'highlight',\n        seriesIndex: currentSeriesIndex.current,\n        dataIndex: currentDataIndex.current\n      })\n      // 显示 tooltip\n      myChart.current.dispatchAction({\n        type: 'showTip',\n        seriesIndex: currentSeriesIndex.current,\n        dataIndex: currentDataIndex.current\n      })\n      echartsPlay(false, currentSeriesIndex.current, currentDataIndex.current <= seriesData[currentSeriesIndex.current].data.length - 1 ? currentDataIndex.current : -1)\n    }\n  }\n\n  // 销毁echarts\n  function destroyEchart() {\n    if (myChart.current) {\n      if (isAddOn) {\n        removeEventFn()\n      }\n      if (typeof myChart.current.clear === 'function') myChart.current.clear()\n      if (typeof myChart.current.dispose === 'function') myChart.current.dispose()\n      myChart.current = null\n    }\n  }\n\n  /**\n   * echarts开启动画，可手动调用\n   * clear: 是否立即开始动画，并清除上个定时器，开启下个定时器，默认为 false\n   * seriesIndex: series 中的第几项数据，默认为 0\n   * dataIndex: series[seriesIndex].data 中的第几项，默认为 -1\n   */\n  function echartsPlay(clear = false, seriesIndex = 0, dataIndex = -1) {\n    if (clear) {\n      echartsPause()\n    }\n    isEchartsPlay.current = true\n    currentSeriesIndex.current = seriesIndex\n    currentDataIndex.current = dataIndex\n    if (!myChartEventTime.current) {\n      echartsEventPlay(seriesIndex)\n    }\n  }\n\n  function echartsTimeout(seriesIndex = 0) {\n    myChartEventTime.current = setTimeout(() => {\n      echartsEventPlay(seriesIndex)\n    }, timer.current)\n  }\n\n  function echartsEventPlay(seriesIndex = 0) {\n    const dataLen = echartsOptions.current.series[seriesIndex].data.length\n    if (myChart.current && myChart.current.dispatchAction) {\n      // 取消之前高亮的图形\n      myChart.current.dispatchAction({\n        type: 'downplay',\n        seriesIndex,\n        dataIndex: currentDataIndex.current\n      })\n      currentDataIndex.current = (currentDataIndex.current + 1) % dataLen\n      // 高亮当前图形\n      myChart.current.dispatchAction({\n        type: 'highlight',\n        seriesIndex,\n        dataIndex: currentDataIndex.current\n      })\n      // 显示 tooltip\n      myChart.current.dispatchAction({\n        type: 'showTip',\n        seriesIndex,\n        dataIndex: currentDataIndex.current\n      })\n    }\n    echartsTimeout(seriesIndex)\n  }\n\n  // echarts关闭动画，可手动调用\n  function echartsPause() {\n    if (myChart.current && myChart.current.dispatchAction) {\n      // 取消之前高亮的图形\n      myChart.current.dispatchAction({\n        type: 'downplay',\n        seriesIndex: currentSeriesIndex.current,\n        dataIndex: currentDataIndex.current\n      })\n      // 取消显示 tooltip\n      myChart.current.dispatchAction({\n        type: 'hideTip'\n      })\n    }\n    if (myChartEventTime.current) {\n      clearTimeout(myChartEventTime.current)\n      myChartEventTime.current = null\n    }\n  }\n\n  // 重置大小\n  const echartsResize = () => {\n    if (myChart.current) myChart.current.resize()\n  }\n\n  useMount(() => {\n    init()\n  })\n  useUnmount(() => {\n    echartsPause()\n    destroyEchart()\n  })\n\n  useDeepCompareEffect(() => {\n    update()\n  }, [seriesData])\n\n  useUpdateEffect(() => {\n    if (autoPlay) {\n      echartsPlay(false, currentSeriesIndex.current, currentDataIndex.current)\n    } else {\n      echartsPause()\n    }\n  }, [autoPlay])\n\n  useUpdateEffect(() => {\n    timer.current = intervalTime\n  }, [intervalTime])\n\n  useUpdateEffect(() => {\n    if (isAddOn) {\n      addEventFn()\n    } else {\n      removeEventFn()\n    }\n  }, [isAddOn])\n\n  const size = useSize(echartsRef)\n  useEffect(() => {\n    echartsResize()\n  }, [size])\n\n  useImperativeHandle(onRef, () => {\n    return {\n      echartsInstance: () => myChart.current,\n      echartsPlay,\n      echartsPause\n    }\n  });\n\n  return (\n    <div ref={echartsRef} className=\"w-full h-full\"></div>\n  );\n};\n\nexport default EchartsModule;`\n"],"names":["lang","children","className","message","messageApi","contextHolder","useState","copied","setCopied","classNames","title","CopyToClipboard","text","onCopy","result","success","content","duration","onClose","error","warning","size","icon","language","showLineNumbers","style","vscDarkPlus","customStyle","borderRadius","fontSize","paddingTop","margin","opts","renderer","options","seriesData","intervalTime","autoPlay","isAddOn","onRef","echartsRef","useRef","myChart","echartsOptions","myChartEventTime","currentSeriesIndex","currentDataIndex","timer","isEchartsPlay","addEventFn","current","on","event","dispatchAction","type","seriesIndex","dataIndex","echartsPause","echartsPlay","removeEventFn","off","update","curOptions","series","setOption","length","data","destroyEchart","clear","dispose","echartsEventPlay","dataLen","setTimeout","echartsTimeout","clearTimeout","useMount","echarts","useUnmount","useDeepCompareEffect","useUpdateEffect","useSize","useEffect","resize","useImperativeHandle","echartsInstance","ref","Title","Typography","useToken","theme","token","colorText","colorBgContainer","grid","top","bottom","textStyle","color","legend","xAxis","yAxis","tooltip","trigger","backgroundColor","borderColor","colorBorder","name","setSeriesData","level","onClick","isShow","setIsShow","boxWidth","setBoxWidth","boxHeight","setBoxHeight","width","height","setAutoPlay","left","formatter","confine","orient","radius","center","lable","value","emphasis","itemStyle","shadowBlur","shadowOffsetX","React","setIntervalTime","setIsAddOn","marginTop","CodeHighlighter","PageDemo1","PageDemo2","PageDemo3","PageDemo4","PageDemo5","PageDemo6","PageDemo7","PageDemo8"],"sourceRoot":""}