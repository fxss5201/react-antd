{"version":3,"file":"static/js/477.528a94d3.chunk.js","mappings":"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","sources":["pages/login/components/ForgetPasswordVerification.jsx","pages/login/components/ForgetPasswordReset.jsx","pages/login/ForgetPassword.jsx"],"sourcesContent":["import React, { useState } from 'react';\nimport { useTranslation } from 'react-i18next';\nimport {\n  Button,\n  Form,\n  Input,\n} from 'antd';\nimport { useCountDown, useUnmount } from 'ahooks';\nimport config from '../../../config';\n\nconst formItemLayout = {\n  labelCol: {\n    xs: {\n      span: 24,\n    },\n    sm: {\n      span: 4,\n    },\n  },\n  wrapperCol: {\n    xs: {\n      span: 24,\n    },\n    sm: {\n      span: 20,\n    },\n  },\n};\n\nconst tailFormItemLayout = {\n  wrapperCol: {\n    xs: {\n      span: 24,\n      offset: 0,\n    },\n    sm: {\n      span: 20,\n      offset: 4,\n    },\n  },\n};\n\nconst ForgetPasswordVerification = ({ onFinishVerification }) => {\n  const [isValidate, setIsValidate] = useState(false);\n  const [form] = Form.useForm();\n\n  const { t, i18n } = useTranslation();\n  i18n.on('languageChanged', (lng) => {\n    if (isValidate) form.validateFields();\n  })\n  useUnmount(() => {\n    i18n.off('languageChanged');\n  })\n  \n  const [isGetVerificationLoading, setIsGetVerificationLoading] = useState(false);\n  const [targetDate, setTargetDate] = useState();\n  const [countdown] = useCountDown({\n    targetDate,\n    onEnd: () => {\n      setIsGetVerificationLoading(false);\n    },\n  });\n  const getVerification = () => {\n    form.validateFields(['Phone']).then(() => {\n      setTargetDate(Date.now() + 60 * 1000);\n      setIsGetVerificationLoading(true);\n    })\n  };\n\n  return (\n    <Form\n      form={form}\n      {...formItemLayout}\n      name=\"ForgetPassword\"\n      size=\"large\"\n      onFinish={onFinishVerification}\n      scrollToFirstError\n      style={{ width: '800px', marginTop: '100px' }}\n    >\n      <Form.Item\n        name=\"Phone\"\n        label={ t('Phone') }\n        rules={[\n          {\n            required: true,\n            message: t('Please input your Phone!'),\n          },\n          {\n            pattern: config.phonePattern,\n            message: t('Incorrect mobile number format!'),\n          },\n        ]}\n      >\n        <Input placeholder={t('Please input your Phone!')} allowClear />\n      </Form.Item>\n\n      <Form.Item\n        name=\"Verification\"\n        label={ t('Verification') }\n        rules={[\n          {\n            required: true,\n            message: t('Please input your Verification!'),\n          },\n          {\n            pattern: config.verificationPattern,\n            message: t('Incorrect format of verification number!')\n          },\n        ]}\n      >\n        <Input placeholder={t('Verification')} addonAfter={\n          isGetVerificationLoading ? `${Math.round(countdown / 1000)}s` : <div className='cursor-pointer' onClick={getVerification}>{t('Get verification code')}</div>\n        } allowClear />\n      </Form.Item>\n\n      <Form.Item {...tailFormItemLayout}>\n        <Button type=\"primary\" htmlType=\"submit\" onClick={() => setIsValidate(true)} className=\"w-full\">\n          { t('Next step') }\n        </Button>\n      </Form.Item>\n    </Form>\n  );\n};\n\nexport default ForgetPasswordVerification;\n","import React, { useState } from 'react';\nimport { useTranslation } from 'react-i18next';\nimport {\n  Button,\n  Form,\n  Input\n} from 'antd';\nimport { useUnmount } from 'ahooks';\n\nconst formItemLayout = {\n  labelCol: {\n    xs: {\n      span: 24,\n    },\n    sm: {\n      span: 4,\n    },\n  },\n  wrapperCol: {\n    xs: {\n      span: 24,\n    },\n    sm: {\n      span: 20,\n    },\n  },\n};\n\nconst tailFormItemLayout = {\n  wrapperCol: {\n    xs: {\n      span: 24,\n      offset: 0,\n    },\n    sm: {\n      span: 20,\n      offset: 4,\n    },\n  },\n};\n\nconst ForgetPasswordReset = ({ onFinishReset }) => {\n  const [isValidate, setIsValidate] = useState(false);\n  const [form] = Form.useForm();\n\n  const { t, i18n } = useTranslation();\n  i18n.on('languageChanged', (lng) => {\n    if (isValidate) form.validateFields();\n  })\n  useUnmount(() => {\n    i18n.off('languageChanged');\n  })\n\n  return (\n    <Form\n      form={form}\n      {...formItemLayout}\n      name=\"ForgetPassword\"\n      size=\"large\"\n      onFinish={onFinishReset}\n      scrollToFirstError\n      style={{ width: '800px', marginTop: '100px' }}\n    >\n      <Form.Item\n        name=\"password\"\n        label={ t('Password') }\n        rules={[\n          {\n            required: true,\n            message: t('Please input your Password!'),\n          },\n        ]}\n      >\n        <Input.Password placeholder={t('Please input your Password!')} allowClear />\n      </Form.Item>\n\n      <Form.Item\n        name=\"confirm\"\n        label={ t('Confirm Password') }\n        dependencies={['password']}\n        rules={[\n          {\n            required: true,\n            message: t('Please confirm your password!'),\n          },\n          ({ getFieldValue }) => ({\n            validator(_, value) {\n              if (!value || getFieldValue('password') === value) {\n                return Promise.resolve();\n              }\n              return Promise.reject(new Error(t('The two passwords that you entered do not match!')));\n            },\n          }),\n        ]}\n      >\n        <Input.Password placeholder={t('Please confirm your password!')} allowClear />\n      </Form.Item>\n\n      <Form.Item {...tailFormItemLayout}>\n        <Button type=\"primary\" htmlType=\"submit\" onClick={() => setIsValidate(true)} className=\"w-full\">\n          { t('Reset password') }\n        </Button>\n      </Form.Item>\n    </Form>\n  );\n};\n\nexport default ForgetPasswordReset;\n","import React, { useState } from 'react';\nimport { Link } from 'react-router-dom';\nimport { useTranslation } from 'react-i18next';\nimport { Steps, theme } from 'antd';\nimport ForgetPasswordVerification from './components/ForgetPasswordVerification';\nimport ForgetPasswordReset from './components/ForgetPasswordReset';\n\nconst { useToken } = theme;\n\nconst ForgetPassword = () => {\n  const { t } = useTranslation();\n  const { token } = useToken();\n  const { colorPrimary } = token;\n\n  const [current, setCurrent] = useState(0);\n  const stepsItems = [\n    {\n      key: 0,\n      title: t('Verification code verification'),\n    },\n    {\n      key: 1,\n      title: t('Reset password'),\n    }\n  ]\n  \n  const onFinishVerification = (values) => {\n    setCurrent(current + 1);\n    console.log('Received values of form: ', values);\n  }\n\n  const onFinishReset = (values) => {\n    console.log('Received values of form: ', values);\n  };\n\n  return (\n    <div style={{ width: '800px' }}>\n      <Steps current={current} items={stepsItems} />\n      {current === 0 ? <ForgetPasswordVerification onFinishVerification={onFinishVerification} /> : <ForgetPasswordReset onFinishReset={onFinishReset} />}\n      <div className='mt-3 clearfix'>\n        <Link className=\"float-left a\" to=\"/login\" style={{color: colorPrimary}}>{t('Login!')}</Link>\n        <Link className=\"float-right a\" to=\"/login/register\" style={{color: colorPrimary}}>{t('register now!')}</Link>\n      </div>\n    </div>\n  );\n};\n\nexport default ForgetPassword;\n"],"names":["formItemLayout","labelCol","xs","span","sm","wrapperCol","tailFormItemLayout","offset","_ref","onFinishVerification","_useState","useState","_useState2","_slicedToArray","isValidate","setIsValidate","_Form$useForm","Form","form","_useTranslation","useTranslation","t","i18n","on","lng","validateFields","useUnmount","off","_useState3","_useState4","isGetVerificationLoading","setIsGetVerificationLoading","_useState5","_useState6","targetDate","setTargetDate","_useCountDown","useCountDown","onEnd","countdown","_jsxs","_objectSpread","name","size","onFinish","scrollToFirstError","style","width","marginTop","children","_jsx","label","rules","required","message","pattern","config","Input","placeholder","allowClear","addonAfter","concat","Math","round","className","onClick","then","Date","now","Button","type","htmlType","onFinishReset","dependencies","_ref2","getFieldValue","validator","_","value","Promise","reject","Error","resolve","useToken","theme","colorPrimary","token","current","setCurrent","stepsItems","key","title","Steps","items","ForgetPasswordVerification","values","console","log","ForgetPasswordReset","Link","to","color"],"sourceRoot":""}