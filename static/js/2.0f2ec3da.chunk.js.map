{"version":3,"file":"static/js/2.0f2ec3da.chunk.js","mappings":"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","sources":["../node_modules/fast-deep-equal/index.js","../node_modules/@react-dnd/invariant/src/index.ts","../node_modules/@react-dnd/shallowequal/src/index.ts","../node_modules/react-dnd-html5-backend/src/utils/js_utils.ts","../node_modules/react-dnd-html5-backend/src/EnterLeaveCounter.ts","../node_modules/react-dnd-html5-backend/src/NativeDragSources/NativeDragSource.ts","../node_modules/react-dnd-html5-backend/src/NativeTypes.ts","../node_modules/react-dnd-html5-backend/src/NativeDragSources/getDataFromDataTransfer.ts","../node_modules/react-dnd-html5-backend/src/NativeDragSources/nativeTypesConfig.ts","../node_modules/react-dnd-html5-backend/src/NativeDragSources/index.ts","../node_modules/react-dnd-html5-backend/src/BrowserDetector.ts","../node_modules/react-dnd-html5-backend/src/MonotonicInterpolant.ts","../node_modules/react-dnd-html5-backend/src/OffsetUtils.ts","../node_modules/react-dnd-html5-backend/src/OptionsReader.ts","../node_modules/react-dnd-html5-backend/src/HTML5BackendImpl.ts","../node_modules/react-dnd-html5-backend/src/index.ts","../node_modules/react-dnd/src/core/DndContext.ts","../node_modules/dnd-core/src/utils/js_utils.ts","../node_modules/dnd-core/src/actions/dragDrop/types.ts","../node_modules/dnd-core/src/actions/dragDrop/local/setClientOffset.ts","../node_modules/dnd-core/src/actions/dragDrop/beginDrag.ts","../node_modules/dnd-core/src/actions/dragDrop/drop.ts","../node_modules/dnd-core/src/actions/dragDrop/endDrag.ts","../node_modules/dnd-core/src/utils/matchesType.ts","../node_modules/dnd-core/src/actions/dragDrop/hover.ts","../node_modules/dnd-core/src/actions/dragDrop/publishDragSource.ts","../node_modules/dnd-core/src/classes/DragDropManagerImpl.ts","../node_modules/dnd-core/src/actions/dragDrop/index.ts","../node_modules/dnd-core/src/utils/coords.ts","../node_modules/dnd-core/src/utils/dirtiness.ts","../node_modules/dnd-core/src/classes/DragDropMonitorImpl.ts","../node_modules/@react-dnd/asap/src/makeRequestCall.ts","../node_modules/@react-dnd/asap/src/AsapQueue.ts","../node_modules/@react-dnd/asap/src/RawTask.ts","../node_modules/@react-dnd/asap/src/TaskFactory.ts","../node_modules/@react-dnd/asap/src/asap.ts","../node_modules/dnd-core/src/actions/registry.ts","../node_modules/dnd-core/src/interfaces.ts","../node_modules/dnd-core/src/contracts.ts","../node_modules/dnd-core/src/utils/getNextUniqueId.ts","../node_modules/dnd-core/src/classes/HandlerRegistryImpl.ts","../node_modules/dnd-core/src/utils/equality.ts","../node_modules/dnd-core/src/reducers/dirtyHandlerIds.ts","../node_modules/dnd-core/src/reducers/dragOffset.ts","../node_modules/dnd-core/src/reducers/dragOperation.ts","../node_modules/dnd-core/src/reducers/refCount.ts","../node_modules/dnd-core/src/reducers/stateId.ts","../node_modules/dnd-core/src/reducers/index.ts","../node_modules/dnd-core/src/createDragDropManager.ts","../node_modules/react-dnd/src/core/DndProvider.tsx","../node_modules/react-dnd/src/hooks/useMonitorOutput.ts","../node_modules/react-dnd/src/hooks/useCollector.ts","../node_modules/react-dnd/src/hooks/useCollectedProps.ts","../node_modules/react-dnd/src/hooks/useDrag/connectors.ts","../node_modules/react-dnd/src/internals/SourceConnector.ts","../node_modules/react-dnd/src/internals/DragSourceMonitorImpl.ts","../node_modules/react-dnd/src/hooks/useDrag/DragSourceImpl.ts","../node_modules/react-dnd/src/hooks/useDrag/useRegisteredDragSource.ts","../node_modules/react-dnd/src/hooks/useDrag/useDragSource.ts","../node_modules/react-dnd/src/hooks/useDrag/useDragType.ts","../node_modules/react-dnd/src/hooks/useDrag/useDrag.ts","../node_modules/react-dnd/src/hooks/useDrag/useDragSourceMonitor.ts","../node_modules/react-dnd/src/hooks/useDrag/useDragSourceConnector.ts","../node_modules/react-dnd/src/hooks/useDragDropManager.ts","../node_modules/react-dnd/src/hooks/useDrop/connectors.ts","../node_modules/react-dnd/src/internals/TargetConnector.ts","../node_modules/react-dnd/src/internals/DropTargetMonitorImpl.ts","../node_modules/react-dnd/src/hooks/useDrop/DropTargetImpl.ts","../node_modules/react-dnd/src/hooks/useDrop/useRegisteredDropTarget.ts","../node_modules/react-dnd/src/hooks/useDrop/useDropTarget.ts","../node_modules/react-dnd/src/hooks/useDrop/useAccept.ts","../node_modules/react-dnd/src/hooks/useDrop/useDrop.ts","../node_modules/react-dnd/src/hooks/useDrop/useDropTargetMonitor.ts","../node_modules/react-dnd/src/hooks/useDrop/useDropTargetConnector.ts","../node_modules/react-dnd/src/hooks/useIsomorphicLayoutEffect.ts","../node_modules/react-dnd/src/hooks/useOptionalFactory.ts","../node_modules/react-dnd/src/internals/isRef.ts","../node_modules/react-dnd/src/internals/registration.ts","../node_modules/react-dnd/src/internals/wrapConnectorHooks.ts"],"sourcesContent":["'use strict';\n\n// do not edit .js files directly - edit src/index.jst\n\n\n\nmodule.exports = function equal(a, b) {\n  if (a === b) return true;\n\n  if (a && b && typeof a == 'object' && typeof b == 'object') {\n    if (a.constructor !== b.constructor) return false;\n\n    var length, i, keys;\n    if (Array.isArray(a)) {\n      length = a.length;\n      if (length != b.length) return false;\n      for (i = length; i-- !== 0;)\n        if (!equal(a[i], b[i])) return false;\n      return true;\n    }\n\n\n\n    if (a.constructor === RegExp) return a.source === b.source && a.flags === b.flags;\n    if (a.valueOf !== Object.prototype.valueOf) return a.valueOf() === b.valueOf();\n    if (a.toString !== Object.prototype.toString) return a.toString() === b.toString();\n\n    keys = Object.keys(a);\n    length = keys.length;\n    if (length !== Object.keys(b).length) return false;\n\n    for (i = length; i-- !== 0;)\n      if (!Object.prototype.hasOwnProperty.call(b, keys[i])) return false;\n\n    for (i = length; i-- !== 0;) {\n      var key = keys[i];\n\n      if (!equal(a[key], b[key])) return false;\n    }\n\n    return true;\n  }\n\n  // true if both NaN, false otherwise\n  return a!==a && b!==b;\n};\n","/**\n * Use invariant() to assert state which your program assumes to be true.\n *\n * Provide sprintf-style format (only %s is supported) and arguments\n * to provide information about what broke and what you were\n * expecting.\n *\n * The invariant message will be stripped in production, but the invariant\n * will remain to ensure logic does not differ in production.\n */\n\nexport function invariant(condition: any, format: string, ...args: any[]) {\n\tif (isProduction()) {\n\t\tif (format === undefined) {\n\t\t\tthrow new Error('invariant requires an error message argument')\n\t\t}\n\t}\n\n\tif (!condition) {\n\t\tlet error\n\t\tif (format === undefined) {\n\t\t\terror = new Error(\n\t\t\t\t'Minified exception occurred; use the non-minified dev environment ' +\n\t\t\t\t\t'for the full error message and additional helpful warnings.',\n\t\t\t)\n\t\t} else {\n\t\t\tlet argIndex = 0\n\t\t\terror = new Error(\n\t\t\t\tformat.replace(/%s/g, function () {\n\t\t\t\t\treturn args[argIndex++]\n\t\t\t\t}),\n\t\t\t)\n\t\t\terror.name = 'Invariant Violation'\n\t\t}\n\n\t\t;(error as any).framesToPop = 1 // we don't care about invariant's own frame\n\t\tthrow error\n\t}\n}\n\nfunction isProduction() {\n\treturn (\n\t\ttypeof process !== 'undefined' && process.env['NODE_ENV'] === 'production'\n\t)\n}\n","export function shallowEqual<T>(\n\tobjA: T,\n\tobjB: T,\n\tcompare?: (a: T, b: T, key?: string) => boolean | void,\n\tcompareContext?: any,\n) {\n\tlet compareResult = compare\n\t\t? compare.call(compareContext, objA, objB)\n\t\t: void 0\n\tif (compareResult !== void 0) {\n\t\treturn !!compareResult\n\t}\n\n\tif (objA === objB) {\n\t\treturn true\n\t}\n\n\tif (typeof objA !== 'object' || !objA || typeof objB !== 'object' || !objB) {\n\t\treturn false\n\t}\n\n\tconst keysA = Object.keys(objA)\n\tconst keysB = Object.keys(objB)\n\n\tif (keysA.length !== keysB.length) {\n\t\treturn false\n\t}\n\n\tconst bHasOwnProperty = Object.prototype.hasOwnProperty.bind(objB)\n\n\t// Test for A's keys different from B.\n\tfor (let idx = 0; idx < keysA.length; idx++) {\n\t\tconst key = keysA[idx] as string\n\n\t\tif (!bHasOwnProperty(key)) {\n\t\t\treturn false\n\t\t}\n\n\t\tconst valueA = (objA as any)[key]\n\t\tconst valueB = (objB as any)[key]\n\n\t\tcompareResult = compare\n\t\t\t? compare.call(compareContext, valueA, valueB, key)\n\t\t\t: void 0\n\n\t\tif (\n\t\t\tcompareResult === false ||\n\t\t\t(compareResult === void 0 && valueA !== valueB)\n\t\t) {\n\t\t\treturn false\n\t\t}\n\t}\n\n\treturn true\n}\n","// cheap lodash replacements\n\nexport function memoize<T>(fn: () => T): () => T {\n\tlet result: T | null = null\n\tconst memoized = () => {\n\t\tif (result == null) {\n\t\t\tresult = fn()\n\t\t}\n\t\treturn result\n\t}\n\treturn memoized\n}\n\n/**\n * drop-in replacement for _.without\n */\nexport function without<T>(items: T[], item: T) {\n\treturn items.filter((i) => i !== item)\n}\n\nexport function union<T extends string | number>(itemsA: T[], itemsB: T[]) {\n\tconst set = new Set<T>()\n\tconst insertItem = (item: T) => set.add(item)\n\titemsA.forEach(insertItem)\n\titemsB.forEach(insertItem)\n\n\tconst result: T[] = []\n\tset.forEach((key) => result.push(key))\n\treturn result\n}\n","import { union, without } from './utils/js_utils.js'\n\ntype NodePredicate = (node: Node | null | undefined) => boolean\n\nexport class EnterLeaveCounter {\n\tprivate entered: any[] = []\n\tprivate isNodeInDocument: NodePredicate\n\n\tpublic constructor(isNodeInDocument: NodePredicate) {\n\t\tthis.isNodeInDocument = isNodeInDocument\n\t}\n\n\tpublic enter(enteringNode: EventTarget | null): boolean {\n\t\tconst previousLength = this.entered.length\n\n\t\tconst isNodeEntered = (node: Node): boolean =>\n\t\t\tthis.isNodeInDocument(node) &&\n\t\t\t(!node.contains || node.contains(enteringNode as Node))\n\n\t\tthis.entered = union(this.entered.filter(isNodeEntered), [enteringNode])\n\n\t\treturn previousLength === 0 && this.entered.length > 0\n\t}\n\n\tpublic leave(leavingNode: EventTarget | null): boolean {\n\t\tconst previousLength = this.entered.length\n\n\t\tthis.entered = without(\n\t\t\tthis.entered.filter(this.isNodeInDocument),\n\t\t\tleavingNode,\n\t\t)\n\n\t\treturn previousLength > 0 && this.entered.length === 0\n\t}\n\n\tpublic reset(): void {\n\t\tthis.entered = []\n\t}\n}\n","import type { DragDropMonitor } from 'dnd-core'\n\nimport type { NativeItemConfig } from './nativeTypesConfig.js'\n\nexport class NativeDragSource {\n\tpublic item: any\n\tprivate config: NativeItemConfig\n\n\tpublic constructor(config: NativeItemConfig) {\n\t\tthis.config = config\n\t\tthis.item = {}\n\t\tthis.initializeExposedProperties()\n\t}\n\n\tprivate initializeExposedProperties() {\n\t\tObject.keys(this.config.exposeProperties).forEach((property) => {\n\t\t\tObject.defineProperty(this.item, property, {\n\t\t\t\tconfigurable: true, // This is needed to allow redefining it later\n\t\t\t\tenumerable: true,\n\t\t\t\tget() {\n\t\t\t\t\t// eslint-disable-next-line no-console\n\t\t\t\t\tconsole.warn(\n\t\t\t\t\t\t`Browser doesn't allow reading \"${property}\" until the drop event.`,\n\t\t\t\t\t)\n\t\t\t\t\treturn null\n\t\t\t\t},\n\t\t\t})\n\t\t})\n\t}\n\n\tpublic loadDataTransfer(dataTransfer: DataTransfer | null | undefined): void {\n\t\tif (dataTransfer) {\n\t\t\tconst newProperties: PropertyDescriptorMap = {}\n\t\t\tObject.keys(this.config.exposeProperties).forEach((property) => {\n\t\t\t\tconst propertyFn = this.config.exposeProperties[property]\n\t\t\t\tif (propertyFn != null) {\n\t\t\t\t\tnewProperties[property] = {\n\t\t\t\t\t\tvalue: propertyFn(dataTransfer, this.config.matchesTypes),\n\t\t\t\t\t\tconfigurable: true,\n\t\t\t\t\t\tenumerable: true,\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t})\n\t\t\tObject.defineProperties(this.item, newProperties)\n\t\t}\n\t}\n\n\tpublic canDrag(): boolean {\n\t\treturn true\n\t}\n\n\tpublic beginDrag(): any {\n\t\treturn this.item\n\t}\n\n\tpublic isDragging(monitor: DragDropMonitor, handle: string): boolean {\n\t\treturn handle === monitor.getSourceId()\n\t}\n\n\tpublic endDrag(): void {\n\t\t// empty\n\t}\n}\n","export const FILE = '__NATIVE_FILE__'\nexport const URL = '__NATIVE_URL__'\nexport const TEXT = '__NATIVE_TEXT__'\nexport const HTML = '__NATIVE_HTML__'\n","export function getDataFromDataTransfer(\n\tdataTransfer: DataTransfer,\n\ttypesToTry: string[],\n\tdefaultValue: string,\n): string {\n\tconst result = typesToTry.reduce(\n\t\t(resultSoFar, typeToTry) => resultSoFar || dataTransfer.getData(typeToTry),\n\t\t'',\n\t)\n\n\treturn result != null ? result : defaultValue\n}\n","import * as NativeTypes from '../NativeTypes.js'\nimport { getDataFromDataTransfer } from './getDataFromDataTransfer.js'\n\nexport interface NativeItemConfigExposePropreties {\n\t[property: string]: (\n\t\tdataTransfer: DataTransfer,\n\t\tmatchesTypes: string[],\n\t) => any\n}\n\nexport interface NativeItemConfig {\n\texposeProperties: NativeItemConfigExposePropreties\n\tmatchesTypes: string[]\n}\n\nexport const nativeTypesConfig: {\n\t[key: string]: NativeItemConfig\n} = {\n\t[NativeTypes.FILE]: {\n\t\texposeProperties: {\n\t\t\tfiles: (dataTransfer: DataTransfer): File[] =>\n\t\t\t\tArray.prototype.slice.call(dataTransfer.files),\n\t\t\titems: (dataTransfer: DataTransfer): DataTransferItemList =>\n\t\t\t\tdataTransfer.items,\n\t\t\tdataTransfer: (dataTransfer: DataTransfer): DataTransfer => dataTransfer,\n\t\t},\n\t\tmatchesTypes: ['Files'],\n\t},\n\t[NativeTypes.HTML]: {\n\t\texposeProperties: {\n\t\t\thtml: (dataTransfer: DataTransfer, matchesTypes: string[]): string =>\n\t\t\t\tgetDataFromDataTransfer(dataTransfer, matchesTypes, ''),\n\t\t\tdataTransfer: (dataTransfer: DataTransfer): DataTransfer => dataTransfer,\n\t\t},\n\t\tmatchesTypes: ['Html', 'text/html'],\n\t},\n\t[NativeTypes.URL]: {\n\t\texposeProperties: {\n\t\t\turls: (dataTransfer: DataTransfer, matchesTypes: string[]): string[] =>\n\t\t\t\tgetDataFromDataTransfer(dataTransfer, matchesTypes, '').split('\\n'),\n\t\t\tdataTransfer: (dataTransfer: DataTransfer): DataTransfer => dataTransfer,\n\t\t},\n\t\tmatchesTypes: ['Url', 'text/uri-list'],\n\t},\n\t[NativeTypes.TEXT]: {\n\t\texposeProperties: {\n\t\t\ttext: (dataTransfer: DataTransfer, matchesTypes: string[]): string =>\n\t\t\t\tgetDataFromDataTransfer(dataTransfer, matchesTypes, ''),\n\t\t\tdataTransfer: (dataTransfer: DataTransfer): DataTransfer => dataTransfer,\n\t\t},\n\t\tmatchesTypes: ['Text', 'text/plain'],\n\t},\n}\n","import { NativeDragSource } from './NativeDragSource.js'\nimport { nativeTypesConfig } from './nativeTypesConfig.js'\n\nexport function createNativeDragSource(\n\ttype: string,\n\tdataTransfer?: DataTransfer,\n): NativeDragSource {\n\tconst config = nativeTypesConfig[type]\n\tif (!config) {\n\t\tthrow new Error(`native type ${type} has no configuration`)\n\t}\n\tconst result = new NativeDragSource(config)\n\tresult.loadDataTransfer(dataTransfer)\n\treturn result\n}\n\nexport function matchNativeItemType(\n\tdataTransfer: DataTransfer | null,\n): string | null {\n\tif (!dataTransfer) {\n\t\treturn null\n\t}\n\n\tconst dataTransferTypes = Array.prototype.slice.call(dataTransfer.types || [])\n\treturn (\n\t\tObject.keys(nativeTypesConfig).filter((nativeItemType) => {\n\t\t\tconst typeConfig = nativeTypesConfig[nativeItemType]\n\t\t\tif (!typeConfig?.matchesTypes) {\n\t\t\t\treturn false\n\t\t\t}\n\t\t\treturn typeConfig.matchesTypes.some(\n\t\t\t\t(t) => dataTransferTypes.indexOf(t) > -1,\n\t\t\t)\n\t\t})[0] || null\n\t)\n}\n","import { memoize } from './utils/js_utils.js'\n\ndeclare global {\n\tinterface Window extends HTMLElement {\n\t\tsafari: any\n\t}\n}\n\nexport type Predicate = () => boolean\nexport const isFirefox: Predicate = memoize(() =>\n\t/firefox/i.test(navigator.userAgent),\n)\nexport const isSafari: Predicate = memoize(() => Boolean(window.safari))\n","export class MonotonicInterpolant {\n\tprivate xs: any\n\tprivate ys: any\n\tprivate c1s: any\n\tprivate c2s: any\n\tprivate c3s: any\n\n\tpublic constructor(xs: number[], ys: number[]) {\n\t\tconst { length } = xs\n\n\t\t// Rearrange xs and ys so that xs is sorted\n\t\tconst indexes = []\n\t\tfor (let i = 0; i < length; i++) {\n\t\t\tindexes.push(i)\n\t\t}\n\t\tindexes.sort((a, b) => ((xs[a] as number) < (xs[b] as number) ? -1 : 1))\n\n\t\t// Get consecutive differences and slopes\n\t\tconst dys = []\n\t\tconst dxs = []\n\t\tconst ms = []\n\t\tlet dx\n\t\tlet dy\n\t\tfor (let i = 0; i < length - 1; i++) {\n\t\t\tdx = (xs[i + 1] as number) - (xs[i] as number)\n\t\t\tdy = (ys[i + 1] as number) - (ys[i] as number)\n\t\t\tdxs.push(dx)\n\t\t\tdys.push(dy)\n\t\t\tms.push(dy / dx)\n\t\t}\n\n\t\t// Get degree-1 coefficients\n\t\tconst c1s = [ms[0]]\n\t\tfor (let i = 0; i < dxs.length - 1; i++) {\n\t\t\tconst m2 = ms[i] as number\n\t\t\tconst mNext = ms[i + 1] as number\n\t\t\tif (m2 * mNext <= 0) {\n\t\t\t\tc1s.push(0)\n\t\t\t} else {\n\t\t\t\tdx = dxs[i] as number\n\t\t\t\tconst dxNext = dxs[i + 1] as number\n\t\t\t\tconst common = dx + dxNext\n\t\t\t\tc1s.push(\n\t\t\t\t\t(3 * common) / ((common + dxNext) / m2 + (common + dx) / mNext),\n\t\t\t\t)\n\t\t\t}\n\t\t}\n\t\tc1s.push(ms[ms.length - 1])\n\n\t\t// Get degree-2 and degree-3 coefficients\n\t\tconst c2s = []\n\t\tconst c3s = []\n\t\tlet m\n\t\tfor (let i = 0; i < c1s.length - 1; i++) {\n\t\t\tm = ms[i] as number\n\t\t\tconst c1 = c1s[i] as number\n\t\t\tconst invDx = 1 / (dxs[i] as number)\n\t\t\tconst common = c1 + (c1s[i + 1] as number) - m - m\n\t\t\tc2s.push((m - c1 - common) * invDx)\n\t\t\tc3s.push(common * invDx * invDx)\n\t\t}\n\n\t\tthis.xs = xs\n\t\tthis.ys = ys\n\t\tthis.c1s = c1s\n\t\tthis.c2s = c2s\n\t\tthis.c3s = c3s\n\t}\n\n\tpublic interpolate(x: number): number {\n\t\tconst { xs, ys, c1s, c2s, c3s } = this\n\n\t\t// The rightmost point in the dataset should give an exact result\n\t\tlet i = xs.length - 1\n\t\tif (x === xs[i]) {\n\t\t\treturn ys[i]\n\t\t}\n\n\t\t// Search for the interval x is in, returning the corresponding y if x is one of the original xs\n\t\tlet low = 0\n\t\tlet high = c3s.length - 1\n\t\tlet mid\n\t\twhile (low <= high) {\n\t\t\tmid = Math.floor(0.5 * (low + high))\n\t\t\tconst xHere = xs[mid]\n\t\t\tif (xHere < x) {\n\t\t\t\tlow = mid + 1\n\t\t\t} else if (xHere > x) {\n\t\t\t\thigh = mid - 1\n\t\t\t} else {\n\t\t\t\treturn ys[mid]\n\t\t\t}\n\t\t}\n\t\ti = Math.max(0, high)\n\n\t\t// Interpolate\n\t\tconst diff = x - xs[i]\n\t\tconst diffSq = diff * diff\n\t\treturn ys[i] + c1s[i] * diff + c2s[i] * diffSq + c3s[i] * diff * diffSq\n\t}\n}\n","import type { XYCoord } from 'dnd-core'\n\nimport { isFirefox, isSafari } from './BrowserDetector.js'\nimport { MonotonicInterpolant } from './MonotonicInterpolant.js'\n\nconst ELEMENT_NODE = 1\n\nexport function getNodeClientOffset(node: Node): XYCoord | null {\n\tconst el = node.nodeType === ELEMENT_NODE ? node : node.parentElement\n\n\tif (!el) {\n\t\treturn null\n\t}\n\n\tconst { top, left } = (el as HTMLElement).getBoundingClientRect()\n\treturn { x: left, y: top }\n}\n\nexport function getEventClientOffset(e: MouseEvent): XYCoord {\n\treturn {\n\t\tx: e.clientX,\n\t\ty: e.clientY,\n\t}\n}\n\nfunction isImageNode(node: any) {\n\treturn (\n\t\tnode.nodeName === 'IMG' &&\n\t\t(isFirefox() || !document.documentElement?.contains(node))\n\t)\n}\n\nfunction getDragPreviewSize(\n\tisImage: boolean,\n\tdragPreview: any,\n\tsourceWidth: number,\n\tsourceHeight: number,\n) {\n\tlet dragPreviewWidth = isImage ? dragPreview.width : sourceWidth\n\tlet dragPreviewHeight = isImage ? dragPreview.height : sourceHeight\n\n\t// Work around @2x coordinate discrepancies in browsers\n\tif (isSafari() && isImage) {\n\t\tdragPreviewHeight /= window.devicePixelRatio\n\t\tdragPreviewWidth /= window.devicePixelRatio\n\t}\n\treturn { dragPreviewWidth, dragPreviewHeight }\n}\n\nexport function getDragPreviewOffset(\n\tsourceNode: HTMLElement,\n\tdragPreview: HTMLElement,\n\tclientOffset: XYCoord,\n\tanchorPoint: { anchorX: number; anchorY: number },\n\toffsetPoint: { offsetX: number; offsetY: number },\n): XYCoord {\n\t// The browsers will use the image intrinsic size under different conditions.\n\t// Firefox only cares if it's an image, but WebKit also wants it to be detached.\n\tconst isImage = isImageNode(dragPreview)\n\tconst dragPreviewNode = isImage ? sourceNode : dragPreview\n\tconst dragPreviewNodeOffsetFromClient = getNodeClientOffset(\n\t\tdragPreviewNode,\n\t) as XYCoord\n\tconst offsetFromDragPreview = {\n\t\tx: clientOffset.x - dragPreviewNodeOffsetFromClient.x,\n\t\ty: clientOffset.y - dragPreviewNodeOffsetFromClient.y,\n\t}\n\tconst { offsetWidth: sourceWidth, offsetHeight: sourceHeight } = sourceNode\n\tconst { anchorX, anchorY } = anchorPoint\n\tconst { dragPreviewWidth, dragPreviewHeight } = getDragPreviewSize(\n\t\tisImage,\n\t\tdragPreview,\n\t\tsourceWidth,\n\t\tsourceHeight,\n\t)\n\n\tconst calculateYOffset = () => {\n\t\tconst interpolantY = new MonotonicInterpolant(\n\t\t\t[0, 0.5, 1],\n\t\t\t[\n\t\t\t\t// Dock to the top\n\t\t\t\toffsetFromDragPreview.y,\n\t\t\t\t// Align at the center\n\t\t\t\t(offsetFromDragPreview.y / sourceHeight) * dragPreviewHeight,\n\t\t\t\t// Dock to the bottom\n\t\t\t\toffsetFromDragPreview.y + dragPreviewHeight - sourceHeight,\n\t\t\t],\n\t\t)\n\t\tlet y = interpolantY.interpolate(anchorY)\n\t\t// Work around Safari 8 positioning bug\n\t\tif (isSafari() && isImage) {\n\t\t\t// We'll have to wait for @3x to see if this is entirely correct\n\t\t\ty += (window.devicePixelRatio - 1) * dragPreviewHeight\n\t\t}\n\t\treturn y\n\t}\n\n\tconst calculateXOffset = () => {\n\t\t// Interpolate coordinates depending on anchor point\n\t\t// If you know a simpler way to do this, let me know\n\t\tconst interpolantX = new MonotonicInterpolant(\n\t\t\t[0, 0.5, 1],\n\t\t\t[\n\t\t\t\t// Dock to the left\n\t\t\t\toffsetFromDragPreview.x,\n\t\t\t\t// Align at the center\n\t\t\t\t(offsetFromDragPreview.x / sourceWidth) * dragPreviewWidth,\n\t\t\t\t// Dock to the right\n\t\t\t\toffsetFromDragPreview.x + dragPreviewWidth - sourceWidth,\n\t\t\t],\n\t\t)\n\t\treturn interpolantX.interpolate(anchorX)\n\t}\n\n\t// Force offsets if specified in the options.\n\tconst { offsetX, offsetY } = offsetPoint\n\tconst isManualOffsetX = offsetX === 0 || offsetX\n\tconst isManualOffsetY = offsetY === 0 || offsetY\n\treturn {\n\t\tx: isManualOffsetX ? offsetX : calculateXOffset(),\n\t\ty: isManualOffsetY ? offsetY : calculateYOffset(),\n\t}\n}\n","import type { HTML5BackendContext, HTML5BackendOptions } from './types.js'\n\nexport class OptionsReader {\n\tpublic ownerDocument: Document | null = null\n\tprivate globalContext: HTML5BackendContext\n\tprivate optionsArgs: HTML5BackendOptions | undefined\n\n\tpublic constructor(\n\t\tglobalContext: HTML5BackendContext,\n\t\toptions?: HTML5BackendOptions,\n\t) {\n\t\tthis.globalContext = globalContext\n\t\tthis.optionsArgs = options\n\t}\n\n\tpublic get window(): Window | undefined {\n\t\tif (this.globalContext) {\n\t\t\treturn this.globalContext\n\t\t} else if (typeof window !== 'undefined') {\n\t\t\treturn window\n\t\t}\n\t\treturn undefined\n\t}\n\n\tpublic get document(): Document | undefined {\n\t\tif (this.globalContext?.document) {\n\t\t\treturn this.globalContext.document\n\t\t} else if (this.window) {\n\t\t\treturn this.window.document\n\t\t} else {\n\t\t\treturn undefined\n\t\t}\n\t}\n\n\tpublic get rootElement(): Node | undefined {\n\t\treturn this.optionsArgs?.rootElement || this.window\n\t}\n}\n","import type {\n\tBackend,\n\tDragDropActions,\n\tDragDropManager,\n\tDragDropMonitor,\n\tHandlerRegistry,\n\tIdentifier,\n\tUnsubscribe,\n\tXYCoord,\n} from 'dnd-core'\n\nimport { EnterLeaveCounter } from './EnterLeaveCounter.js'\nimport {\n\tcreateNativeDragSource,\n\tmatchNativeItemType,\n} from './NativeDragSources/index.js'\nimport type { NativeDragSource } from './NativeDragSources/NativeDragSource.js'\nimport * as NativeTypes from './NativeTypes.js'\nimport {\n\tgetDragPreviewOffset,\n\tgetEventClientOffset,\n\tgetNodeClientOffset,\n} from './OffsetUtils.js'\nimport { OptionsReader } from './OptionsReader.js'\nimport type { HTML5BackendContext, HTML5BackendOptions } from './types.js'\n\ntype RootNode = Node & { __isReactDndBackendSetUp: boolean | undefined }\n\nexport class HTML5BackendImpl implements Backend {\n\tprivate options: OptionsReader\n\n\t// React-Dnd Components\n\tprivate actions: DragDropActions\n\tprivate monitor: DragDropMonitor\n\tprivate registry: HandlerRegistry\n\n\t// Internal State\n\tprivate enterLeaveCounter: EnterLeaveCounter\n\n\tprivate sourcePreviewNodes: Map<string, Element> = new Map()\n\tprivate sourcePreviewNodeOptions: Map<string, any> = new Map()\n\tprivate sourceNodes: Map<string, Element> = new Map()\n\tprivate sourceNodeOptions: Map<string, any> = new Map()\n\n\tprivate dragStartSourceIds: string[] | null = null\n\tprivate dropTargetIds: string[] = []\n\tprivate dragEnterTargetIds: string[] = []\n\tprivate currentNativeSource: NativeDragSource | null = null\n\tprivate currentNativeHandle: Identifier | null = null\n\tprivate currentDragSourceNode: Element | null = null\n\tprivate altKeyPressed = false\n\tprivate mouseMoveTimeoutTimer: number | null = null\n\tprivate asyncEndDragFrameId: number | null = null\n\tprivate dragOverTargetIds: string[] | null = null\n\n\tprivate lastClientOffset: XYCoord | null = null\n\tprivate hoverRafId: number | null = null\n\n\tpublic constructor(\n\t\tmanager: DragDropManager,\n\t\tglobalContext?: HTML5BackendContext,\n\t\toptions?: HTML5BackendOptions,\n\t) {\n\t\tthis.options = new OptionsReader(globalContext, options)\n\t\tthis.actions = manager.getActions()\n\t\tthis.monitor = manager.getMonitor()\n\t\tthis.registry = manager.getRegistry()\n\t\tthis.enterLeaveCounter = new EnterLeaveCounter(this.isNodeInDocument)\n\t}\n\n\t/**\n\t * Generate profiling statistics for the HTML5Backend.\n\t */\n\tpublic profile(): Record<string, number> {\n\t\treturn {\n\t\t\tsourcePreviewNodes: this.sourcePreviewNodes.size,\n\t\t\tsourcePreviewNodeOptions: this.sourcePreviewNodeOptions.size,\n\t\t\tsourceNodeOptions: this.sourceNodeOptions.size,\n\t\t\tsourceNodes: this.sourceNodes.size,\n\t\t\tdragStartSourceIds: this.dragStartSourceIds?.length || 0,\n\t\t\tdropTargetIds: this.dropTargetIds.length,\n\t\t\tdragEnterTargetIds: this.dragEnterTargetIds.length,\n\t\t\tdragOverTargetIds: this.dragOverTargetIds?.length || 0,\n\t\t}\n\t}\n\n\t// public for test\n\tpublic get window(): Window | undefined {\n\t\treturn this.options.window\n\t}\n\tpublic get document(): Document | undefined {\n\t\treturn this.options.document\n\t}\n\t/**\n\t * Get the root element to use for event subscriptions\n\t */\n\tprivate get rootElement(): Node | undefined {\n\t\treturn this.options.rootElement as Node\n\t}\n\n\tpublic setup(): void {\n\t\tconst root = this.rootElement as RootNode | undefined\n\t\tif (root === undefined) {\n\t\t\treturn\n\t\t}\n\n\t\tif (root.__isReactDndBackendSetUp) {\n\t\t\tthrow new Error('Cannot have two HTML5 backends at the same time.')\n\t\t}\n\t\troot.__isReactDndBackendSetUp = true\n\t\tthis.addEventListeners(root)\n\t}\n\n\tpublic teardown(): void {\n\t\tconst root = this.rootElement as RootNode\n\t\tif (root === undefined) {\n\t\t\treturn\n\t\t}\n\n\t\troot.__isReactDndBackendSetUp = false\n\t\tthis.removeEventListeners(this.rootElement as Element)\n\t\tthis.clearCurrentDragSourceNode()\n\t\tif (this.asyncEndDragFrameId) {\n\t\t\tthis.window?.cancelAnimationFrame(this.asyncEndDragFrameId)\n\t\t}\n\t}\n\n\tpublic connectDragPreview(\n\t\tsourceId: string,\n\t\tnode: Element,\n\t\toptions: any,\n\t): Unsubscribe {\n\t\tthis.sourcePreviewNodeOptions.set(sourceId, options)\n\t\tthis.sourcePreviewNodes.set(sourceId, node)\n\n\t\treturn (): void => {\n\t\t\tthis.sourcePreviewNodes.delete(sourceId)\n\t\t\tthis.sourcePreviewNodeOptions.delete(sourceId)\n\t\t}\n\t}\n\n\tpublic connectDragSource(\n\t\tsourceId: string,\n\t\tnode: Element,\n\t\toptions: any,\n\t): Unsubscribe {\n\t\tthis.sourceNodes.set(sourceId, node)\n\t\tthis.sourceNodeOptions.set(sourceId, options)\n\n\t\tconst handleDragStart = (e: any) => this.handleDragStart(e, sourceId)\n\t\tconst handleSelectStart = (e: any) => this.handleSelectStart(e)\n\n\t\tnode.setAttribute('draggable', 'true')\n\t\tnode.addEventListener('dragstart', handleDragStart)\n\t\tnode.addEventListener('selectstart', handleSelectStart)\n\n\t\treturn (): void => {\n\t\t\tthis.sourceNodes.delete(sourceId)\n\t\t\tthis.sourceNodeOptions.delete(sourceId)\n\n\t\t\tnode.removeEventListener('dragstart', handleDragStart)\n\t\t\tnode.removeEventListener('selectstart', handleSelectStart)\n\t\t\tnode.setAttribute('draggable', 'false')\n\t\t}\n\t}\n\n\tpublic connectDropTarget(targetId: string, node: HTMLElement): Unsubscribe {\n\t\tconst handleDragEnter = (e: DragEvent) => this.handleDragEnter(e, targetId)\n\t\tconst handleDragOver = (e: DragEvent) => this.handleDragOver(e, targetId)\n\t\tconst handleDrop = (e: DragEvent) => this.handleDrop(e, targetId)\n\n\t\tnode.addEventListener('dragenter', handleDragEnter)\n\t\tnode.addEventListener('dragover', handleDragOver)\n\t\tnode.addEventListener('drop', handleDrop)\n\n\t\treturn (): void => {\n\t\t\tnode.removeEventListener('dragenter', handleDragEnter)\n\t\t\tnode.removeEventListener('dragover', handleDragOver)\n\t\t\tnode.removeEventListener('drop', handleDrop)\n\t\t}\n\t}\n\n\tprivate addEventListeners(target: Node) {\n\t\t// SSR Fix (https://github.com/react-dnd/react-dnd/pull/813\n\t\tif (!target.addEventListener) {\n\t\t\treturn\n\t\t}\n\t\ttarget.addEventListener(\n\t\t\t'dragstart',\n\t\t\tthis.handleTopDragStart as EventListener,\n\t\t)\n\t\ttarget.addEventListener('dragstart', this.handleTopDragStartCapture, true)\n\t\ttarget.addEventListener('dragend', this.handleTopDragEndCapture, true)\n\t\ttarget.addEventListener(\n\t\t\t'dragenter',\n\t\t\tthis.handleTopDragEnter as EventListener,\n\t\t)\n\t\ttarget.addEventListener(\n\t\t\t'dragenter',\n\t\t\tthis.handleTopDragEnterCapture as EventListener,\n\t\t\ttrue,\n\t\t)\n\t\ttarget.addEventListener(\n\t\t\t'dragleave',\n\t\t\tthis.handleTopDragLeaveCapture as EventListener,\n\t\t\ttrue,\n\t\t)\n\t\ttarget.addEventListener('dragover', this.handleTopDragOver as EventListener)\n\t\ttarget.addEventListener(\n\t\t\t'dragover',\n\t\t\tthis.handleTopDragOverCapture as EventListener,\n\t\t\ttrue,\n\t\t)\n\t\ttarget.addEventListener('drop', this.handleTopDrop as EventListener)\n\t\ttarget.addEventListener(\n\t\t\t'drop',\n\t\t\tthis.handleTopDropCapture as EventListener,\n\t\t\ttrue,\n\t\t)\n\t}\n\n\tprivate removeEventListeners(target: Node) {\n\t\t// SSR Fix (https://github.com/react-dnd/react-dnd/pull/813\n\t\tif (!target.removeEventListener) {\n\t\t\treturn\n\t\t}\n\t\ttarget.removeEventListener('dragstart', this.handleTopDragStart as any)\n\t\ttarget.removeEventListener(\n\t\t\t'dragstart',\n\t\t\tthis.handleTopDragStartCapture,\n\t\t\ttrue,\n\t\t)\n\t\ttarget.removeEventListener('dragend', this.handleTopDragEndCapture, true)\n\t\ttarget.removeEventListener(\n\t\t\t'dragenter',\n\t\t\tthis.handleTopDragEnter as EventListener,\n\t\t)\n\t\ttarget.removeEventListener(\n\t\t\t'dragenter',\n\t\t\tthis.handleTopDragEnterCapture as EventListener,\n\t\t\ttrue,\n\t\t)\n\t\ttarget.removeEventListener(\n\t\t\t'dragleave',\n\t\t\tthis.handleTopDragLeaveCapture as EventListener,\n\t\t\ttrue,\n\t\t)\n\t\ttarget.removeEventListener(\n\t\t\t'dragover',\n\t\t\tthis.handleTopDragOver as EventListener,\n\t\t)\n\t\ttarget.removeEventListener(\n\t\t\t'dragover',\n\t\t\tthis.handleTopDragOverCapture as EventListener,\n\t\t\ttrue,\n\t\t)\n\t\ttarget.removeEventListener('drop', this.handleTopDrop as EventListener)\n\t\ttarget.removeEventListener(\n\t\t\t'drop',\n\t\t\tthis.handleTopDropCapture as EventListener,\n\t\t\ttrue,\n\t\t)\n\t}\n\n\tprivate getCurrentSourceNodeOptions() {\n\t\tconst sourceId = this.monitor.getSourceId() as string\n\t\tconst sourceNodeOptions = this.sourceNodeOptions.get(sourceId)\n\n\t\treturn {\n\t\t\tdropEffect: this.altKeyPressed ? 'copy' : 'move',\n\t\t\t...(sourceNodeOptions || {}),\n\t\t}\n\t}\n\n\tprivate getCurrentDropEffect() {\n\t\tif (this.isDraggingNativeItem()) {\n\t\t\t// It makes more sense to default to 'copy' for native resources\n\t\t\treturn 'copy'\n\t\t}\n\n\t\treturn this.getCurrentSourceNodeOptions().dropEffect\n\t}\n\n\tprivate getCurrentSourcePreviewNodeOptions() {\n\t\tconst sourceId = this.monitor.getSourceId() as string\n\t\tconst sourcePreviewNodeOptions = this.sourcePreviewNodeOptions.get(sourceId)\n\n\t\treturn {\n\t\t\tanchorX: 0.5,\n\t\t\tanchorY: 0.5,\n\t\t\tcaptureDraggingState: false,\n\t\t\t...(sourcePreviewNodeOptions || {}),\n\t\t}\n\t}\n\n\tprivate getSourceClientOffset = (sourceId: string): XYCoord | null => {\n\t\tconst source = this.sourceNodes.get(sourceId)\n\t\treturn (source && getNodeClientOffset(source as HTMLElement)) || null\n\t}\n\n\tprivate isDraggingNativeItem() {\n\t\tconst itemType = this.monitor.getItemType()\n\t\treturn Object.keys(NativeTypes).some(\n\t\t\t(key: string) => (NativeTypes as any)[key] === itemType,\n\t\t)\n\t}\n\n\tprivate beginDragNativeItem(type: string, dataTransfer?: DataTransfer) {\n\t\tthis.clearCurrentDragSourceNode()\n\n\t\tthis.currentNativeSource = createNativeDragSource(type, dataTransfer)\n\t\tthis.currentNativeHandle = this.registry.addSource(\n\t\t\ttype,\n\t\t\tthis.currentNativeSource,\n\t\t)\n\t\tthis.actions.beginDrag([this.currentNativeHandle])\n\t}\n\n\tprivate endDragNativeItem = (): void => {\n\t\tif (!this.isDraggingNativeItem()) {\n\t\t\treturn\n\t\t}\n\n\t\tthis.actions.endDrag()\n\t\tif (this.currentNativeHandle) {\n\t\t\tthis.registry.removeSource(this.currentNativeHandle)\n\t\t}\n\t\tthis.currentNativeHandle = null\n\t\tthis.currentNativeSource = null\n\t}\n\n\tprivate isNodeInDocument = (node: Node | null | undefined): boolean => {\n\t\t// Check the node either in the main document or in the current context\n\t\treturn Boolean(\n\t\t\tnode &&\n\t\t\t\tthis.document &&\n\t\t\t\tthis.document.body &&\n\t\t\t\tthis.document.body.contains(node),\n\t\t)\n\t}\n\n\tprivate endDragIfSourceWasRemovedFromDOM = (): void => {\n\t\tconst node = this.currentDragSourceNode\n\t\tif (node == null || this.isNodeInDocument(node)) {\n\t\t\treturn\n\t\t}\n\n\t\tif (this.clearCurrentDragSourceNode() && this.monitor.isDragging()) {\n\t\t\tthis.actions.endDrag()\n\t\t}\n\t\tthis.cancelHover()\n\t}\n\n\tprivate setCurrentDragSourceNode(node: Element | null) {\n\t\tthis.clearCurrentDragSourceNode()\n\t\tthis.currentDragSourceNode = node\n\n\t\t// A timeout of > 0 is necessary to resolve Firefox issue referenced\n\t\t// See:\n\t\t//   * https://github.com/react-dnd/react-dnd/pull/928\n\t\t//   * https://github.com/react-dnd/react-dnd/issues/869\n\t\tconst MOUSE_MOVE_TIMEOUT = 1000\n\n\t\t// Receiving a mouse event in the middle of a dragging operation\n\t\t// means it has ended and the drag source node disappeared from DOM,\n\t\t// so the browser didn't dispatch the dragend event.\n\t\t//\n\t\t// We need to wait before we start listening for mousemove events.\n\t\t// This is needed because the drag preview needs to be drawn or else it fires an 'mousemove' event\n\t\t// immediately in some browsers.\n\t\t//\n\t\t// See:\n\t\t//   * https://github.com/react-dnd/react-dnd/pull/928\n\t\t//   * https://github.com/react-dnd/react-dnd/issues/869\n\t\t//\n\t\tthis.mouseMoveTimeoutTimer = setTimeout(() => {\n\t\t\treturn this.rootElement?.addEventListener(\n\t\t\t\t'mousemove',\n\t\t\t\tthis.endDragIfSourceWasRemovedFromDOM,\n\t\t\t\ttrue,\n\t\t\t)\n\t\t}, MOUSE_MOVE_TIMEOUT) as any as number\n\t}\n\n\tprivate clearCurrentDragSourceNode() {\n\t\tif (this.currentDragSourceNode) {\n\t\t\tthis.currentDragSourceNode = null\n\n\t\t\tif (this.rootElement) {\n\t\t\t\tthis.window?.clearTimeout(this.mouseMoveTimeoutTimer || undefined)\n\t\t\t\tthis.rootElement.removeEventListener(\n\t\t\t\t\t'mousemove',\n\t\t\t\t\tthis.endDragIfSourceWasRemovedFromDOM,\n\t\t\t\t\ttrue,\n\t\t\t\t)\n\t\t\t}\n\n\t\t\tthis.mouseMoveTimeoutTimer = null\n\t\t\treturn true\n\t\t}\n\n\t\treturn false\n\t}\n\n\tprivate scheduleHover = (dragOverTargetIds: string[] | null) => {\n\t\tif (\n\t\t\tthis.hoverRafId === null &&\n\t\t\ttypeof requestAnimationFrame !== 'undefined'\n\t\t) {\n\t\t\tthis.hoverRafId = requestAnimationFrame(() => {\n\t\t\t\tif (this.monitor.isDragging()) {\n\t\t\t\t\tthis.actions.hover(dragOverTargetIds || [], {\n\t\t\t\t\t\tclientOffset: this.lastClientOffset,\n\t\t\t\t\t})\n\t\t\t\t}\n\n\t\t\t\tthis.hoverRafId = null\n\t\t\t})\n\t\t}\n\t}\n\n\tprivate cancelHover = () => {\n\t\tif (\n\t\t\tthis.hoverRafId !== null &&\n\t\t\ttypeof cancelAnimationFrame !== 'undefined'\n\t\t) {\n\t\t\tcancelAnimationFrame(this.hoverRafId)\n\t\t\tthis.hoverRafId = null\n\t\t}\n\t}\n\n\tpublic handleTopDragStartCapture = (): void => {\n\t\tthis.clearCurrentDragSourceNode()\n\t\tthis.dragStartSourceIds = []\n\t}\n\n\tpublic handleDragStart(e: DragEvent, sourceId: string): void {\n\t\tif (e.defaultPrevented) {\n\t\t\treturn\n\t\t}\n\n\t\tif (!this.dragStartSourceIds) {\n\t\t\tthis.dragStartSourceIds = []\n\t\t}\n\t\tthis.dragStartSourceIds.unshift(sourceId)\n\t}\n\n\tpublic handleTopDragStart = (e: DragEvent): void => {\n\t\tif (e.defaultPrevented) {\n\t\t\treturn\n\t\t}\n\n\t\tconst { dragStartSourceIds } = this\n\t\tthis.dragStartSourceIds = null\n\n\t\tconst clientOffset = getEventClientOffset(e)\n\n\t\t// Avoid crashing if we missed a drop event or our previous drag died\n\t\tif (this.monitor.isDragging()) {\n\t\t\tthis.actions.endDrag()\n\t\t\tthis.cancelHover()\n\t\t}\n\n\t\t// Don't publish the source just yet (see why below)\n\t\tthis.actions.beginDrag(dragStartSourceIds || [], {\n\t\t\tpublishSource: false,\n\t\t\tgetSourceClientOffset: this.getSourceClientOffset,\n\t\t\tclientOffset,\n\t\t})\n\n\t\tconst { dataTransfer } = e\n\t\tconst nativeType = matchNativeItemType(dataTransfer)\n\n\t\tif (this.monitor.isDragging()) {\n\t\t\tif (dataTransfer && typeof dataTransfer.setDragImage === 'function') {\n\t\t\t\t// Use custom drag image if user specifies it.\n\t\t\t\t// If child drag source refuses drag but parent agrees,\n\t\t\t\t// use parent's node as drag image. Neither works in IE though.\n\t\t\t\tconst sourceId: string = this.monitor.getSourceId() as string\n\t\t\t\tconst sourceNode = this.sourceNodes.get(sourceId)\n\t\t\t\tconst dragPreview = this.sourcePreviewNodes.get(sourceId) || sourceNode\n\n\t\t\t\tif (dragPreview) {\n\t\t\t\t\tconst { anchorX, anchorY, offsetX, offsetY } =\n\t\t\t\t\t\tthis.getCurrentSourcePreviewNodeOptions()\n\t\t\t\t\tconst anchorPoint = { anchorX, anchorY }\n\t\t\t\t\tconst offsetPoint = { offsetX, offsetY }\n\t\t\t\t\tconst dragPreviewOffset = getDragPreviewOffset(\n\t\t\t\t\t\tsourceNode as HTMLElement,\n\t\t\t\t\t\tdragPreview as HTMLElement,\n\t\t\t\t\t\tclientOffset,\n\t\t\t\t\t\tanchorPoint,\n\t\t\t\t\t\toffsetPoint,\n\t\t\t\t\t)\n\n\t\t\t\t\tdataTransfer.setDragImage(\n\t\t\t\t\t\tdragPreview,\n\t\t\t\t\t\tdragPreviewOffset.x,\n\t\t\t\t\t\tdragPreviewOffset.y,\n\t\t\t\t\t)\n\t\t\t\t}\n\t\t\t}\n\n\t\t\ttry {\n\t\t\t\t// Firefox won't drag without setting data\n\t\t\t\tdataTransfer?.setData('application/json', {} as any)\n\t\t\t} catch (err) {\n\t\t\t\t// IE doesn't support MIME types in setData\n\t\t\t}\n\n\t\t\t// Store drag source node so we can check whether\n\t\t\t// it is removed from DOM and trigger endDrag manually.\n\t\t\tthis.setCurrentDragSourceNode(e.target as Element)\n\n\t\t\t// Now we are ready to publish the drag source.. or are we not?\n\t\t\tconst { captureDraggingState } = this.getCurrentSourcePreviewNodeOptions()\n\t\t\tif (!captureDraggingState) {\n\t\t\t\t// Usually we want to publish it in the next tick so that browser\n\t\t\t\t// is able to screenshot the current (not yet dragging) state.\n\t\t\t\t//\n\t\t\t\t// It also neatly avoids a situation where render() returns null\n\t\t\t\t// in the same tick for the source element, and browser freaks out.\n\t\t\t\tsetTimeout(() => this.actions.publishDragSource(), 0)\n\t\t\t} else {\n\t\t\t\t// In some cases the user may want to override this behavior, e.g.\n\t\t\t\t// to work around IE not supporting custom drag previews.\n\t\t\t\t//\n\t\t\t\t// When using a custom drag layer, the only way to prevent\n\t\t\t\t// the default drag preview from drawing in IE is to screenshot\n\t\t\t\t// the dragging state in which the node itself has zero opacity\n\t\t\t\t// and height. In this case, though, returning null from render()\n\t\t\t\t// will abruptly end the dragging, which is not obvious.\n\t\t\t\t//\n\t\t\t\t// This is the reason such behavior is strictly opt-in.\n\t\t\t\tthis.actions.publishDragSource()\n\t\t\t}\n\t\t} else if (nativeType) {\n\t\t\t// A native item (such as URL) dragged from inside the document\n\t\t\tthis.beginDragNativeItem(nativeType)\n\t\t} else if (\n\t\t\tdataTransfer &&\n\t\t\t!dataTransfer.types &&\n\t\t\t((e.target && !(e.target as Element).hasAttribute) ||\n\t\t\t\t!(e.target as Element).hasAttribute('draggable'))\n\t\t) {\n\t\t\t// Looks like a Safari bug: dataTransfer.types is null, but there was no draggable.\n\t\t\t// Just let it drag. It's a native type (URL or text) and will be picked up in\n\t\t\t// dragenter handler.\n\t\t\treturn\n\t\t} else {\n\t\t\t// If by this time no drag source reacted, tell browser not to drag.\n\t\t\te.preventDefault()\n\t\t}\n\t}\n\n\tpublic handleTopDragEndCapture = (): void => {\n\t\tif (this.clearCurrentDragSourceNode() && this.monitor.isDragging()) {\n\t\t\t// Firefox can dispatch this event in an infinite loop\n\t\t\t// if dragend handler does something like showing an alert.\n\t\t\t// Only proceed if we have not handled it already.\n\t\t\tthis.actions.endDrag()\n\t\t}\n\t\tthis.cancelHover()\n\t}\n\n\tpublic handleTopDragEnterCapture = (e: DragEvent): void => {\n\t\tthis.dragEnterTargetIds = []\n\n\t\tif (this.isDraggingNativeItem()) {\n\t\t\tthis.currentNativeSource?.loadDataTransfer(e.dataTransfer)\n\t\t}\n\n\t\tconst isFirstEnter = this.enterLeaveCounter.enter(e.target)\n\t\tif (!isFirstEnter || this.monitor.isDragging()) {\n\t\t\treturn\n\t\t}\n\n\t\tconst { dataTransfer } = e\n\t\tconst nativeType = matchNativeItemType(dataTransfer)\n\n\t\tif (nativeType) {\n\t\t\t// A native item (such as file or URL) dragged from outside the document\n\t\t\tthis.beginDragNativeItem(nativeType, dataTransfer as DataTransfer)\n\t\t}\n\t}\n\n\tpublic handleDragEnter(_e: DragEvent, targetId: string): void {\n\t\tthis.dragEnterTargetIds.unshift(targetId)\n\t}\n\n\tpublic handleTopDragEnter = (e: DragEvent): void => {\n\t\tconst { dragEnterTargetIds } = this\n\t\tthis.dragEnterTargetIds = []\n\n\t\tif (!this.monitor.isDragging()) {\n\t\t\t// This is probably a native item type we don't understand.\n\t\t\treturn\n\t\t}\n\n\t\tthis.altKeyPressed = e.altKey\n\n\t\t// If the target changes position as the result of `dragenter`, `dragover` might still\n\t\t// get dispatched despite target being no longer there. The easy solution is to check\n\t\t// whether there actually is a target before firing `hover`.\n\t\tif (dragEnterTargetIds.length > 0) {\n\t\t\tthis.actions.hover(dragEnterTargetIds, {\n\t\t\t\tclientOffset: getEventClientOffset(e),\n\t\t\t})\n\t\t}\n\n\t\tconst canDrop = dragEnterTargetIds.some((targetId) =>\n\t\t\tthis.monitor.canDropOnTarget(targetId),\n\t\t)\n\n\t\tif (canDrop) {\n\t\t\t// IE requires this to fire dragover events\n\t\t\te.preventDefault()\n\t\t\tif (e.dataTransfer) {\n\t\t\t\te.dataTransfer.dropEffect = this.getCurrentDropEffect()\n\t\t\t}\n\t\t}\n\t}\n\n\tpublic handleTopDragOverCapture = (e: DragEvent): void => {\n\t\tthis.dragOverTargetIds = []\n\n\t\tif (this.isDraggingNativeItem()) {\n\t\t\tthis.currentNativeSource?.loadDataTransfer(e.dataTransfer)\n\t\t}\n\t}\n\n\tpublic handleDragOver(_e: DragEvent, targetId: string): void {\n\t\tif (this.dragOverTargetIds === null) {\n\t\t\tthis.dragOverTargetIds = []\n\t\t}\n\t\tthis.dragOverTargetIds.unshift(targetId)\n\t}\n\n\tpublic handleTopDragOver = (e: DragEvent): void => {\n\t\tconst { dragOverTargetIds } = this\n\t\tthis.dragOverTargetIds = []\n\n\t\tif (!this.monitor.isDragging()) {\n\t\t\t// This is probably a native item type we don't understand.\n\t\t\t// Prevent default \"drop and blow away the whole document\" action.\n\t\t\te.preventDefault()\n\t\t\tif (e.dataTransfer) {\n\t\t\t\te.dataTransfer.dropEffect = 'none'\n\t\t\t}\n\t\t\treturn\n\t\t}\n\n\t\tthis.altKeyPressed = e.altKey\n\t\tthis.lastClientOffset = getEventClientOffset(e)\n\n\t\tthis.scheduleHover(dragOverTargetIds)\n\n\t\tconst canDrop = (dragOverTargetIds || []).some((targetId) =>\n\t\t\tthis.monitor.canDropOnTarget(targetId),\n\t\t)\n\n\t\tif (canDrop) {\n\t\t\t// Show user-specified drop effect.\n\t\t\te.preventDefault()\n\t\t\tif (e.dataTransfer) {\n\t\t\t\te.dataTransfer.dropEffect = this.getCurrentDropEffect()\n\t\t\t}\n\t\t} else if (this.isDraggingNativeItem()) {\n\t\t\t// Don't show a nice cursor but still prevent default\n\t\t\t// \"drop and blow away the whole document\" action.\n\t\t\te.preventDefault()\n\t\t} else {\n\t\t\te.preventDefault()\n\t\t\tif (e.dataTransfer) {\n\t\t\t\te.dataTransfer.dropEffect = 'none'\n\t\t\t}\n\t\t}\n\t}\n\n\tpublic handleTopDragLeaveCapture = (e: DragEvent): void => {\n\t\tif (this.isDraggingNativeItem()) {\n\t\t\te.preventDefault()\n\t\t}\n\n\t\tconst isLastLeave = this.enterLeaveCounter.leave(e.target)\n\t\tif (!isLastLeave) {\n\t\t\treturn\n\t\t}\n\n\t\tif (this.isDraggingNativeItem()) {\n\t\t\tsetTimeout(() => this.endDragNativeItem(), 0)\n\t\t}\n\t\tthis.cancelHover()\n\t}\n\n\tpublic handleTopDropCapture = (e: DragEvent): void => {\n\t\tthis.dropTargetIds = []\n\n\t\tif (this.isDraggingNativeItem()) {\n\t\t\te.preventDefault()\n\t\t\tthis.currentNativeSource?.loadDataTransfer(e.dataTransfer)\n\t\t} else if (matchNativeItemType(e.dataTransfer)) {\n\t\t\t// Dragging some elements, like <a> and <img> may still behave like a native drag event,\n\t\t\t// even if the current drag event matches a user-defined type.\n\t\t\t// Stop the default behavior when we're not expecting a native item to be dropped.\n\n\t\t\te.preventDefault()\n\t\t}\n\n\t\tthis.enterLeaveCounter.reset()\n\t}\n\n\tpublic handleDrop(_e: DragEvent, targetId: string): void {\n\t\tthis.dropTargetIds.unshift(targetId)\n\t}\n\n\tpublic handleTopDrop = (e: DragEvent): void => {\n\t\tconst { dropTargetIds } = this\n\t\tthis.dropTargetIds = []\n\n\t\tthis.actions.hover(dropTargetIds, {\n\t\t\tclientOffset: getEventClientOffset(e),\n\t\t})\n\t\tthis.actions.drop({ dropEffect: this.getCurrentDropEffect() })\n\n\t\tif (this.isDraggingNativeItem()) {\n\t\t\tthis.endDragNativeItem()\n\t\t} else if (this.monitor.isDragging()) {\n\t\t\tthis.actions.endDrag()\n\t\t}\n\t\tthis.cancelHover()\n\t}\n\n\tpublic handleSelectStart = (e: DragEvent): void => {\n\t\tconst target = e.target as HTMLElement & { dragDrop: () => void }\n\n\t\t// Only IE requires us to explicitly say\n\t\t// we want drag drop operation to start\n\t\tif (typeof target.dragDrop !== 'function') {\n\t\t\treturn\n\t\t}\n\n\t\t// Inputs and textareas should be selectable\n\t\tif (\n\t\t\ttarget.tagName === 'INPUT' ||\n\t\t\ttarget.tagName === 'SELECT' ||\n\t\t\ttarget.tagName === 'TEXTAREA' ||\n\t\t\ttarget.isContentEditable\n\t\t) {\n\t\t\treturn\n\t\t}\n\n\t\t// For other targets, ask IE\n\t\t// to enable drag and drop\n\t\te.preventDefault()\n\t\ttarget.dragDrop()\n\t}\n}\n","import type { BackendFactory, DragDropManager } from 'dnd-core'\n\nimport { HTML5BackendImpl } from './HTML5BackendImpl.js'\nimport type { HTML5BackendContext, HTML5BackendOptions } from './types.js'\nexport { getEmptyImage } from './getEmptyImage.js'\nexport * as NativeTypes from './NativeTypes.js'\nexport type { HTML5BackendContext, HTML5BackendOptions } from './types.js'\n\nexport const HTML5Backend: BackendFactory = function createBackend(\n\tmanager: DragDropManager,\n\tcontext?: HTML5BackendContext,\n\toptions?: HTML5BackendOptions,\n): HTML5BackendImpl {\n\treturn new HTML5BackendImpl(manager, context, options)\n}\n","import type { DragDropManager } from 'dnd-core'\nimport { createContext } from 'react'\n\n/**\n * The React context type\n */\nexport interface DndContextType {\n\tdragDropManager: DragDropManager | undefined\n}\n\n/**\n * Create the React Context\n */\nexport const DndContext = createContext<DndContextType>({\n\tdragDropManager: undefined,\n})\n","// cheap lodash replacements\n\n/**\n * drop-in replacement for _.get\n * @param obj\n * @param path\n * @param defaultValue\n */\nexport function get<T>(obj: any, path: string, defaultValue: T): T {\n\treturn path\n\t\t.split('.')\n\t\t.reduce((a, c) => (a && a[c] ? a[c] : defaultValue || null), obj) as T\n}\n\n/**\n * drop-in replacement for _.without\n */\nexport function without<T>(items: T[], item: T): T[] {\n\treturn items.filter((i) => i !== item)\n}\n\n/**\n * drop-in replacement for _.isString\n * @param input\n */\nexport function isString(input: any): boolean {\n\treturn typeof input === 'string'\n}\n\n/**\n * drop-in replacement for _.isString\n * @param input\n */\nexport function isObject(input: any): boolean {\n\treturn typeof input === 'object'\n}\n\n/**\n * replacement for _.xor\n * @param itemsA\n * @param itemsB\n */\nexport function xor<T extends string | number>(itemsA: T[], itemsB: T[]): T[] {\n\tconst map = new Map<T, number>()\n\tconst insertItem = (item: T) => {\n\t\tmap.set(item, map.has(item) ? (map.get(item) as number) + 1 : 1)\n\t}\n\titemsA.forEach(insertItem)\n\titemsB.forEach(insertItem)\n\n\tconst result: T[] = []\n\tmap.forEach((count, key) => {\n\t\tif (count === 1) {\n\t\t\tresult.push(key)\n\t\t}\n\t})\n\treturn result\n}\n\n/**\n * replacement for _.intersection\n * @param itemsA\n * @param itemsB\n */\nexport function intersection<T>(itemsA: T[], itemsB: T[]): T[] {\n\treturn itemsA.filter((t) => itemsB.indexOf(t) > -1)\n}\n","export const INIT_COORDS = 'dnd-core/INIT_COORDS'\nexport const BEGIN_DRAG = 'dnd-core/BEGIN_DRAG'\nexport const PUBLISH_DRAG_SOURCE = 'dnd-core/PUBLISH_DRAG_SOURCE'\nexport const HOVER = 'dnd-core/HOVER'\nexport const DROP = 'dnd-core/DROP'\nexport const END_DRAG = 'dnd-core/END_DRAG'\n","import type { AnyAction } from 'redux'\n\nimport type { XYCoord } from '../../../interfaces.js'\nimport { INIT_COORDS } from '../types.js'\n\nexport function setClientOffset(\n\tclientOffset: XYCoord | null | undefined,\n\tsourceClientOffset?: XYCoord | null | undefined,\n): AnyAction {\n\treturn {\n\t\ttype: INIT_COORDS,\n\t\tpayload: {\n\t\t\tsourceClientOffset: sourceClientOffset || null,\n\t\t\tclientOffset: clientOffset || null,\n\t\t},\n\t}\n}\n","import { invariant } from '@react-dnd/invariant'\n\nimport type {\n\tAction,\n\tBeginDragOptions,\n\tBeginDragPayload,\n\tDragDropManager,\n\tDragDropMonitor,\n\tHandlerRegistry,\n\tIdentifier,\n\tXYCoord,\n} from '../../interfaces.js'\nimport { isObject } from '../../utils/js_utils.js'\nimport { setClientOffset } from './local/setClientOffset.js'\nimport { BEGIN_DRAG, INIT_COORDS } from './types.js'\n\nconst ResetCoordinatesAction = {\n\ttype: INIT_COORDS,\n\tpayload: {\n\t\tclientOffset: null,\n\t\tsourceClientOffset: null,\n\t},\n}\n\nexport function createBeginDrag(manager: DragDropManager) {\n\treturn function beginDrag(\n\t\tsourceIds: Identifier[] = [],\n\t\toptions: BeginDragOptions = {\n\t\t\tpublishSource: true,\n\t\t},\n\t): Action<BeginDragPayload> | undefined {\n\t\tconst {\n\t\t\tpublishSource = true,\n\t\t\tclientOffset,\n\t\t\tgetSourceClientOffset,\n\t\t}: BeginDragOptions = options\n\t\tconst monitor = manager.getMonitor()\n\t\tconst registry = manager.getRegistry()\n\n\t\t// Initialize the coordinates using the client offset\n\t\tmanager.dispatch(setClientOffset(clientOffset))\n\n\t\tverifyInvariants(sourceIds, monitor, registry)\n\n\t\t// Get the draggable source\n\t\tconst sourceId = getDraggableSource(sourceIds, monitor)\n\t\tif (sourceId == null) {\n\t\t\tmanager.dispatch(ResetCoordinatesAction)\n\t\t\treturn\n\t\t}\n\n\t\t// Get the source client offset\n\t\tlet sourceClientOffset: XYCoord | null = null\n\t\tif (clientOffset) {\n\t\t\tif (!getSourceClientOffset) {\n\t\t\t\tthrow new Error('getSourceClientOffset must be defined')\n\t\t\t}\n\t\t\tverifyGetSourceClientOffsetIsFunction(getSourceClientOffset)\n\t\t\tsourceClientOffset = getSourceClientOffset(sourceId)\n\t\t}\n\n\t\t// Initialize the full coordinates\n\t\tmanager.dispatch(setClientOffset(clientOffset, sourceClientOffset))\n\n\t\tconst source = registry.getSource(sourceId)\n\t\tconst item = source.beginDrag(monitor, sourceId)\n\t\t// If source.beginDrag returns null, this is an indicator to cancel the drag\n\t\tif (item == null) {\n\t\t\treturn undefined\n\t\t}\n\t\tverifyItemIsObject(item)\n\t\tregistry.pinSource(sourceId)\n\n\t\tconst itemType = registry.getSourceType(sourceId)\n\t\treturn {\n\t\t\ttype: BEGIN_DRAG,\n\t\t\tpayload: {\n\t\t\t\titemType,\n\t\t\t\titem,\n\t\t\t\tsourceId,\n\t\t\t\tclientOffset: clientOffset || null,\n\t\t\t\tsourceClientOffset: sourceClientOffset || null,\n\t\t\t\tisSourcePublic: !!publishSource,\n\t\t\t},\n\t\t}\n\t}\n}\n\nfunction verifyInvariants(\n\tsourceIds: Identifier[],\n\tmonitor: DragDropMonitor,\n\tregistry: HandlerRegistry,\n) {\n\tinvariant(!monitor.isDragging(), 'Cannot call beginDrag while dragging.')\n\tsourceIds.forEach(function (sourceId) {\n\t\tinvariant(\n\t\t\tregistry.getSource(sourceId),\n\t\t\t'Expected sourceIds to be registered.',\n\t\t)\n\t})\n}\n\nfunction verifyGetSourceClientOffsetIsFunction(getSourceClientOffset: any) {\n\tinvariant(\n\t\ttypeof getSourceClientOffset === 'function',\n\t\t'When clientOffset is provided, getSourceClientOffset must be a function.',\n\t)\n}\n\nfunction verifyItemIsObject(item: any) {\n\tinvariant(isObject(item), 'Item must be an object.')\n}\n\nfunction getDraggableSource(sourceIds: Identifier[], monitor: DragDropMonitor) {\n\tlet sourceId = null\n\tfor (let i = sourceIds.length - 1; i >= 0; i--) {\n\t\tif (monitor.canDragSource(sourceIds[i])) {\n\t\t\tsourceId = sourceIds[i]\n\t\t\tbreak\n\t\t}\n\t}\n\treturn sourceId\n}\n","import { invariant } from '@react-dnd/invariant'\n\nimport type {\n\tAction,\n\tDragDropManager,\n\tDragDropMonitor,\n\tDropPayload,\n\tHandlerRegistry,\n\tIdentifier,\n} from '../../interfaces.js'\nimport { isObject } from '../../utils/js_utils.js'\nimport { DROP } from './types.js'\n\nexport function createDrop(manager: DragDropManager) {\n\treturn function drop(options = {}): void {\n\t\tconst monitor = manager.getMonitor()\n\t\tconst registry = manager.getRegistry()\n\t\tverifyInvariants(monitor)\n\t\tconst targetIds = getDroppableTargets(monitor)\n\n\t\t// Multiple actions are dispatched here, which is why this doesn't return an action\n\t\ttargetIds.forEach((targetId, index) => {\n\t\t\tconst dropResult = determineDropResult(targetId, index, registry, monitor)\n\t\t\tconst action: Action<DropPayload> = {\n\t\t\t\ttype: DROP,\n\t\t\t\tpayload: {\n\t\t\t\t\tdropResult: {\n\t\t\t\t\t\t...options,\n\t\t\t\t\t\t...dropResult,\n\t\t\t\t\t},\n\t\t\t\t},\n\t\t\t}\n\t\t\tmanager.dispatch(action)\n\t\t})\n\t}\n}\n\nfunction verifyInvariants(monitor: DragDropMonitor) {\n\tinvariant(monitor.isDragging(), 'Cannot call drop while not dragging.')\n\tinvariant(\n\t\t!monitor.didDrop(),\n\t\t'Cannot call drop twice during one drag operation.',\n\t)\n}\n\nfunction determineDropResult(\n\ttargetId: Identifier,\n\tindex: number,\n\tregistry: HandlerRegistry,\n\tmonitor: DragDropMonitor,\n) {\n\tconst target = registry.getTarget(targetId)\n\tlet dropResult = target ? target.drop(monitor, targetId) : undefined\n\tverifyDropResultType(dropResult)\n\tif (typeof dropResult === 'undefined') {\n\t\tdropResult = index === 0 ? {} : monitor.getDropResult()\n\t}\n\treturn dropResult\n}\n\nfunction verifyDropResultType(dropResult: any) {\n\tinvariant(\n\t\ttypeof dropResult === 'undefined' || isObject(dropResult),\n\t\t'Drop result must either be an object or undefined.',\n\t)\n}\n\nfunction getDroppableTargets(monitor: DragDropMonitor) {\n\tconst targetIds = monitor\n\t\t.getTargetIds()\n\t\t.filter(monitor.canDropOnTarget, monitor)\n\ttargetIds.reverse()\n\treturn targetIds\n}\n","import { invariant } from '@react-dnd/invariant'\n\nimport type {\n\tDragDropManager,\n\tDragDropMonitor,\n\tSentinelAction,\n} from '../../interfaces.js'\nimport { END_DRAG } from './types.js'\n\nexport function createEndDrag(manager: DragDropManager) {\n\treturn function endDrag(): SentinelAction {\n\t\tconst monitor = manager.getMonitor()\n\t\tconst registry = manager.getRegistry()\n\t\tverifyIsDragging(monitor)\n\n\t\tconst sourceId = monitor.getSourceId()\n\t\tif (sourceId != null) {\n\t\t\tconst source = registry.getSource(sourceId, true)\n\t\t\tsource.endDrag(monitor, sourceId)\n\t\t\tregistry.unpinSource()\n\t\t}\n\t\treturn { type: END_DRAG }\n\t}\n}\n\nfunction verifyIsDragging(monitor: DragDropMonitor) {\n\tinvariant(monitor.isDragging(), 'Cannot call endDrag while not dragging.')\n}\n","import type { Identifier } from '../interfaces.js'\n\nexport function matchesType(\n\ttargetType: Identifier | Identifier[] | null,\n\tdraggedItemType: Identifier | null,\n): boolean {\n\tif (draggedItemType === null) {\n\t\treturn targetType === null\n\t}\n\treturn Array.isArray(targetType)\n\t\t? (targetType as Identifier[]).some((t) => t === draggedItemType)\n\t\t: targetType === draggedItemType\n}\n","import { invariant } from '@react-dnd/invariant'\n\nimport type {\n\tAction,\n\tDragDropManager,\n\tDragDropMonitor,\n\tHandlerRegistry,\n\tHoverOptions,\n\tHoverPayload,\n\tIdentifier,\n} from '../../interfaces.js'\nimport { matchesType } from '../../utils/matchesType.js'\nimport { HOVER } from './types.js'\n\nexport function createHover(manager: DragDropManager) {\n\treturn function hover(\n\t\ttargetIdsArg: string[],\n\t\t{ clientOffset }: HoverOptions = {},\n\t): Action<HoverPayload> {\n\t\tverifyTargetIdsIsArray(targetIdsArg)\n\t\tconst targetIds = targetIdsArg.slice(0)\n\t\tconst monitor = manager.getMonitor()\n\t\tconst registry = manager.getRegistry()\n\t\tconst draggedItemType = monitor.getItemType()\n\t\tremoveNonMatchingTargetIds(targetIds, registry, draggedItemType)\n\t\tcheckInvariants(targetIds, monitor, registry)\n\t\thoverAllTargets(targetIds, monitor, registry)\n\n\t\treturn {\n\t\t\ttype: HOVER,\n\t\t\tpayload: {\n\t\t\t\ttargetIds,\n\t\t\t\tclientOffset: clientOffset || null,\n\t\t\t},\n\t\t}\n\t}\n}\n\nfunction verifyTargetIdsIsArray(targetIdsArg: string[]) {\n\tinvariant(Array.isArray(targetIdsArg), 'Expected targetIds to be an array.')\n}\n\nfunction checkInvariants(\n\ttargetIds: string[],\n\tmonitor: DragDropMonitor,\n\tregistry: HandlerRegistry,\n) {\n\tinvariant(monitor.isDragging(), 'Cannot call hover while not dragging.')\n\tinvariant(!monitor.didDrop(), 'Cannot call hover after drop.')\n\tfor (let i = 0; i < targetIds.length; i++) {\n\t\tconst targetId = targetIds[i] as string\n\t\tinvariant(\n\t\t\ttargetIds.lastIndexOf(targetId) === i,\n\t\t\t'Expected targetIds to be unique in the passed array.',\n\t\t)\n\n\t\tconst target = registry.getTarget(targetId)\n\t\tinvariant(target, 'Expected targetIds to be registered.')\n\t}\n}\n\nfunction removeNonMatchingTargetIds(\n\ttargetIds: string[],\n\tregistry: HandlerRegistry,\n\tdraggedItemType: Identifier | null,\n) {\n\t// Remove those targetIds that don't match the targetType.  This\n\t// fixes shallow isOver which would only be non-shallow because of\n\t// non-matching targets.\n\tfor (let i = targetIds.length - 1; i >= 0; i--) {\n\t\tconst targetId = targetIds[i] as string\n\t\tconst targetType = registry.getTargetType(targetId)\n\t\tif (!matchesType(targetType, draggedItemType)) {\n\t\t\ttargetIds.splice(i, 1)\n\t\t}\n\t}\n}\n\nfunction hoverAllTargets(\n\ttargetIds: string[],\n\tmonitor: DragDropMonitor,\n\tregistry: HandlerRegistry,\n) {\n\t// Finally call hover on all matching targets.\n\ttargetIds.forEach(function (targetId) {\n\t\tconst target = registry.getTarget(targetId)\n\t\ttarget.hover(monitor, targetId)\n\t})\n}\n","import type { DragDropManager, SentinelAction } from '../../interfaces.js'\nimport { PUBLISH_DRAG_SOURCE } from './types.js'\n\nexport function createPublishDragSource(manager: DragDropManager) {\n\treturn function publishDragSource(): SentinelAction | undefined {\n\t\tconst monitor = manager.getMonitor()\n\t\tif (monitor.isDragging()) {\n\t\t\treturn { type: PUBLISH_DRAG_SOURCE }\n\t\t}\n\t\treturn\n\t}\n}\n","import type { Action, Store } from 'redux'\n\nimport { createDragDropActions } from '../actions/dragDrop/index.js'\nimport type {\n\tActionCreator,\n\tBackend,\n\tDragDropActions,\n\tDragDropManager,\n\tDragDropMonitor,\n\tHandlerRegistry,\n} from '../interfaces.js'\nimport type { State } from '../reducers/index.js'\nimport type { DragDropMonitorImpl } from './DragDropMonitorImpl.js'\n\nexport class DragDropManagerImpl implements DragDropManager {\n\tprivate store: Store<State>\n\tprivate monitor: DragDropMonitor\n\tprivate backend: Backend | undefined\n\tprivate isSetUp = false\n\n\tpublic constructor(store: Store<State>, monitor: DragDropMonitor) {\n\t\tthis.store = store\n\t\tthis.monitor = monitor\n\t\tstore.subscribe(this.handleRefCountChange)\n\t}\n\n\tpublic receiveBackend(backend: Backend): void {\n\t\tthis.backend = backend\n\t}\n\n\tpublic getMonitor(): DragDropMonitor {\n\t\treturn this.monitor\n\t}\n\n\tpublic getBackend(): Backend {\n\t\treturn this.backend as Backend\n\t}\n\n\tpublic getRegistry(): HandlerRegistry {\n\t\treturn (this.monitor as DragDropMonitorImpl).registry\n\t}\n\n\tpublic getActions(): DragDropActions {\n\t\t/* eslint-disable-next-line @typescript-eslint/no-this-alias */\n\t\tconst manager = this\n\t\tconst { dispatch } = this.store\n\n\t\tfunction bindActionCreator(actionCreator: ActionCreator<any>) {\n\t\t\treturn (...args: any[]) => {\n\t\t\t\tconst action = actionCreator.apply(manager, args as any)\n\t\t\t\tif (typeof action !== 'undefined') {\n\t\t\t\t\tdispatch(action)\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\n\t\tconst actions = createDragDropActions(this)\n\n\t\treturn Object.keys(actions).reduce(\n\t\t\t(boundActions: DragDropActions, key: string) => {\n\t\t\t\tconst action: ActionCreator<any> = (actions as any)[\n\t\t\t\t\tkey\n\t\t\t\t] as ActionCreator<any>\n\t\t\t\t;(boundActions as any)[key] = bindActionCreator(action)\n\t\t\t\treturn boundActions\n\t\t\t},\n\t\t\t{} as DragDropActions,\n\t\t)\n\t}\n\n\tpublic dispatch(action: Action<any>): void {\n\t\tthis.store.dispatch(action)\n\t}\n\n\tprivate handleRefCountChange = (): void => {\n\t\tconst shouldSetUp = this.store.getState().refCount > 0\n\t\tif (this.backend) {\n\t\t\tif (shouldSetUp && !this.isSetUp) {\n\t\t\t\tthis.backend.setup()\n\t\t\t\tthis.isSetUp = true\n\t\t\t} else if (!shouldSetUp && this.isSetUp) {\n\t\t\t\tthis.backend.teardown()\n\t\t\t\tthis.isSetUp = false\n\t\t\t}\n\t\t}\n\t}\n}\n","import type { DragDropActions, DragDropManager } from '../../interfaces.js'\nimport { createBeginDrag } from './beginDrag.js'\nimport { createDrop } from './drop.js'\nimport { createEndDrag } from './endDrag.js'\nimport { createHover } from './hover.js'\nimport { createPublishDragSource } from './publishDragSource.js'\n\nexport * from './types.js'\n\nexport function createDragDropActions(\n\tmanager: DragDropManager,\n): DragDropActions {\n\treturn {\n\t\tbeginDrag: createBeginDrag(manager),\n\t\tpublishDragSource: createPublishDragSource(manager),\n\t\thover: createHover(manager),\n\t\tdrop: createDrop(manager),\n\t\tendDrag: createEndDrag(manager),\n\t}\n}\n","import type { XYCoord } from '../interfaces.js'\nimport type { State } from '../reducers/dragOffset.js'\n\n/**\n * Coordinate addition\n * @param a The first coordinate\n * @param b The second coordinate\n */\nexport function add(a: XYCoord, b: XYCoord): XYCoord {\n\treturn {\n\t\tx: a.x + b.x,\n\t\ty: a.y + b.y,\n\t}\n}\n\n/**\n * Coordinate subtraction\n * @param a The first coordinate\n * @param b The second coordinate\n */\nexport function subtract(a: XYCoord, b: XYCoord): XYCoord {\n\treturn {\n\t\tx: a.x - b.x,\n\t\ty: a.y - b.y,\n\t}\n}\n\n/**\n * Returns the cartesian distance of the drag source component's position, based on its position\n * at the time when the current drag operation has started, and the movement difference.\n *\n * Returns null if no item is being dragged.\n *\n * @param state The offset state to compute from\n */\nexport function getSourceClientOffset(state: State): XYCoord | null {\n\tconst { clientOffset, initialClientOffset, initialSourceClientOffset } = state\n\tif (!clientOffset || !initialClientOffset || !initialSourceClientOffset) {\n\t\treturn null\n\t}\n\treturn subtract(\n\t\tadd(clientOffset, initialSourceClientOffset),\n\t\tinitialClientOffset,\n\t)\n}\n\n/**\n * Determines the x,y offset between the client offset and the initial client offset\n *\n * @param state The offset state to compute from\n */\nexport function getDifferenceFromInitialOffset(state: State): XYCoord | null {\n\tconst { clientOffset, initialClientOffset } = state\n\tif (!clientOffset || !initialClientOffset) {\n\t\treturn null\n\t}\n\treturn subtract(clientOffset, initialClientOffset)\n}\n","import { intersection } from './js_utils.js'\n\nexport const NONE: string[] = []\nexport const ALL: string[] = []\n// Add these flags for debug\n;(NONE as any).__IS_NONE__ = true\n;(ALL as any).__IS_ALL__ = true\n\n/**\n * Determines if the given handler IDs are dirty or not.\n *\n * @param dirtyIds The set of dirty handler ids\n * @param handlerIds The set of handler ids to check\n */\nexport function areDirty(\n\tdirtyIds: string[],\n\thandlerIds: string[] | undefined,\n): boolean {\n\tif (dirtyIds === NONE) {\n\t\treturn false\n\t}\n\n\tif (dirtyIds === ALL || typeof handlerIds === 'undefined') {\n\t\treturn true\n\t}\n\n\tconst commonIds = intersection(handlerIds, dirtyIds)\n\treturn commonIds.length > 0\n}\n","import { invariant } from '@react-dnd/invariant'\nimport type { Store } from 'redux'\n\nimport type {\n\tDragDropMonitor,\n\tHandlerRegistry,\n\tIdentifier,\n\tListener,\n\tUnsubscribe,\n\tXYCoord,\n} from '../interfaces.js'\nimport type { State } from '../reducers/index.js'\nimport {\n\tgetDifferenceFromInitialOffset,\n\tgetSourceClientOffset,\n} from '../utils/coords.js'\nimport { areDirty } from '../utils/dirtiness.js'\nimport { matchesType } from '../utils/matchesType.js'\n\nexport class DragDropMonitorImpl implements DragDropMonitor {\n\tprivate store: Store<State>\n\tpublic readonly registry: HandlerRegistry\n\n\tpublic constructor(store: Store<State>, registry: HandlerRegistry) {\n\t\tthis.store = store\n\t\tthis.registry = registry\n\t}\n\n\tpublic subscribeToStateChange(\n\t\tlistener: Listener,\n\t\toptions: { handlerIds?: string[] } = {},\n\t): Unsubscribe {\n\t\tconst { handlerIds } = options\n\t\tinvariant(typeof listener === 'function', 'listener must be a function.')\n\t\tinvariant(\n\t\t\ttypeof handlerIds === 'undefined' || Array.isArray(handlerIds),\n\t\t\t'handlerIds, when specified, must be an array of strings.',\n\t\t)\n\n\t\tlet prevStateId = this.store.getState().stateId\n\t\tconst handleChange = () => {\n\t\t\tconst state = this.store.getState()\n\t\t\tconst currentStateId = state.stateId\n\t\t\ttry {\n\t\t\t\tconst canSkipListener =\n\t\t\t\t\tcurrentStateId === prevStateId ||\n\t\t\t\t\t(currentStateId === prevStateId + 1 &&\n\t\t\t\t\t\t!areDirty(state.dirtyHandlerIds, handlerIds))\n\n\t\t\t\tif (!canSkipListener) {\n\t\t\t\t\tlistener()\n\t\t\t\t}\n\t\t\t} finally {\n\t\t\t\tprevStateId = currentStateId\n\t\t\t}\n\t\t}\n\n\t\treturn this.store.subscribe(handleChange)\n\t}\n\n\tpublic subscribeToOffsetChange(listener: Listener): Unsubscribe {\n\t\tinvariant(typeof listener === 'function', 'listener must be a function.')\n\n\t\tlet previousState = this.store.getState().dragOffset\n\t\tconst handleChange = () => {\n\t\t\tconst nextState = this.store.getState().dragOffset\n\t\t\tif (nextState === previousState) {\n\t\t\t\treturn\n\t\t\t}\n\n\t\t\tpreviousState = nextState\n\t\t\tlistener()\n\t\t}\n\n\t\treturn this.store.subscribe(handleChange)\n\t}\n\n\tpublic canDragSource(sourceId: string | undefined): boolean {\n\t\tif (!sourceId) {\n\t\t\treturn false\n\t\t}\n\t\tconst source = this.registry.getSource(sourceId)\n\t\tinvariant(source, `Expected to find a valid source. sourceId=${sourceId}`)\n\n\t\tif (this.isDragging()) {\n\t\t\treturn false\n\t\t}\n\n\t\treturn source.canDrag(this, sourceId)\n\t}\n\n\tpublic canDropOnTarget(targetId: string | undefined): boolean {\n\t\t// undefined on initial render\n\t\tif (!targetId) {\n\t\t\treturn false\n\t\t}\n\t\tconst target = this.registry.getTarget(targetId)\n\t\tinvariant(target, `Expected to find a valid target. targetId=${targetId}`)\n\n\t\tif (!this.isDragging() || this.didDrop()) {\n\t\t\treturn false\n\t\t}\n\n\t\tconst targetType = this.registry.getTargetType(targetId)\n\t\tconst draggedItemType = this.getItemType()\n\t\treturn (\n\t\t\tmatchesType(targetType, draggedItemType) && target.canDrop(this, targetId)\n\t\t)\n\t}\n\n\tpublic isDragging(): boolean {\n\t\treturn Boolean(this.getItemType())\n\t}\n\n\tpublic isDraggingSource(sourceId: string | undefined): boolean {\n\t\t// undefined on initial render\n\t\tif (!sourceId) {\n\t\t\treturn false\n\t\t}\n\t\tconst source = this.registry.getSource(sourceId, true)\n\t\tinvariant(source, `Expected to find a valid source. sourceId=${sourceId}`)\n\n\t\tif (!this.isDragging() || !this.isSourcePublic()) {\n\t\t\treturn false\n\t\t}\n\n\t\tconst sourceType = this.registry.getSourceType(sourceId)\n\t\tconst draggedItemType = this.getItemType()\n\t\tif (sourceType !== draggedItemType) {\n\t\t\treturn false\n\t\t}\n\n\t\treturn source.isDragging(this, sourceId)\n\t}\n\n\tpublic isOverTarget(\n\t\ttargetId: string | undefined,\n\t\toptions = { shallow: false },\n\t): boolean {\n\t\t// undefined on initial render\n\t\tif (!targetId) {\n\t\t\treturn false\n\t\t}\n\n\t\tconst { shallow } = options\n\t\tif (!this.isDragging()) {\n\t\t\treturn false\n\t\t}\n\n\t\tconst targetType = this.registry.getTargetType(targetId)\n\t\tconst draggedItemType = this.getItemType()\n\t\tif (draggedItemType && !matchesType(targetType, draggedItemType)) {\n\t\t\treturn false\n\t\t}\n\n\t\tconst targetIds = this.getTargetIds()\n\t\tif (!targetIds.length) {\n\t\t\treturn false\n\t\t}\n\n\t\tconst index = targetIds.indexOf(targetId)\n\t\tif (shallow) {\n\t\t\treturn index === targetIds.length - 1\n\t\t} else {\n\t\t\treturn index > -1\n\t\t}\n\t}\n\n\tpublic getItemType(): Identifier {\n\t\treturn this.store.getState().dragOperation.itemType as Identifier\n\t}\n\n\tpublic getItem(): any {\n\t\treturn this.store.getState().dragOperation.item\n\t}\n\n\tpublic getSourceId(): string | null {\n\t\treturn this.store.getState().dragOperation.sourceId\n\t}\n\n\tpublic getTargetIds(): string[] {\n\t\treturn this.store.getState().dragOperation.targetIds\n\t}\n\n\tpublic getDropResult(): any {\n\t\treturn this.store.getState().dragOperation.dropResult\n\t}\n\n\tpublic didDrop(): boolean {\n\t\treturn this.store.getState().dragOperation.didDrop\n\t}\n\n\tpublic isSourcePublic(): boolean {\n\t\treturn Boolean(this.store.getState().dragOperation.isSourcePublic)\n\t}\n\n\tpublic getInitialClientOffset(): XYCoord | null {\n\t\treturn this.store.getState().dragOffset.initialClientOffset\n\t}\n\n\tpublic getInitialSourceClientOffset(): XYCoord | null {\n\t\treturn this.store.getState().dragOffset.initialSourceClientOffset\n\t}\n\n\tpublic getClientOffset(): XYCoord | null {\n\t\treturn this.store.getState().dragOffset.clientOffset\n\t}\n\n\tpublic getSourceClientOffset(): XYCoord | null {\n\t\treturn getSourceClientOffset(this.store.getState().dragOffset)\n\t}\n\n\tpublic getDifferenceFromInitialOffset(): XYCoord | null {\n\t\treturn getDifferenceFromInitialOffset(this.store.getState().dragOffset)\n\t}\n}\n","// Safari 6 and 6.1 for desktop, iPad, and iPhone are the only browsers that\n// have WebKitMutationObserver but not un-prefixed MutationObserver.\n// Must use `global` or `self` instead of `window` to work in both frames and web\n// workers. `global` is a provision of Browserify, Mr, Mrs, or Mop.\n\n/* globals self */\nconst scope = typeof global !== 'undefined' ? global : self\nconst BrowserMutationObserver =\n\t(scope as any).MutationObserver || (scope as any).WebKitMutationObserver\n\nexport function makeRequestCallFromTimer(callback: () => void) {\n\treturn function requestCall() {\n\t\t// We dispatch a timeout with a specified delay of 0 for engines that\n\t\t// can reliably accommodate that request. This will usually be snapped\n\t\t// to a 4 milisecond delay, but once we're flushing, there's no delay\n\t\t// between events.\n\t\tconst timeoutHandle = setTimeout(handleTimer, 0)\n\t\t// However, since this timer gets frequently dropped in Firefox\n\t\t// workers, we enlist an interval handle that will try to fire\n\t\t// an event 20 times per second until it succeeds.\n\t\tconst intervalHandle = setInterval(handleTimer, 50)\n\n\t\tfunction handleTimer() {\n\t\t\t// Whichever timer succeeds will cancel both timers and\n\t\t\t// execute the callback.\n\t\t\tclearTimeout(timeoutHandle)\n\t\t\tclearInterval(intervalHandle)\n\t\t\tcallback()\n\t\t}\n\t}\n}\n\n// To request a high priority event, we induce a mutation observer by toggling\n// the text of a text node between \"1\" and \"-1\".\nexport function makeRequestCallFromMutationObserver(callback: () => void) {\n\tlet toggle = 1\n\tconst observer = new BrowserMutationObserver(callback)\n\tconst node = document.createTextNode('')\n\tobserver.observe(node, { characterData: true })\n\treturn function requestCall() {\n\t\ttoggle = -toggle\n\t\t;(node as any).data = toggle\n\t}\n}\n\nexport const makeRequestCall =\n\ttypeof BrowserMutationObserver === 'function'\n\t\t? // MutationObservers are desirable because they have high priority and work\n\t\t  // reliably everywhere they are implemented.\n\t\t  // They are implemented in all modern browsers.\n\t\t  //\n\t\t  // - Android 4-4.3\n\t\t  // - Chrome 26-34\n\t\t  // - Firefox 14-29\n\t\t  // - Internet Explorer 11\n\t\t  // - iPad Safari 6-7.1\n\t\t  // - iPhone Safari 7-7.1\n\t\t  // - Safari 6-7\n\t\t  makeRequestCallFromMutationObserver\n\t\t: // MessageChannels are desirable because they give direct access to the HTML\n\t\t  // task queue, are implemented in Internet Explorer 10, Safari 5.0-1, and Opera\n\t\t  // 11-12, and in web workers in many engines.\n\t\t  // Although message channels yield to any queued rendering and IO tasks, they\n\t\t  // would be better than imposing the 4ms delay of timers.\n\t\t  // However, they do not work reliably in Internet Explorer or Safari.\n\n\t\t  // Internet Explorer 10 is the only browser that has setImmediate but does\n\t\t  // not have MutationObservers.\n\t\t  // Although setImmediate yields to the browser's renderer, it would be\n\t\t  // preferrable to falling back to setTimeout since it does not have\n\t\t  // the minimum 4ms penalty.\n\t\t  // Unfortunately there appears to be a bug in Internet Explorer 10 Mobile (and\n\t\t  // Desktop to a lesser extent) that renders both setImmediate and\n\t\t  // MessageChannel useless for the purposes of ASAP.\n\t\t  // https://github.com/kriskowal/q/issues/396\n\n\t\t  // Timers are implemented universally.\n\t\t  // We fall back to timers in workers in most engines, and in foreground\n\t\t  // contexts in the following browsers.\n\t\t  // However, note that even this simple case requires nuances to operate in a\n\t\t  // broad spectrum of browsers.\n\t\t  //\n\t\t  // - Firefox 3-13\n\t\t  // - Internet Explorer 6-9\n\t\t  // - iPad Safari 4.3\n\t\t  // - Lynx 2.8.7\n\t\t  makeRequestCallFromTimer\n","/* eslint-disable no-restricted-globals, @typescript-eslint/ban-ts-comment, @typescript-eslint/no-unused-vars, @typescript-eslint/no-non-null-assertion */\nimport { makeRequestCall, makeRequestCallFromTimer } from './makeRequestCall.js'\nimport type { Task } from './types.js'\n\nexport class AsapQueue {\n\tprivate queue: Task[] = []\n\t// We queue errors to ensure they are thrown in right order (FIFO).\n\t// Array-as-queue is good enough here, since we are just dealing with exceptions.\n\tprivate pendingErrors: any[] = []\n\t// Once a flush has been requested, no further calls to `requestFlush` are\n\t// necessary until the next `flush` completes.\n\t// @ts-ignore\n\tprivate flushing = false\n\t// `requestFlush` is an implementation-specific method that attempts to kick\n\t// off a `flush` event as quickly as possible. `flush` will attempt to exhaust\n\t// the event queue before yielding to the browser's own event loop.\n\tprivate requestFlush: () => void\n\n\tprivate requestErrorThrow: () => void\n\t// The position of the next task to execute in the task queue. This is\n\t// preserved between calls to `flush` so that it can be resumed if\n\t// a task throws an exception.\n\tprivate index = 0\n\t// If a task schedules additional tasks recursively, the task queue can grow\n\t// unbounded. To prevent memory exhaustion, the task queue will periodically\n\t// truncate already-completed tasks.\n\tprivate capacity = 1024\n\n\tpublic constructor() {\n\t\t// `requestFlush` requests that the high priority event queue be flushed as\n\t\t// soon as possible.\n\t\t// This is useful to prevent an error thrown in a task from stalling the event\n\t\t// queue if the exception handled by Node.js’s\n\t\t// `process.on(\"uncaughtException\")` or by a domain.\n\n\t\t// `requestFlush` is implemented using a strategy based on data collected from\n\t\t// every available SauceLabs Selenium web driver worker at time of writing.\n\t\t// https://docs.google.com/spreadsheets/d/1mG-5UYGup5qxGdEMWkhP6BWCz053NUb2E1QoUTU16uA/edit#gid=783724593\n\t\tthis.requestFlush = makeRequestCall(this.flush)\n\t\tthis.requestErrorThrow = makeRequestCallFromTimer(() => {\n\t\t\t// Throw first error\n\t\t\tif (this.pendingErrors.length) {\n\t\t\t\tthrow this.pendingErrors.shift()\n\t\t\t}\n\t\t})\n\t}\n\n\t// Use the fastest means possible to execute a task in its own turn, with\n\t// priority over other events including IO, animation, reflow, and redraw\n\t// events in browsers.\n\t//\n\t// An exception thrown by a task will permanently interrupt the processing of\n\t// subsequent tasks. The higher level `asap` function ensures that if an\n\t// exception is thrown by a task, that the task queue will continue flushing as\n\t// soon as possible, but if you use `rawAsap` directly, you are responsible to\n\t// either ensure that no exceptions are thrown from your task, or to manually\n\t// call `rawAsap.requestFlush` if an exception is thrown.\n\tpublic enqueueTask(task: Task): void {\n\t\tconst { queue: q, requestFlush } = this\n\t\tif (!q.length) {\n\t\t\trequestFlush()\n\t\t\tthis.flushing = true\n\t\t}\n\t\t// Equivalent to push, but avoids a function call.\n\t\tq[q.length] = task\n\t}\n\n\t// The flush function processes all tasks that have been scheduled with\n\t// `rawAsap` unless and until one of those tasks throws an exception.\n\t// If a task throws an exception, `flush` ensures that its state will remain\n\t// consistent and will resume where it left off when called again.\n\t// However, `flush` does not make any arrangements to be called again if an\n\t// exception is thrown.\n\tprivate flush = () => {\n\t\tconst { queue: q } = this\n\t\twhile (this.index < q.length) {\n\t\t\tconst currentIndex = this.index\n\t\t\t// Advance the index before calling the task. This ensures that we will\n\t\t\t// begin flushing on the next task the task throws an error.\n\t\t\tthis.index++\n\t\t\tq[currentIndex]!.call()\n\t\t\t// Prevent leaking memory for long chains of recursive calls to `asap`.\n\t\t\t// If we call `asap` within tasks scheduled by `asap`, the queue will\n\t\t\t// grow, but to avoid an O(n) walk for every task we execute, we don't\n\t\t\t// shift tasks off the queue after they have been executed.\n\t\t\t// Instead, we periodically shift 1024 tasks off the queue.\n\t\t\tif (this.index > this.capacity) {\n\t\t\t\t// Manually shift all values starting at the index back to the\n\t\t\t\t// beginning of the queue.\n\t\t\t\tfor (\n\t\t\t\t\tlet scan = 0, newLength = q.length - this.index;\n\t\t\t\t\tscan < newLength;\n\t\t\t\t\tscan++\n\t\t\t\t) {\n\t\t\t\t\tq[scan] = q[scan + this.index]!\n\t\t\t\t}\n\t\t\t\tq.length -= this.index\n\t\t\t\tthis.index = 0\n\t\t\t}\n\t\t}\n\t\tq.length = 0\n\t\tthis.index = 0\n\t\tthis.flushing = false\n\t}\n\n\t// In a web browser, exceptions are not fatal. However, to avoid\n\t// slowing down the queue of pending tasks, we rethrow the error in a\n\t// lower priority turn.\n\tpublic registerPendingError = (err: any) => {\n\t\tthis.pendingErrors.push(err)\n\t\tthis.requestErrorThrow()\n\t}\n}\n\n// The message channel technique was discovered by Malte Ubl and was the\n// original foundation for this library.\n// http://www.nonblocking.io/2011/06/windownexttick.html\n\n// Safari 6.0.5 (at least) intermittently fails to create message ports on a\n// page's first load. Thankfully, this version of Safari supports\n// MutationObservers, so we don't need to fall back in that case.\n\n// function makeRequestCallFromMessageChannel(callback) {\n//     var channel = new MessageChannel();\n//     channel.port1.onmessage = callback;\n//     return function requestCall() {\n//         channel.port2.postMessage(0);\n//     };\n// }\n\n// For reasons explained above, we are also unable to use `setImmediate`\n// under any circumstances.\n// Even if we were, there is another bug in Internet Explorer 10.\n// It is not sufficient to assign `setImmediate` to `requestFlush` because\n// `setImmediate` must be called *by name* and therefore must be wrapped in a\n// closure.\n// Never forget.\n\n// function makeRequestCallFromSetImmediate(callback) {\n//     return function requestCall() {\n//         setImmediate(callback);\n//     };\n// }\n\n// Safari 6.0 has a problem where timers will get lost while the user is\n// scrolling. This problem does not impact ASAP because Safari 6.0 supports\n// mutation observers, so that implementation is used instead.\n// However, if we ever elect to use timers in Safari, the prevalent work-around\n// is to add a scroll event listener that calls for a flush.\n\n// `setTimeout` does not call the passed callback if the delay is less than\n// approximately 7 in web workers in Firefox 8 through 18, and sometimes not\n// even then.\n\n// This is for `asap.js` only.\n// Its name will be periodically randomized to break any code that depends on\n// // its existence.\n// rawAsap.makeRequestCallFromTimer = makeRequestCallFromTimer\n\n// ASAP was originally a nextTick shim included in Q. This was factored out\n// into this ASAP package. It was later adapted to RSVP which made further\n// amendments. These decisions, particularly to marginalize MessageChannel and\n// to capture the MutationObserver implementation in a closure, were integrated\n// back into ASAP proper.\n// https://github.com/tildeio/rsvp.js/blob/cddf7232546a9cf858524b75cde6f9edf72620a7/lib/rsvp/asap.js\n","// We wrap tasks with recyclable task objects.  A task object implements\n\nimport type { Task, TaskFn } from 'types'\n\n// `call`, just like a function.\nexport class RawTask implements Task {\n\tpublic task: TaskFn | null = null\n\n\tpublic constructor(\n\t\tprivate onError: (err: any) => void,\n\t\tprivate release: (t: RawTask) => void,\n\t) {}\n\n\tpublic call() {\n\t\ttry {\n\t\t\tthis.task && this.task()\n\t\t} catch (error) {\n\t\t\tthis.onError(error)\n\t\t} finally {\n\t\t\tthis.task = null\n\t\t\tthis.release(this)\n\t\t}\n\t}\n}\n","import { RawTask } from './RawTask.js'\nimport type { Task } from './types.js'\n\nexport class TaskFactory {\n\tprivate freeTasks: RawTask[] = []\n\n\tpublic constructor(private onError: (err: any) => void) {}\n\n\tpublic create(task: () => void): Task {\n\t\tconst tasks = this.freeTasks\n\t\tconst t = tasks.length\n\t\t\t? (tasks.pop() as RawTask)\n\t\t\t: new RawTask(this.onError, (t) => (tasks[tasks.length] = t))\n\t\tt.task = task\n\t\treturn t\n\t}\n}\n","import { AsapQueue } from './AsapQueue.js'\nimport { TaskFactory } from './TaskFactory.js'\nimport type { TaskFn } from './types.js'\n\nconst asapQueue = new AsapQueue()\nconst taskFactory = new TaskFactory(asapQueue.registerPendingError)\n\n/**\n * Calls a task as soon as possible after returning, in its own event, with priority\n * over other events like animation, reflow, and repaint. An error thrown from an\n * event will not interrupt, nor even substantially slow down the processing of\n * other events, but will be rather postponed to a lower priority event.\n * @param {{call}} task A callable object, typically a function that takes no\n * arguments.\n */\nexport function asap(task: TaskFn) {\n\tasapQueue.enqueueTask(taskFactory.create(task))\n}\n","import type { Action, SourceIdPayload, TargetIdPayload } from '../interfaces.js'\n\nexport const ADD_SOURCE = 'dnd-core/ADD_SOURCE'\nexport const ADD_TARGET = 'dnd-core/ADD_TARGET'\nexport const REMOVE_SOURCE = 'dnd-core/REMOVE_SOURCE'\nexport const REMOVE_TARGET = 'dnd-core/REMOVE_TARGET'\n\nexport function addSource(sourceId: string): Action<SourceIdPayload> {\n\treturn {\n\t\ttype: ADD_SOURCE,\n\t\tpayload: {\n\t\t\tsourceId,\n\t\t},\n\t}\n}\n\nexport function addTarget(targetId: string): Action<TargetIdPayload> {\n\treturn {\n\t\ttype: ADD_TARGET,\n\t\tpayload: {\n\t\t\ttargetId,\n\t\t},\n\t}\n}\n\nexport function removeSource(sourceId: string): Action<SourceIdPayload> {\n\treturn {\n\t\ttype: REMOVE_SOURCE,\n\t\tpayload: {\n\t\t\tsourceId,\n\t\t},\n\t}\n}\n\nexport function removeTarget(targetId: string): Action<TargetIdPayload> {\n\treturn {\n\t\ttype: REMOVE_TARGET,\n\t\tpayload: {\n\t\t\ttargetId,\n\t\t},\n\t}\n}\n","export type Identifier = string | symbol\nexport type SourceType = Identifier\nexport type TargetType = Identifier | Identifier[]\nexport type Unsubscribe = () => void\nexport type Listener = () => void\n\nexport interface XYCoord {\n\tx: number\n\ty: number\n}\n\nexport enum HandlerRole {\n\tSOURCE = 'SOURCE',\n\tTARGET = 'TARGET',\n}\n\nexport interface Backend {\n\tsetup(): void\n\tteardown(): void\n\tconnectDragSource(sourceId: any, node?: any, options?: any): Unsubscribe\n\tconnectDragPreview(sourceId: any, node?: any, options?: any): Unsubscribe\n\tconnectDropTarget(targetId: any, node?: any, options?: any): Unsubscribe\n\tprofile(): Record<string, number>\n}\n\nexport interface DragDropMonitor {\n\tsubscribeToStateChange(\n\t\tlistener: Listener,\n\t\toptions?: {\n\t\t\thandlerIds?: Identifier[]\n\t\t},\n\t): Unsubscribe\n\tsubscribeToOffsetChange(listener: Listener): Unsubscribe\n\tcanDragSource(sourceId: Identifier | undefined): boolean\n\tcanDropOnTarget(targetId: Identifier | undefined): boolean\n\n\t/**\n\t * Returns true if a drag operation is in progress, and either the owner initiated the drag, or its isDragging()\n\t * is defined and returns true.\n\t */\n\tisDragging(): boolean\n\tisDraggingSource(sourceId: Identifier | undefined): boolean\n\tisOverTarget(\n\t\ttargetId: Identifier | undefined,\n\t\toptions?: {\n\t\t\tshallow?: boolean\n\t\t},\n\t): boolean\n\n\t/**\n\t * Returns a string or a symbol identifying the type of the current dragged item. Returns null if no item is being dragged.\n\t */\n\tgetItemType(): Identifier | null\n\n\t/**\n\t * Returns a plain object representing the currently dragged item. Every drag source must specify it by returning an object\n\t * from its beginDrag() method. Returns null if no item is being dragged.\n\t */\n\tgetItem(): any\n\tgetSourceId(): Identifier | null\n\tgetTargetIds(): Identifier[]\n\t/**\n\t * Returns a plain object representing the last recorded drop result. The drop targets may optionally specify it by returning an\n\t * object from their drop() methods. When a chain of drop() is dispatched for the nested targets, bottom up, any parent that\n\t * explicitly returns its own result from drop() overrides the child drop result previously set by the child. Returns null if\n\t * called outside endDrag().\n\t */\n\tgetDropResult(): any\n\t/**\n\t * Returns true if some drop target has handled the drop event, false otherwise. Even if a target did not return a drop result,\n\t * didDrop() returns true. Use it inside endDrag() to test whether any drop target has handled the drop. Returns false if called\n\t * outside endDrag().\n\t */\n\tdidDrop(): boolean\n\tisSourcePublic(): boolean | null\n\t/**\n\t * Returns the { x, y } client offset of the pointer at the time when the current drag operation has started.\n\t * Returns null if no item is being dragged.\n\t */\n\tgetInitialClientOffset(): XYCoord | null\n\t/**\n\t * Returns the { x, y } client offset of the drag source component's root DOM node at the time when the current drag\n\t * operation has started. Returns null if no item is being dragged.\n\t */\n\tgetInitialSourceClientOffset(): XYCoord | null\n\n\t/**\n\t * Returns the last recorded { x, y } client offset of the pointer while a drag operation is in progress.\n\t * Returns null if no item is being dragged.\n\t */\n\tgetClientOffset(): XYCoord | null\n\n\t/**\n\t * Returns the projected { x, y } client offset of the drag source component's root DOM node, based on its position at the time\n\t * when the current drag operation has started, and the movement difference. Returns null if no item is being dragged.\n\t */\n\tgetSourceClientOffset(): XYCoord | null\n\n\t/**\n\t * Returns the { x, y } difference between the last recorded client offset of the pointer and the client offset when the current\n\t * drag operation has started. Returns null if no item is being dragged.\n\t */\n\tgetDifferenceFromInitialOffset(): XYCoord | null\n}\n\nexport interface HandlerRegistry {\n\taddSource(type: SourceType, source: DragSource): Identifier\n\taddTarget(type: TargetType, target: DropTarget): Identifier\n\tcontainsHandler(handler: DragSource | DropTarget): boolean\n\tgetSource(sourceId: Identifier, includePinned?: boolean): DragSource\n\tgetSourceType(sourceId: Identifier): SourceType\n\tgetTargetType(targetId: Identifier): TargetType\n\tgetTarget(targetId: Identifier): DropTarget\n\tisSourceId(handlerId: Identifier): boolean\n\tisTargetId(handlerId: Identifier): boolean\n\tremoveSource(sourceId: Identifier): void\n\tremoveTarget(targetId: Identifier): void\n\tpinSource(sourceId: Identifier): void\n\tunpinSource(): void\n}\n\nexport interface Action<Payload> {\n\ttype: Identifier\n\tpayload: Payload\n}\nexport interface SentinelAction {\n\ttype: Identifier\n}\n\nexport type ActionCreator<Payload> = (args: any[]) => Action<Payload>\n\nexport interface BeginDragOptions {\n\tpublishSource?: boolean\n\tclientOffset?: XYCoord\n\tgetSourceClientOffset?: (sourceId: Identifier | undefined) => XYCoord\n}\n\nexport interface InitCoordsPayload {\n\tclientOffset: XYCoord | null\n\tsourceClientOffset: XYCoord | null\n}\n\nexport interface BeginDragPayload {\n\titemType: Identifier\n\titem: any\n\tsourceId: Identifier\n\tclientOffset: XYCoord | null\n\tsourceClientOffset: XYCoord | null\n\tisSourcePublic: boolean\n}\n\nexport interface HoverPayload {\n\ttargetIds: Identifier[]\n\tclientOffset: XYCoord | null\n}\n\nexport interface HoverOptions {\n\tclientOffset?: XYCoord\n}\n\nexport interface DropPayload {\n\tdropResult: any\n}\n\nexport interface TargetIdPayload {\n\ttargetId: Identifier\n}\n\nexport interface SourceIdPayload {\n\tsourceId: Identifier\n}\n\nexport interface DragDropActions {\n\tbeginDrag(\n\t\tsourceIds?: Identifier[],\n\t\toptions?: any,\n\t): Action<BeginDragPayload> | undefined\n\tpublishDragSource(): SentinelAction | undefined\n\thover(targetIds: Identifier[], options?: any): Action<HoverPayload>\n\tdrop(options?: any): void\n\tendDrag(): SentinelAction\n}\n\nexport interface DragDropManager {\n\tgetMonitor(): DragDropMonitor\n\tgetBackend(): Backend\n\tgetRegistry(): HandlerRegistry\n\tgetActions(): DragDropActions\n\tdispatch(action: any): void\n}\n\nexport type BackendFactory = (\n\tmanager: DragDropManager,\n\tglobalContext?: any,\n\tconfiguration?: any,\n) => Backend\n\nexport interface DragSource {\n\tbeginDrag(monitor: DragDropMonitor, targetId: Identifier): void\n\tendDrag(monitor: DragDropMonitor, targetId: Identifier): void\n\tcanDrag(monitor: DragDropMonitor, targetId: Identifier): boolean\n\tisDragging(monitor: DragDropMonitor, targetId: Identifier): boolean\n}\n\nexport interface DropTarget {\n\tcanDrop(monitor: DragDropMonitor, targetId: Identifier): boolean\n\thover(monitor: DragDropMonitor, targetId: Identifier): void\n\tdrop(monitor: DragDropMonitor, targetId: Identifier): any\n}\n","import { invariant } from '@react-dnd/invariant'\n\nimport type { DragSource, DropTarget, Identifier } from './interfaces.js'\n\nexport function validateSourceContract(source: DragSource): void {\n\tinvariant(\n\t\ttypeof source.canDrag === 'function',\n\t\t'Expected canDrag to be a function.',\n\t)\n\tinvariant(\n\t\ttypeof source.beginDrag === 'function',\n\t\t'Expected beginDrag to be a function.',\n\t)\n\tinvariant(\n\t\ttypeof source.endDrag === 'function',\n\t\t'Expected endDrag to be a function.',\n\t)\n}\n\nexport function validateTargetContract(target: DropTarget): void {\n\tinvariant(\n\t\ttypeof target.canDrop === 'function',\n\t\t'Expected canDrop to be a function.',\n\t)\n\tinvariant(\n\t\ttypeof target.hover === 'function',\n\t\t'Expected hover to be a function.',\n\t)\n\tinvariant(\n\t\ttypeof target.drop === 'function',\n\t\t'Expected beginDrag to be a function.',\n\t)\n}\n\nexport function validateType(\n\ttype: Identifier | Identifier[],\n\tallowArray?: boolean,\n): void {\n\tif (allowArray && Array.isArray(type)) {\n\t\ttype.forEach((t) => validateType(t, false))\n\t\treturn\n\t}\n\n\tinvariant(\n\t\ttypeof type === 'string' || typeof type === 'symbol',\n\t\tallowArray\n\t\t\t? 'Type can only be a string, a symbol, or an array of either.'\n\t\t\t: 'Type can only be a string or a symbol.',\n\t)\n}\n","let nextUniqueId = 0\n\nexport function getNextUniqueId(): number {\n\treturn nextUniqueId++\n}\n","import { asap } from '@react-dnd/asap'\nimport { invariant } from '@react-dnd/invariant'\nimport type { Store } from 'redux'\n\nimport {\n\taddSource,\n\taddTarget,\n\tremoveSource,\n\tremoveTarget,\n} from '../actions/registry.js'\nimport {\n\tvalidateSourceContract,\n\tvalidateTargetContract,\n\tvalidateType,\n} from '../contracts.js'\nimport type {\n\tDragSource,\n\tDropTarget,\n\tHandlerRegistry,\n\tIdentifier,\n\tSourceType,\n\tTargetType,\n} from '../interfaces.js'\nimport { HandlerRole } from '../interfaces.js'\nimport type { State } from '../reducers/index.js'\nimport { getNextUniqueId } from '../utils/getNextUniqueId.js'\n\nfunction getNextHandlerId(role: HandlerRole): string {\n\tconst id = getNextUniqueId().toString()\n\tswitch (role) {\n\t\tcase HandlerRole.SOURCE:\n\t\t\treturn `S${id}`\n\t\tcase HandlerRole.TARGET:\n\t\t\treturn `T${id}`\n\t\tdefault:\n\t\t\tthrow new Error(`Unknown Handler Role: ${role}`)\n\t}\n}\n\nfunction parseRoleFromHandlerId(handlerId: string) {\n\tswitch (handlerId[0]) {\n\t\tcase 'S':\n\t\t\treturn HandlerRole.SOURCE\n\t\tcase 'T':\n\t\t\treturn HandlerRole.TARGET\n\t\tdefault:\n\t\t\tthrow new Error(`Cannot parse handler ID: ${handlerId}`)\n\t}\n}\n\nfunction mapContainsValue<T>(map: Map<string, T>, searchValue: T) {\n\tconst entries = map.entries()\n\tlet isDone = false\n\tdo {\n\t\tconst {\n\t\t\tdone,\n\t\t\tvalue: [, value],\n\t\t} = entries.next()\n\t\tif (value === searchValue) {\n\t\t\treturn true\n\t\t}\n\t\tisDone = !!done\n\t} while (!isDone)\n\treturn false\n}\n\nexport class HandlerRegistryImpl implements HandlerRegistry {\n\tprivate types: Map<string, SourceType | TargetType> = new Map()\n\tprivate dragSources: Map<string, DragSource> = new Map()\n\tprivate dropTargets: Map<string, DropTarget> = new Map()\n\tprivate pinnedSourceId: string | null = null\n\tprivate pinnedSource: any = null\n\tprivate store: Store<State>\n\n\tpublic constructor(store: Store<State>) {\n\t\tthis.store = store\n\t}\n\n\tpublic addSource(type: SourceType, source: DragSource): string {\n\t\tvalidateType(type)\n\t\tvalidateSourceContract(source)\n\n\t\tconst sourceId = this.addHandler(HandlerRole.SOURCE, type, source)\n\t\tthis.store.dispatch(addSource(sourceId))\n\t\treturn sourceId\n\t}\n\n\tpublic addTarget(type: TargetType, target: DropTarget): string {\n\t\tvalidateType(type, true)\n\t\tvalidateTargetContract(target)\n\n\t\tconst targetId = this.addHandler(HandlerRole.TARGET, type, target)\n\t\tthis.store.dispatch(addTarget(targetId))\n\t\treturn targetId\n\t}\n\n\tpublic containsHandler(handler: DragSource | DropTarget): boolean {\n\t\treturn (\n\t\t\tmapContainsValue(this.dragSources, handler) ||\n\t\t\tmapContainsValue(this.dropTargets, handler)\n\t\t)\n\t}\n\n\tpublic getSource(sourceId: string, includePinned = false): DragSource {\n\t\tinvariant(this.isSourceId(sourceId), 'Expected a valid source ID.')\n\t\tconst isPinned = includePinned && sourceId === this.pinnedSourceId\n\t\tconst source = isPinned ? this.pinnedSource : this.dragSources.get(sourceId)\n\t\treturn source\n\t}\n\n\tpublic getTarget(targetId: string): DropTarget {\n\t\tinvariant(this.isTargetId(targetId), 'Expected a valid target ID.')\n\t\treturn this.dropTargets.get(targetId) as DropTarget\n\t}\n\n\tpublic getSourceType(sourceId: string): Identifier {\n\t\tinvariant(this.isSourceId(sourceId), 'Expected a valid source ID.')\n\t\treturn this.types.get(sourceId) as Identifier\n\t}\n\n\tpublic getTargetType(targetId: string): Identifier | Identifier[] {\n\t\tinvariant(this.isTargetId(targetId), 'Expected a valid target ID.')\n\t\treturn this.types.get(targetId) as Identifier | Identifier[]\n\t}\n\n\tpublic isSourceId(handlerId: string): boolean {\n\t\tconst role = parseRoleFromHandlerId(handlerId)\n\t\treturn role === HandlerRole.SOURCE\n\t}\n\n\tpublic isTargetId(handlerId: string): boolean {\n\t\tconst role = parseRoleFromHandlerId(handlerId)\n\t\treturn role === HandlerRole.TARGET\n\t}\n\n\tpublic removeSource(sourceId: string): void {\n\t\tinvariant(this.getSource(sourceId), 'Expected an existing source.')\n\t\tthis.store.dispatch(removeSource(sourceId))\n\t\tasap(() => {\n\t\t\tthis.dragSources.delete(sourceId)\n\t\t\tthis.types.delete(sourceId)\n\t\t})\n\t}\n\n\tpublic removeTarget(targetId: string): void {\n\t\tinvariant(this.getTarget(targetId), 'Expected an existing target.')\n\t\tthis.store.dispatch(removeTarget(targetId))\n\t\tthis.dropTargets.delete(targetId)\n\t\tthis.types.delete(targetId)\n\t}\n\n\tpublic pinSource(sourceId: string): void {\n\t\tconst source = this.getSource(sourceId)\n\t\tinvariant(source, 'Expected an existing source.')\n\n\t\tthis.pinnedSourceId = sourceId\n\t\tthis.pinnedSource = source\n\t}\n\n\tpublic unpinSource(): void {\n\t\tinvariant(this.pinnedSource, 'No source is pinned at the time.')\n\n\t\tthis.pinnedSourceId = null\n\t\tthis.pinnedSource = null\n\t}\n\n\tprivate addHandler(\n\t\trole: HandlerRole,\n\t\ttype: SourceType | TargetType,\n\t\thandler: DragSource | DropTarget,\n\t): string {\n\t\tconst id = getNextHandlerId(role)\n\t\tthis.types.set(id, type)\n\t\tif (role === HandlerRole.SOURCE) {\n\t\t\tthis.dragSources.set(id, handler as DragSource)\n\t\t} else if (role === HandlerRole.TARGET) {\n\t\t\tthis.dropTargets.set(id, handler as DropTarget)\n\t\t}\n\t\treturn id\n\t}\n}\n","import type { XYCoord } from '../interfaces.js'\n\nexport type EqualityCheck<T> = (a: T, b: T) => boolean\nexport const strictEquality = <T>(a: T, b: T): boolean => a === b\n\n/**\n * Determine if two cartesian coordinate offsets are equal\n * @param offsetA\n * @param offsetB\n */\nexport function areCoordsEqual(\n\toffsetA: XYCoord | null | undefined,\n\toffsetB: XYCoord | null | undefined,\n): boolean {\n\tif (!offsetA && !offsetB) {\n\t\treturn true\n\t} else if (!offsetA || !offsetB) {\n\t\treturn false\n\t} else {\n\t\treturn offsetA.x === offsetB.x && offsetA.y === offsetB.y\n\t}\n}\n\n/**\n * Determines if two arrays of items are equal\n * @param a The first array of items\n * @param b The second array of items\n */\nexport function areArraysEqual<T>(\n\ta: T[],\n\tb: T[],\n\tisEqual: EqualityCheck<T> = strictEquality,\n): boolean {\n\tif (a.length !== b.length) {\n\t\treturn false\n\t}\n\tfor (let i = 0; i < a.length; ++i) {\n\t\tif (!isEqual(a[i] as T, b[i] as T)) {\n\t\t\treturn false\n\t\t}\n\t}\n\treturn true\n}\n","import {\n\tBEGIN_DRAG,\n\tDROP,\n\tEND_DRAG,\n\tHOVER,\n\tPUBLISH_DRAG_SOURCE,\n} from '../actions/dragDrop/index.js'\nimport {\n\tADD_SOURCE,\n\tADD_TARGET,\n\tREMOVE_SOURCE,\n\tREMOVE_TARGET,\n} from '../actions/registry.js'\nimport type { Action } from '../interfaces.js'\nimport { ALL, NONE } from '../utils/dirtiness.js'\nimport { areArraysEqual } from '../utils/equality.js'\nimport { xor } from '../utils/js_utils.js'\n\nexport type State = string[]\n\nexport interface DirtyHandlerIdPayload {\n\ttargetIds: string[]\n\tprevTargetIds: string[]\n}\n\nexport function reduce(\n\t// eslint-disable-next-line @typescript-eslint/no-unused-vars\n\t_state: State = NONE,\n\taction: Action<DirtyHandlerIdPayload>,\n): State {\n\tswitch (action.type) {\n\t\tcase HOVER:\n\t\t\tbreak\n\t\tcase ADD_SOURCE:\n\t\tcase ADD_TARGET:\n\t\tcase REMOVE_TARGET:\n\t\tcase REMOVE_SOURCE:\n\t\t\treturn NONE\n\t\tcase BEGIN_DRAG:\n\t\tcase PUBLISH_DRAG_SOURCE:\n\t\tcase END_DRAG:\n\t\tcase DROP:\n\t\tdefault:\n\t\t\treturn ALL\n\t}\n\n\tconst { targetIds = [], prevTargetIds = [] } = action.payload\n\tconst result = xor(targetIds, prevTargetIds)\n\tconst didChange =\n\t\tresult.length > 0 || !areArraysEqual(targetIds, prevTargetIds)\n\n\tif (!didChange) {\n\t\treturn NONE\n\t}\n\n\t// Check the target ids at the innermost position. If they are valid, add them\n\t// to the result\n\tconst prevInnermostTargetId = prevTargetIds[prevTargetIds.length - 1]\n\tconst innermostTargetId = targetIds[targetIds.length - 1]\n\tif (prevInnermostTargetId !== innermostTargetId) {\n\t\tif (prevInnermostTargetId) {\n\t\t\tresult.push(prevInnermostTargetId)\n\t\t}\n\t\tif (innermostTargetId) {\n\t\t\tresult.push(innermostTargetId)\n\t\t}\n\t}\n\n\treturn result\n}\n","import {\n\tBEGIN_DRAG,\n\tDROP,\n\tEND_DRAG,\n\tHOVER,\n\tINIT_COORDS,\n} from '../actions/dragDrop/index.js'\nimport type { Action, XYCoord } from '../interfaces.js'\nimport { areCoordsEqual } from '../utils/equality.js'\n\nexport interface State {\n\tinitialSourceClientOffset: XYCoord | null\n\tinitialClientOffset: XYCoord | null\n\tclientOffset: XYCoord | null\n}\n\nconst initialState: State = {\n\tinitialSourceClientOffset: null,\n\tinitialClientOffset: null,\n\tclientOffset: null,\n}\n\nexport function reduce(\n\tstate: State = initialState,\n\taction: Action<{\n\t\tsourceClientOffset: XYCoord\n\t\tclientOffset: XYCoord\n\t}>,\n): State {\n\tconst { payload } = action\n\tswitch (action.type) {\n\t\tcase INIT_COORDS:\n\t\tcase BEGIN_DRAG:\n\t\t\treturn {\n\t\t\t\tinitialSourceClientOffset: payload.sourceClientOffset,\n\t\t\t\tinitialClientOffset: payload.clientOffset,\n\t\t\t\tclientOffset: payload.clientOffset,\n\t\t\t}\n\t\tcase HOVER:\n\t\t\tif (areCoordsEqual(state.clientOffset, payload.clientOffset)) {\n\t\t\t\treturn state\n\t\t\t}\n\t\t\treturn {\n\t\t\t\t...state,\n\t\t\t\tclientOffset: payload.clientOffset,\n\t\t\t}\n\t\tcase END_DRAG:\n\t\tcase DROP:\n\t\t\treturn initialState\n\t\tdefault:\n\t\t\treturn state\n\t}\n}\n","import {\n\tBEGIN_DRAG,\n\tDROP,\n\tEND_DRAG,\n\tHOVER,\n\tPUBLISH_DRAG_SOURCE,\n} from '../actions/dragDrop/index.js'\nimport { REMOVE_TARGET } from '../actions/registry.js'\nimport type { Action, Identifier } from '../interfaces.js'\nimport { without } from '../utils/js_utils.js'\n\nexport interface State {\n\titemType: Identifier | Identifier[] | null\n\titem: any\n\tsourceId: string | null\n\ttargetIds: string[]\n\tdropResult: any\n\tdidDrop: boolean\n\tisSourcePublic: boolean | null\n}\n\nconst initialState: State = {\n\titemType: null,\n\titem: null,\n\tsourceId: null,\n\ttargetIds: [],\n\tdropResult: null,\n\tdidDrop: false,\n\tisSourcePublic: null,\n}\n\nexport function reduce(\n\tstate: State = initialState,\n\taction: Action<{\n\t\titemType: Identifier | Identifier[]\n\t\titem: any\n\t\tsourceId: string\n\t\ttargetId: string\n\t\ttargetIds: string[]\n\t\tisSourcePublic: boolean\n\t\tdropResult: any\n\t}>,\n): State {\n\tconst { payload } = action\n\tswitch (action.type) {\n\t\tcase BEGIN_DRAG:\n\t\t\treturn {\n\t\t\t\t...state,\n\t\t\t\titemType: payload.itemType,\n\t\t\t\titem: payload.item,\n\t\t\t\tsourceId: payload.sourceId,\n\t\t\t\tisSourcePublic: payload.isSourcePublic,\n\t\t\t\tdropResult: null,\n\t\t\t\tdidDrop: false,\n\t\t\t}\n\t\tcase PUBLISH_DRAG_SOURCE:\n\t\t\treturn {\n\t\t\t\t...state,\n\t\t\t\tisSourcePublic: true,\n\t\t\t}\n\t\tcase HOVER:\n\t\t\treturn {\n\t\t\t\t...state,\n\t\t\t\ttargetIds: payload.targetIds,\n\t\t\t}\n\t\tcase REMOVE_TARGET:\n\t\t\tif (state.targetIds.indexOf(payload.targetId) === -1) {\n\t\t\t\treturn state\n\t\t\t}\n\t\t\treturn {\n\t\t\t\t...state,\n\t\t\t\ttargetIds: without(state.targetIds, payload.targetId),\n\t\t\t}\n\t\tcase DROP:\n\t\t\treturn {\n\t\t\t\t...state,\n\t\t\t\tdropResult: payload.dropResult,\n\t\t\t\tdidDrop: true,\n\t\t\t\ttargetIds: [],\n\t\t\t}\n\t\tcase END_DRAG:\n\t\t\treturn {\n\t\t\t\t...state,\n\t\t\t\titemType: null,\n\t\t\t\titem: null,\n\t\t\t\tsourceId: null,\n\t\t\t\tdropResult: null,\n\t\t\t\tdidDrop: false,\n\t\t\t\tisSourcePublic: null,\n\t\t\t\ttargetIds: [],\n\t\t\t}\n\t\tdefault:\n\t\t\treturn state\n\t}\n}\n","import {\n\tADD_SOURCE,\n\tADD_TARGET,\n\tREMOVE_SOURCE,\n\tREMOVE_TARGET,\n} from '../actions/registry.js'\nimport type { Action } from '../interfaces.js'\n\nexport type State = number\n\nexport function reduce(state: State = 0, action: Action<any>): State {\n\tswitch (action.type) {\n\t\tcase ADD_SOURCE:\n\t\tcase ADD_TARGET:\n\t\t\treturn state + 1\n\t\tcase REMOVE_SOURCE:\n\t\tcase REMOVE_TARGET:\n\t\t\treturn state - 1\n\t\tdefault:\n\t\t\treturn state\n\t}\n}\n","export type State = number\n\nexport function reduce(state: State = 0): State {\n\treturn state + 1\n}\n","import type { Action } from '../interfaces.js'\nimport { get } from '../utils/js_utils.js'\nimport type { State as DirtyHandlerIdsState } from './dirtyHandlerIds.js'\nimport { reduce as dirtyHandlerIds } from './dirtyHandlerIds.js'\nimport type { State as DragOffsetState } from './dragOffset.js'\nimport { reduce as dragOffset } from './dragOffset.js'\nimport type { State as DragOperationState } from './dragOperation.js'\nimport { reduce as dragOperation } from './dragOperation.js'\nimport type { State as RefCountState } from './refCount.js'\nimport { reduce as refCount } from './refCount.js'\nimport type { State as StateIdState } from './stateId.js'\nimport { reduce as stateId } from './stateId.js'\n\nexport interface State {\n\tdirtyHandlerIds: DirtyHandlerIdsState\n\tdragOffset: DragOffsetState\n\trefCount: RefCountState\n\tdragOperation: DragOperationState\n\tstateId: StateIdState\n}\n\nexport function reduce(state: State = {} as State, action: Action<any>): State {\n\treturn {\n\t\tdirtyHandlerIds: dirtyHandlerIds(state.dirtyHandlerIds, {\n\t\t\ttype: action.type,\n\t\t\tpayload: {\n\t\t\t\t...action.payload,\n\t\t\t\tprevTargetIds: get<string[]>(state, 'dragOperation.targetIds', []),\n\t\t\t},\n\t\t}),\n\t\tdragOffset: dragOffset(state.dragOffset, action),\n\t\trefCount: refCount(state.refCount, action),\n\t\tdragOperation: dragOperation(state.dragOperation, action),\n\t\tstateId: stateId(state.stateId),\n\t}\n}\n","import type { Store } from 'redux'\nimport { createStore } from 'redux'\n\nimport { DragDropManagerImpl } from './classes/DragDropManagerImpl.js'\nimport { DragDropMonitorImpl } from './classes/DragDropMonitorImpl.js'\nimport { HandlerRegistryImpl } from './classes/HandlerRegistryImpl.js'\nimport type { BackendFactory, DragDropManager } from './interfaces.js'\nimport type { State } from './reducers/index.js'\nimport { reduce } from './reducers/index.js'\n\nexport function createDragDropManager(\n\tbackendFactory: BackendFactory,\n\tglobalContext: unknown = undefined,\n\tbackendOptions: unknown = {},\n\tdebugMode = false,\n): DragDropManager {\n\tconst store = makeStoreInstance(debugMode)\n\tconst monitor = new DragDropMonitorImpl(store, new HandlerRegistryImpl(store))\n\tconst manager = new DragDropManagerImpl(store, monitor)\n\tconst backend = backendFactory(manager, globalContext, backendOptions)\n\tmanager.receiveBackend(backend)\n\treturn manager\n}\n\nfunction makeStoreInstance(debugMode: boolean): Store<State> {\n\t// TODO: if we ever make a react-native version of this,\n\t// we'll need to consider how to pull off dev-tooling\n\tconst reduxDevTools =\n\t\ttypeof window !== 'undefined' &&\n\t\t(window as any).__REDUX_DEVTOOLS_EXTENSION__\n\treturn createStore(\n\t\treduce,\n\t\tdebugMode &&\n\t\t\treduxDevTools &&\n\t\t\treduxDevTools({\n\t\t\t\tname: 'dnd-core',\n\t\t\t\tinstanceId: 'dnd-core',\n\t\t\t}),\n\t)\n}\n","import type { BackendFactory, DragDropManager } from 'dnd-core'\nimport { createDragDropManager } from 'dnd-core'\nimport type { FC, ReactNode } from 'react'\nimport { memo, useEffect } from 'react'\n\nimport { DndContext } from './DndContext.js'\n\nexport type DndProviderProps<BackendContext, BackendOptions> =\n\t| {\n\t\t\tchildren?: ReactNode\n\t\t\tmanager: DragDropManager\n\t  }\n\t| {\n\t\t\tbackend: BackendFactory\n\t\t\tchildren?: ReactNode\n\t\t\tcontext?: BackendContext\n\t\t\toptions?: BackendOptions\n\t\t\tdebugMode?: boolean\n\t  }\n\nlet refCount = 0\nconst INSTANCE_SYM = Symbol.for('__REACT_DND_CONTEXT_INSTANCE__')\n\n/**\n * A React component that provides the React-DnD context\n */\nexport const DndProvider: FC<DndProviderProps<unknown, unknown>> = memo(\n\tfunction DndProvider({ children, ...props }) {\n\t\tconst [manager, isGlobalInstance] = getDndContextValue(props) // memoized from props\n\t\t/**\n\t\t * If the global context was used to store the DND context\n\t\t * then where theres no more references to it we should\n\t\t * clean it up to avoid memory leaks\n\t\t */\n\t\tuseEffect(() => {\n\t\t\tif (isGlobalInstance) {\n\t\t\t\tconst context = getGlobalContext()\n\t\t\t\t++refCount\n\n\t\t\t\treturn () => {\n\t\t\t\t\tif (--refCount === 0) {\n\t\t\t\t\t\tcontext[INSTANCE_SYM] = null\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t\treturn\n\t\t}, [])\n\n\t\treturn <DndContext.Provider value={manager}>{children}</DndContext.Provider>\n\t},\n)\n\nfunction getDndContextValue(props: DndProviderProps<unknown, unknown>) {\n\tif ('manager' in props) {\n\t\tconst manager = { dragDropManager: props.manager }\n\t\treturn [manager, false]\n\t}\n\n\tconst manager = createSingletonDndContext(\n\t\tprops.backend,\n\t\tprops.context,\n\t\tprops.options,\n\t\tprops.debugMode,\n\t)\n\tconst isGlobalInstance = !props.context\n\n\treturn [manager, isGlobalInstance]\n}\n\nfunction createSingletonDndContext<BackendContext, BackendOptions>(\n\tbackend: BackendFactory,\n\tcontext: BackendContext = getGlobalContext(),\n\toptions: BackendOptions,\n\tdebugMode?: boolean,\n) {\n\tconst ctx = context as any\n\tif (!ctx[INSTANCE_SYM]) {\n\t\tctx[INSTANCE_SYM] = {\n\t\t\tdragDropManager: createDragDropManager(\n\t\t\t\tbackend,\n\t\t\t\tcontext,\n\t\t\t\toptions,\n\t\t\t\tdebugMode,\n\t\t\t),\n\t\t}\n\t}\n\treturn ctx[INSTANCE_SYM]\n}\n\ndeclare const global: any\nfunction getGlobalContext() {\n\treturn typeof global !== 'undefined' ? global : (window as any)\n}\n","import type { HandlerManager, MonitorEventEmitter } from '../types/index.js'\nimport { useCollector } from './useCollector.js'\nimport { useIsomorphicLayoutEffect } from './useIsomorphicLayoutEffect.js'\n\nexport function useMonitorOutput<Monitor extends HandlerManager, Collected>(\n\tmonitor: Monitor & MonitorEventEmitter,\n\tcollect: (monitor: Monitor) => Collected,\n\tonCollect?: () => void,\n): Collected {\n\tconst [collected, updateCollected] = useCollector(monitor, collect, onCollect)\n\n\tuseIsomorphicLayoutEffect(\n\t\tfunction subscribeToMonitorStateChange() {\n\t\t\tconst handlerId = monitor.getHandlerId()\n\t\t\tif (handlerId == null) {\n\t\t\t\treturn\n\t\t\t}\n\t\t\treturn monitor.subscribeToStateChange(updateCollected, {\n\t\t\t\thandlerIds: [handlerId],\n\t\t\t})\n\t\t},\n\t\t[monitor, updateCollected],\n\t)\n\n\treturn collected\n}\n","import equal from 'fast-deep-equal'\nimport { useCallback, useState } from 'react'\n\nimport { useIsomorphicLayoutEffect } from './useIsomorphicLayoutEffect.js'\n\n/**\n *\n * @param monitor The monitor to collect state from\n * @param collect The collecting function\n * @param onUpdate A method to invoke when updates occur\n */\nexport function useCollector<T, S>(\n\tmonitor: T,\n\tcollect: (monitor: T) => S,\n\tonUpdate?: () => void,\n): [S, () => void] {\n\tconst [collected, setCollected] = useState(() => collect(monitor))\n\n\tconst updateCollected = useCallback(() => {\n\t\tconst nextValue = collect(monitor)\n\t\t// This needs to be a deep-equality check because some monitor-collected values\n\t\t// include XYCoord objects that may be equivalent, but do not have instance equality.\n\t\tif (!equal(collected, nextValue)) {\n\t\t\tsetCollected(nextValue)\n\t\t\tif (onUpdate) {\n\t\t\t\tonUpdate()\n\t\t\t}\n\t\t}\n\t}, [collected, monitor, onUpdate])\n\n\t// update the collected properties after react renders.\n\t// Note that the \"Dustbin Stress Test\" fails if this is not\n\t// done when the component updates\n\tuseIsomorphicLayoutEffect(updateCollected)\n\n\treturn [collected, updateCollected]\n}\n","import type { Connector } from '../internals/index.js'\nimport type { HandlerManager, MonitorEventEmitter } from '../types/index.js'\nimport { useMonitorOutput } from './useMonitorOutput.js'\n\nexport function useCollectedProps<Collected, Monitor extends HandlerManager>(\n\tcollector: ((monitor: Monitor) => Collected) | undefined,\n\tmonitor: Monitor & MonitorEventEmitter,\n\tconnector: Connector,\n) {\n\treturn useMonitorOutput(monitor, collector || (() => ({} as Collected)), () =>\n\t\tconnector.reconnect(),\n\t)\n}\n","import { useMemo } from 'react'\n\nimport type { SourceConnector } from '../../internals/index.js'\n\nexport function useConnectDragSource(connector: SourceConnector) {\n\treturn useMemo(() => connector.hooks.dragSource(), [connector])\n}\n\nexport function useConnectDragPreview(connector: SourceConnector) {\n\treturn useMemo(() => connector.hooks.dragPreview(), [connector])\n}\n","import { shallowEqual } from '@react-dnd/shallowequal'\nimport type { Backend, Identifier, Unsubscribe } from 'dnd-core'\nimport type { ReactElement, Ref, RefObject } from 'react'\n\nimport type { DragPreviewOptions, DragSourceOptions } from '../types/index.js'\nimport { isRef } from './isRef.js'\nimport { wrapConnectorHooks } from './wrapConnectorHooks.js'\n\nexport interface Connector {\n\thooks: any\n\tconnectTarget: any\n\treceiveHandlerId(handlerId: Identifier | null): void\n\treconnect(): void\n}\n\nexport class SourceConnector implements Connector {\n\tpublic hooks = wrapConnectorHooks({\n\t\tdragSource: (\n\t\t\tnode: Element | ReactElement | Ref<any>,\n\t\t\toptions?: DragSourceOptions,\n\t\t) => {\n\t\t\tthis.clearDragSource()\n\t\t\tthis.dragSourceOptions = options || null\n\t\t\tif (isRef(node)) {\n\t\t\t\tthis.dragSourceRef = node as RefObject<any>\n\t\t\t} else {\n\t\t\t\tthis.dragSourceNode = node\n\t\t\t}\n\t\t\tthis.reconnectDragSource()\n\t\t},\n\t\tdragPreview: (node: any, options?: DragPreviewOptions) => {\n\t\t\tthis.clearDragPreview()\n\t\t\tthis.dragPreviewOptions = options || null\n\t\t\tif (isRef(node)) {\n\t\t\t\tthis.dragPreviewRef = node\n\t\t\t} else {\n\t\t\t\tthis.dragPreviewNode = node\n\t\t\t}\n\t\t\tthis.reconnectDragPreview()\n\t\t},\n\t})\n\tprivate handlerId: Identifier | null = null\n\n\t// The drop target may either be attached via ref or connect function\n\tprivate dragSourceRef: RefObject<any> | null = null\n\tprivate dragSourceNode: any\n\tprivate dragSourceOptionsInternal: DragSourceOptions | null = null\n\tprivate dragSourceUnsubscribe: Unsubscribe | undefined\n\n\t// The drag preview may either be attached via ref or connect function\n\tprivate dragPreviewRef: RefObject<any> | null = null\n\tprivate dragPreviewNode: any\n\tprivate dragPreviewOptionsInternal: DragPreviewOptions | null = null\n\tprivate dragPreviewUnsubscribe: Unsubscribe | undefined\n\n\tprivate lastConnectedHandlerId: Identifier | null = null\n\tprivate lastConnectedDragSource: any = null\n\tprivate lastConnectedDragSourceOptions: any = null\n\tprivate lastConnectedDragPreview: any = null\n\tprivate lastConnectedDragPreviewOptions: any = null\n\n\tprivate readonly backend: Backend\n\n\tpublic constructor(backend: Backend) {\n\t\tthis.backend = backend\n\t}\n\n\tpublic receiveHandlerId(newHandlerId: Identifier | null): void {\n\t\tif (this.handlerId === newHandlerId) {\n\t\t\treturn\n\t\t}\n\n\t\tthis.handlerId = newHandlerId\n\t\tthis.reconnect()\n\t}\n\n\tpublic get connectTarget(): any {\n\t\treturn this.dragSource\n\t}\n\n\tpublic get dragSourceOptions(): DragSourceOptions | null {\n\t\treturn this.dragSourceOptionsInternal\n\t}\n\tpublic set dragSourceOptions(options: DragSourceOptions | null) {\n\t\tthis.dragSourceOptionsInternal = options\n\t}\n\n\tpublic get dragPreviewOptions(): DragPreviewOptions | null {\n\t\treturn this.dragPreviewOptionsInternal\n\t}\n\n\tpublic set dragPreviewOptions(options: DragPreviewOptions | null) {\n\t\tthis.dragPreviewOptionsInternal = options\n\t}\n\n\tpublic reconnect(): void {\n\t\tconst didChange = this.reconnectDragSource()\n\t\tthis.reconnectDragPreview(didChange)\n\t}\n\n\tprivate reconnectDragSource(): boolean {\n\t\tconst dragSource = this.dragSource\n\t\t// if nothing has changed then don't resubscribe\n\t\tconst didChange =\n\t\t\tthis.didHandlerIdChange() ||\n\t\t\tthis.didConnectedDragSourceChange() ||\n\t\t\tthis.didDragSourceOptionsChange()\n\n\t\tif (didChange) {\n\t\t\tthis.disconnectDragSource()\n\t\t}\n\n\t\tif (!this.handlerId) {\n\t\t\treturn didChange\n\t\t}\n\t\tif (!dragSource) {\n\t\t\tthis.lastConnectedDragSource = dragSource\n\t\t\treturn didChange\n\t\t}\n\n\t\tif (didChange) {\n\t\t\tthis.lastConnectedHandlerId = this.handlerId\n\t\t\tthis.lastConnectedDragSource = dragSource\n\t\t\tthis.lastConnectedDragSourceOptions = this.dragSourceOptions\n\t\t\tthis.dragSourceUnsubscribe = this.backend.connectDragSource(\n\t\t\t\tthis.handlerId,\n\t\t\t\tdragSource,\n\t\t\t\tthis.dragSourceOptions,\n\t\t\t)\n\t\t}\n\t\treturn didChange\n\t}\n\n\tprivate reconnectDragPreview(forceDidChange = false): void {\n\t\tconst dragPreview = this.dragPreview\n\t\t// if nothing has changed then don't resubscribe\n\t\tconst didChange =\n\t\t\tforceDidChange ||\n\t\t\tthis.didHandlerIdChange() ||\n\t\t\tthis.didConnectedDragPreviewChange() ||\n\t\t\tthis.didDragPreviewOptionsChange()\n\n\t\tif (didChange) {\n\t\t\tthis.disconnectDragPreview()\n\t\t}\n\n\t\tif (!this.handlerId) {\n\t\t\treturn\n\t\t}\n\t\tif (!dragPreview) {\n\t\t\tthis.lastConnectedDragPreview = dragPreview\n\t\t\treturn\n\t\t}\n\n\t\tif (didChange) {\n\t\t\tthis.lastConnectedHandlerId = this.handlerId\n\t\t\tthis.lastConnectedDragPreview = dragPreview\n\t\t\tthis.lastConnectedDragPreviewOptions = this.dragPreviewOptions\n\t\t\tthis.dragPreviewUnsubscribe = this.backend.connectDragPreview(\n\t\t\t\tthis.handlerId,\n\t\t\t\tdragPreview,\n\t\t\t\tthis.dragPreviewOptions,\n\t\t\t)\n\t\t}\n\t}\n\n\tprivate didHandlerIdChange(): boolean {\n\t\treturn this.lastConnectedHandlerId !== this.handlerId\n\t}\n\n\tprivate didConnectedDragSourceChange(): boolean {\n\t\treturn this.lastConnectedDragSource !== this.dragSource\n\t}\n\n\tprivate didConnectedDragPreviewChange(): boolean {\n\t\treturn this.lastConnectedDragPreview !== this.dragPreview\n\t}\n\n\tprivate didDragSourceOptionsChange(): boolean {\n\t\treturn !shallowEqual(\n\t\t\tthis.lastConnectedDragSourceOptions,\n\t\t\tthis.dragSourceOptions,\n\t\t)\n\t}\n\n\tprivate didDragPreviewOptionsChange(): boolean {\n\t\treturn !shallowEqual(\n\t\t\tthis.lastConnectedDragPreviewOptions,\n\t\t\tthis.dragPreviewOptions,\n\t\t)\n\t}\n\n\tpublic disconnectDragSource() {\n\t\tif (this.dragSourceUnsubscribe) {\n\t\t\tthis.dragSourceUnsubscribe()\n\t\t\tthis.dragSourceUnsubscribe = undefined\n\t\t}\n\t}\n\n\tpublic disconnectDragPreview() {\n\t\tif (this.dragPreviewUnsubscribe) {\n\t\t\tthis.dragPreviewUnsubscribe()\n\t\t\tthis.dragPreviewUnsubscribe = undefined\n\t\t\tthis.dragPreviewNode = null\n\t\t\tthis.dragPreviewRef = null\n\t\t}\n\t}\n\n\tprivate get dragSource() {\n\t\treturn (\n\t\t\tthis.dragSourceNode || (this.dragSourceRef && this.dragSourceRef.current)\n\t\t)\n\t}\n\n\tprivate get dragPreview() {\n\t\treturn (\n\t\t\tthis.dragPreviewNode ||\n\t\t\t(this.dragPreviewRef && this.dragPreviewRef.current)\n\t\t)\n\t}\n\n\tprivate clearDragSource() {\n\t\tthis.dragSourceNode = null\n\t\tthis.dragSourceRef = null\n\t}\n\n\tprivate clearDragPreview() {\n\t\tthis.dragPreviewNode = null\n\t\tthis.dragPreviewRef = null\n\t}\n}\n","import { invariant } from '@react-dnd/invariant'\nimport type {\n\tDragDropManager,\n\tDragDropMonitor,\n\tIdentifier,\n\tListener,\n\tUnsubscribe,\n\tXYCoord,\n} from 'dnd-core'\n\nimport type { DragSourceMonitor } from '../types/index.js'\n\nlet isCallingCanDrag = false\nlet isCallingIsDragging = false\n\nexport class DragSourceMonitorImpl implements DragSourceMonitor {\n\tprivate internalMonitor: DragDropMonitor\n\tprivate sourceId: Identifier | null = null\n\n\tpublic constructor(manager: DragDropManager) {\n\t\tthis.internalMonitor = manager.getMonitor()\n\t}\n\n\tpublic receiveHandlerId(sourceId: Identifier | null): void {\n\t\tthis.sourceId = sourceId\n\t}\n\n\tpublic getHandlerId(): Identifier | null {\n\t\treturn this.sourceId\n\t}\n\n\tpublic canDrag(): boolean {\n\t\tinvariant(\n\t\t\t!isCallingCanDrag,\n\t\t\t'You may not call monitor.canDrag() inside your canDrag() implementation. ' +\n\t\t\t\t'Read more: http://react-dnd.github.io/react-dnd/docs/api/drag-source-monitor',\n\t\t)\n\n\t\ttry {\n\t\t\tisCallingCanDrag = true\n\t\t\treturn this.internalMonitor.canDragSource(this.sourceId as Identifier)\n\t\t} finally {\n\t\t\tisCallingCanDrag = false\n\t\t}\n\t}\n\n\tpublic isDragging(): boolean {\n\t\tif (!this.sourceId) {\n\t\t\treturn false\n\t\t}\n\t\tinvariant(\n\t\t\t!isCallingIsDragging,\n\t\t\t'You may not call monitor.isDragging() inside your isDragging() implementation. ' +\n\t\t\t\t'Read more: http://react-dnd.github.io/react-dnd/docs/api/drag-source-monitor',\n\t\t)\n\n\t\ttry {\n\t\t\tisCallingIsDragging = true\n\t\t\treturn this.internalMonitor.isDraggingSource(this.sourceId)\n\t\t} finally {\n\t\t\tisCallingIsDragging = false\n\t\t}\n\t}\n\n\tpublic subscribeToStateChange(\n\t\tlistener: Listener,\n\t\toptions?: { handlerIds?: Identifier[] },\n\t): Unsubscribe {\n\t\treturn this.internalMonitor.subscribeToStateChange(listener, options)\n\t}\n\n\tpublic isDraggingSource(sourceId: Identifier): boolean {\n\t\treturn this.internalMonitor.isDraggingSource(sourceId)\n\t}\n\n\tpublic isOverTarget(\n\t\ttargetId: Identifier,\n\t\toptions?: { shallow: boolean },\n\t): boolean {\n\t\treturn this.internalMonitor.isOverTarget(targetId, options)\n\t}\n\n\tpublic getTargetIds(): Identifier[] {\n\t\treturn this.internalMonitor.getTargetIds()\n\t}\n\n\tpublic isSourcePublic(): boolean | null {\n\t\treturn this.internalMonitor.isSourcePublic()\n\t}\n\n\tpublic getSourceId(): Identifier | null {\n\t\treturn this.internalMonitor.getSourceId()\n\t}\n\n\tpublic subscribeToOffsetChange(listener: Listener): Unsubscribe {\n\t\treturn this.internalMonitor.subscribeToOffsetChange(listener)\n\t}\n\n\tpublic canDragSource(sourceId: Identifier): boolean {\n\t\treturn this.internalMonitor.canDragSource(sourceId)\n\t}\n\n\tpublic canDropOnTarget(targetId: Identifier): boolean {\n\t\treturn this.internalMonitor.canDropOnTarget(targetId)\n\t}\n\n\tpublic getItemType(): Identifier | null {\n\t\treturn this.internalMonitor.getItemType()\n\t}\n\n\tpublic getItem(): any {\n\t\treturn this.internalMonitor.getItem()\n\t}\n\n\tpublic getDropResult(): any {\n\t\treturn this.internalMonitor.getDropResult()\n\t}\n\n\tpublic didDrop(): boolean {\n\t\treturn this.internalMonitor.didDrop()\n\t}\n\n\tpublic getInitialClientOffset(): XYCoord | null {\n\t\treturn this.internalMonitor.getInitialClientOffset()\n\t}\n\n\tpublic getInitialSourceClientOffset(): XYCoord | null {\n\t\treturn this.internalMonitor.getInitialSourceClientOffset()\n\t}\n\n\tpublic getSourceClientOffset(): XYCoord | null {\n\t\treturn this.internalMonitor.getSourceClientOffset()\n\t}\n\n\tpublic getClientOffset(): XYCoord | null {\n\t\treturn this.internalMonitor.getClientOffset()\n\t}\n\n\tpublic getDifferenceFromInitialOffset(): XYCoord | null {\n\t\treturn this.internalMonitor.getDifferenceFromInitialOffset()\n\t}\n}\n","import type { DragDropMonitor, DragSource, Identifier } from 'dnd-core'\n\nimport type { Connector } from '../../internals/index.js'\nimport type { DragSourceMonitor } from '../../types/index.js'\nimport type { DragObjectFactory, DragSourceHookSpec } from '../types.js'\n\nexport class DragSourceImpl<O, R, P> implements DragSource {\n\tpublic constructor(\n\t\tpublic spec: DragSourceHookSpec<O, R, P>,\n\t\tprivate monitor: DragSourceMonitor<O, R>,\n\t\tprivate connector: Connector,\n\t) {}\n\n\tpublic beginDrag() {\n\t\tconst spec = this.spec\n\t\tconst monitor = this.monitor\n\n\t\tlet result: O | null = null\n\t\tif (typeof spec.item === 'object') {\n\t\t\tresult = spec.item as O\n\t\t} else if (typeof spec.item === 'function') {\n\t\t\tresult = (spec.item as DragObjectFactory<O>)(monitor)\n\t\t} else {\n\t\t\tresult = {} as O\n\t\t}\n\t\treturn result ?? null\n\t}\n\n\tpublic canDrag() {\n\t\tconst spec = this.spec\n\t\tconst monitor = this.monitor\n\t\tif (typeof spec.canDrag === 'boolean') {\n\t\t\treturn spec.canDrag\n\t\t} else if (typeof spec.canDrag === 'function') {\n\t\t\treturn spec.canDrag(monitor)\n\t\t} else {\n\t\t\treturn true\n\t\t}\n\t}\n\n\tpublic isDragging(globalMonitor: DragDropMonitor, target: Identifier) {\n\t\tconst spec = this.spec\n\t\tconst monitor = this.monitor\n\t\tconst { isDragging } = spec\n\t\treturn isDragging\n\t\t\t? isDragging(monitor)\n\t\t\t: target === globalMonitor.getSourceId()\n\t}\n\n\tpublic endDrag() {\n\t\tconst spec = this.spec\n\t\tconst monitor = this.monitor\n\t\tconst connector = this.connector\n\t\tconst { end } = spec\n\t\tif (end) {\n\t\t\tend(monitor.getItem(), monitor)\n\t\t}\n\t\tconnector.reconnect()\n\t}\n}\n","import type { SourceConnector } from '../../internals/index.js'\nimport { registerSource } from '../../internals/index.js'\nimport type { DragSourceMonitor } from '../../types/index.js'\nimport type { DragSourceHookSpec } from '../types.js'\nimport { useDragDropManager } from '../useDragDropManager.js'\nimport { useIsomorphicLayoutEffect } from '../useIsomorphicLayoutEffect.js'\nimport { useDragSource } from './useDragSource.js'\nimport { useDragType } from './useDragType.js'\n\nexport function useRegisteredDragSource<O, R, P>(\n\tspec: DragSourceHookSpec<O, R, P>,\n\tmonitor: DragSourceMonitor<O, R>,\n\tconnector: SourceConnector,\n): void {\n\tconst manager = useDragDropManager()\n\tconst handler = useDragSource(spec, monitor, connector)\n\tconst itemType = useDragType(spec)\n\n\tuseIsomorphicLayoutEffect(\n\t\tfunction registerDragSource() {\n\t\t\tif (itemType != null) {\n\t\t\t\tconst [handlerId, unregister] = registerSource(\n\t\t\t\t\titemType,\n\t\t\t\t\thandler,\n\t\t\t\t\tmanager,\n\t\t\t\t)\n\t\t\t\tmonitor.receiveHandlerId(handlerId)\n\t\t\t\tconnector.receiveHandlerId(handlerId)\n\t\t\t\treturn unregister\n\t\t\t}\n\t\t\treturn\n\t\t},\n\t\t[manager, monitor, connector, handler, itemType],\n\t)\n}\n","import { useEffect, useMemo } from 'react'\n\nimport type { Connector } from '../../internals/index.js'\nimport type { DragSourceMonitor } from '../../types/index.js'\nimport type { DragSourceHookSpec } from '../types.js'\nimport { DragSourceImpl } from './DragSourceImpl.js'\n\nexport function useDragSource<O, R, P>(\n\tspec: DragSourceHookSpec<O, R, P>,\n\tmonitor: DragSourceMonitor<O, R>,\n\tconnector: Connector,\n) {\n\tconst handler = useMemo(\n\t\t() => new DragSourceImpl(spec, monitor, connector),\n\t\t[monitor, connector],\n\t)\n\tuseEffect(() => {\n\t\thandler.spec = spec\n\t}, [spec])\n\treturn handler\n}\n","import { invariant } from '@react-dnd/invariant'\nimport type { Identifier } from 'dnd-core'\nimport { useMemo } from 'react'\n\nimport type { DragSourceHookSpec } from '../types.js'\n\nexport function useDragType(\n\tspec: DragSourceHookSpec<any, any, any>,\n): Identifier {\n\treturn useMemo(() => {\n\t\tconst result: Identifier = spec.type\n\t\tinvariant(result != null, 'spec.type must be defined')\n\t\treturn result\n\t}, [spec])\n}\n","import { invariant } from '@react-dnd/invariant'\n\nimport type {\n\tConnectDragPreview,\n\tConnectDragSource,\n} from '../../types/index.js'\nimport type { DragSourceHookSpec, FactoryOrInstance } from '../types.js'\nimport { useCollectedProps } from '../useCollectedProps.js'\nimport { useOptionalFactory } from '../useOptionalFactory.js'\nimport { useConnectDragPreview, useConnectDragSource } from './connectors.js'\nimport { useDragSourceConnector } from './useDragSourceConnector.js'\nimport { useDragSourceMonitor } from './useDragSourceMonitor.js'\nimport { useRegisteredDragSource } from './useRegisteredDragSource.js'\n\n/**\n * useDragSource hook\n * @param sourceSpec The drag source specification (object or function, function preferred)\n * @param deps The memoization deps array to use when evaluating spec changes\n */\nexport function useDrag<\n\tDragObject = unknown,\n\tDropResult = unknown,\n\tCollectedProps = unknown,\n>(\n\tspecArg: FactoryOrInstance<\n\t\tDragSourceHookSpec<DragObject, DropResult, CollectedProps>\n\t>,\n\tdeps?: unknown[],\n): [CollectedProps, ConnectDragSource, ConnectDragPreview] {\n\tconst spec = useOptionalFactory(specArg, deps)\n\tinvariant(\n\t\t!(spec as any).begin,\n\t\t`useDrag::spec.begin was deprecated in v14. Replace spec.begin() with spec.item(). (see more here - https://react-dnd.github.io/react-dnd/docs/api/use-drag)`,\n\t)\n\n\tconst monitor = useDragSourceMonitor<DragObject, DropResult>()\n\tconst connector = useDragSourceConnector(spec.options, spec.previewOptions)\n\tuseRegisteredDragSource(spec, monitor, connector)\n\n\treturn [\n\t\tuseCollectedProps(spec.collect, monitor, connector),\n\t\tuseConnectDragSource(connector),\n\t\tuseConnectDragPreview(connector),\n\t]\n}\n","import { useMemo } from 'react'\n\nimport { DragSourceMonitorImpl } from '../../internals/index.js'\nimport type { DragSourceMonitor } from '../../types/index.js'\nimport { useDragDropManager } from '../useDragDropManager.js'\n\nexport function useDragSourceMonitor<O, R>(): DragSourceMonitor<O, R> {\n\tconst manager = useDragDropManager()\n\treturn useMemo<DragSourceMonitor<O, R>>(\n\t\t() => new DragSourceMonitorImpl(manager),\n\t\t[manager],\n\t)\n}\n","import { useMemo } from 'react'\n\nimport { SourceConnector } from '../../internals/index.js'\nimport type {\n\tDragPreviewOptions,\n\tDragSourceOptions,\n} from '../../types/index.js'\nimport { useDragDropManager } from '../useDragDropManager.js'\nimport { useIsomorphicLayoutEffect } from '../useIsomorphicLayoutEffect.js'\n\nexport function useDragSourceConnector(\n\tdragSourceOptions: DragSourceOptions | undefined,\n\tdragPreviewOptions: DragPreviewOptions | undefined,\n): SourceConnector {\n\tconst manager = useDragDropManager()\n\tconst connector = useMemo(\n\t\t() => new SourceConnector(manager.getBackend()),\n\t\t[manager],\n\t)\n\tuseIsomorphicLayoutEffect(() => {\n\t\tconnector.dragSourceOptions = dragSourceOptions || null\n\t\tconnector.reconnect()\n\t\treturn () => connector.disconnectDragSource()\n\t}, [connector, dragSourceOptions])\n\tuseIsomorphicLayoutEffect(() => {\n\t\tconnector.dragPreviewOptions = dragPreviewOptions || null\n\t\tconnector.reconnect()\n\t\treturn () => connector.disconnectDragPreview()\n\t}, [connector, dragPreviewOptions])\n\treturn connector\n}\n","import { invariant } from '@react-dnd/invariant'\nimport type { DragDropManager } from 'dnd-core'\nimport { useContext } from 'react'\n\nimport { DndContext } from '../core/index.js'\n\n/**\n * A hook to retrieve the DragDropManager from Context\n */\nexport function useDragDropManager(): DragDropManager {\n\tconst { dragDropManager } = useContext(DndContext)\n\tinvariant(dragDropManager != null, 'Expected drag drop context')\n\treturn dragDropManager as DragDropManager\n}\n","import { useMemo } from 'react'\n\nimport type { TargetConnector } from '../../internals/index.js'\n\nexport function useConnectDropTarget(connector: TargetConnector) {\n\treturn useMemo(() => connector.hooks.dropTarget(), [connector])\n}\n","import { shallowEqual } from '@react-dnd/shallowequal'\nimport type { Backend, Identifier, Unsubscribe } from 'dnd-core'\nimport type { RefObject } from 'react'\n\nimport type { DropTargetOptions } from '../types/index.js'\nimport { isRef } from './isRef.js'\nimport type { Connector } from './SourceConnector.js'\nimport { wrapConnectorHooks } from './wrapConnectorHooks.js'\n\nexport class TargetConnector implements Connector {\n\tpublic hooks = wrapConnectorHooks({\n\t\tdropTarget: (node: any, options: DropTargetOptions) => {\n\t\t\tthis.clearDropTarget()\n\t\t\tthis.dropTargetOptions = options\n\t\t\tif (isRef(node)) {\n\t\t\t\tthis.dropTargetRef = node\n\t\t\t} else {\n\t\t\t\tthis.dropTargetNode = node\n\t\t\t}\n\t\t\tthis.reconnect()\n\t\t},\n\t})\n\n\tprivate handlerId: Identifier | null = null\n\t// The drop target may either be attached via ref or connect function\n\tprivate dropTargetRef: RefObject<any> | null = null\n\tprivate dropTargetNode: any\n\tprivate dropTargetOptionsInternal: DropTargetOptions | null = null\n\tprivate unsubscribeDropTarget: Unsubscribe | undefined\n\n\tprivate lastConnectedHandlerId: Identifier | null = null\n\tprivate lastConnectedDropTarget: any = null\n\tprivate lastConnectedDropTargetOptions: DropTargetOptions | null = null\n\tprivate readonly backend: Backend\n\n\tpublic constructor(backend: Backend) {\n\t\tthis.backend = backend\n\t}\n\n\tpublic get connectTarget(): any {\n\t\treturn this.dropTarget\n\t}\n\n\tpublic reconnect(): void {\n\t\t// if nothing has changed then don't resubscribe\n\t\tconst didChange =\n\t\t\tthis.didHandlerIdChange() ||\n\t\t\tthis.didDropTargetChange() ||\n\t\t\tthis.didOptionsChange()\n\n\t\tif (didChange) {\n\t\t\tthis.disconnectDropTarget()\n\t\t}\n\n\t\tconst dropTarget = this.dropTarget\n\t\tif (!this.handlerId) {\n\t\t\treturn\n\t\t}\n\t\tif (!dropTarget) {\n\t\t\tthis.lastConnectedDropTarget = dropTarget\n\t\t\treturn\n\t\t}\n\n\t\tif (didChange) {\n\t\t\tthis.lastConnectedHandlerId = this.handlerId\n\t\t\tthis.lastConnectedDropTarget = dropTarget\n\t\t\tthis.lastConnectedDropTargetOptions = this.dropTargetOptions\n\n\t\t\tthis.unsubscribeDropTarget = this.backend.connectDropTarget(\n\t\t\t\tthis.handlerId,\n\t\t\t\tdropTarget,\n\t\t\t\tthis.dropTargetOptions,\n\t\t\t)\n\t\t}\n\t}\n\n\tpublic receiveHandlerId(newHandlerId: Identifier | null): void {\n\t\tif (newHandlerId === this.handlerId) {\n\t\t\treturn\n\t\t}\n\n\t\tthis.handlerId = newHandlerId\n\t\tthis.reconnect()\n\t}\n\n\tpublic get dropTargetOptions(): DropTargetOptions {\n\t\treturn this.dropTargetOptionsInternal\n\t}\n\tpublic set dropTargetOptions(options: DropTargetOptions) {\n\t\tthis.dropTargetOptionsInternal = options\n\t}\n\n\tprivate didHandlerIdChange(): boolean {\n\t\treturn this.lastConnectedHandlerId !== this.handlerId\n\t}\n\n\tprivate didDropTargetChange(): boolean {\n\t\treturn this.lastConnectedDropTarget !== this.dropTarget\n\t}\n\n\tprivate didOptionsChange(): boolean {\n\t\treturn !shallowEqual(\n\t\t\tthis.lastConnectedDropTargetOptions,\n\t\t\tthis.dropTargetOptions,\n\t\t)\n\t}\n\n\tpublic disconnectDropTarget() {\n\t\tif (this.unsubscribeDropTarget) {\n\t\t\tthis.unsubscribeDropTarget()\n\t\t\tthis.unsubscribeDropTarget = undefined\n\t\t}\n\t}\n\n\tprivate get dropTarget() {\n\t\treturn (\n\t\t\tthis.dropTargetNode || (this.dropTargetRef && this.dropTargetRef.current)\n\t\t)\n\t}\n\n\tprivate clearDropTarget() {\n\t\tthis.dropTargetRef = null\n\t\tthis.dropTargetNode = null\n\t}\n}\n","import { invariant } from '@react-dnd/invariant'\nimport type {\n\tDragDropManager,\n\tDragDropMonitor,\n\tIdentifier,\n\tListener,\n\tUnsubscribe,\n\tXYCoord,\n} from 'dnd-core'\n\nimport type { DropTargetMonitor } from '../types/index.js'\n\nlet isCallingCanDrop = false\n\nexport class DropTargetMonitorImpl implements DropTargetMonitor {\n\tprivate internalMonitor: DragDropMonitor\n\tprivate targetId: Identifier | null = null\n\n\tpublic constructor(manager: DragDropManager) {\n\t\tthis.internalMonitor = manager.getMonitor()\n\t}\n\n\tpublic receiveHandlerId(targetId: Identifier | null): void {\n\t\tthis.targetId = targetId\n\t}\n\n\tpublic getHandlerId(): Identifier | null {\n\t\treturn this.targetId\n\t}\n\n\tpublic subscribeToStateChange(\n\t\tlistener: Listener,\n\t\toptions?: { handlerIds?: Identifier[] },\n\t): Unsubscribe {\n\t\treturn this.internalMonitor.subscribeToStateChange(listener, options)\n\t}\n\n\tpublic canDrop(): boolean {\n\t\t// Cut out early if the target id has not been set. This should prevent errors\n\t\t// where the user has an older version of dnd-core like in\n\t\t// https://github.com/react-dnd/react-dnd/issues/1310\n\t\tif (!this.targetId) {\n\t\t\treturn false\n\t\t}\n\t\tinvariant(\n\t\t\t!isCallingCanDrop,\n\t\t\t'You may not call monitor.canDrop() inside your canDrop() implementation. ' +\n\t\t\t\t'Read more: http://react-dnd.github.io/react-dnd/docs/api/drop-target-monitor',\n\t\t)\n\n\t\ttry {\n\t\t\tisCallingCanDrop = true\n\t\t\treturn this.internalMonitor.canDropOnTarget(this.targetId)\n\t\t} finally {\n\t\t\tisCallingCanDrop = false\n\t\t}\n\t}\n\n\tpublic isOver(options?: { shallow?: boolean }): boolean {\n\t\tif (!this.targetId) {\n\t\t\treturn false\n\t\t}\n\t\treturn this.internalMonitor.isOverTarget(this.targetId, options)\n\t}\n\n\tpublic getItemType(): Identifier | null {\n\t\treturn this.internalMonitor.getItemType()\n\t}\n\n\tpublic getItem(): any {\n\t\treturn this.internalMonitor.getItem()\n\t}\n\n\tpublic getDropResult(): any {\n\t\treturn this.internalMonitor.getDropResult()\n\t}\n\n\tpublic didDrop(): boolean {\n\t\treturn this.internalMonitor.didDrop()\n\t}\n\n\tpublic getInitialClientOffset(): XYCoord | null {\n\t\treturn this.internalMonitor.getInitialClientOffset()\n\t}\n\n\tpublic getInitialSourceClientOffset(): XYCoord | null {\n\t\treturn this.internalMonitor.getInitialSourceClientOffset()\n\t}\n\n\tpublic getSourceClientOffset(): XYCoord | null {\n\t\treturn this.internalMonitor.getSourceClientOffset()\n\t}\n\n\tpublic getClientOffset(): XYCoord | null {\n\t\treturn this.internalMonitor.getClientOffset()\n\t}\n\n\tpublic getDifferenceFromInitialOffset(): XYCoord | null {\n\t\treturn this.internalMonitor.getDifferenceFromInitialOffset()\n\t}\n}\n","import type { DropTarget } from 'dnd-core'\n\nimport type { DropTargetMonitor } from '../../types/index.js'\nimport type { DropTargetHookSpec } from '../types.js'\n\nexport class DropTargetImpl<O, R, P> implements DropTarget {\n\tpublic constructor(\n\t\tpublic spec: DropTargetHookSpec<O, R, P>,\n\t\tprivate monitor: DropTargetMonitor<O, R>,\n\t) {}\n\n\tpublic canDrop() {\n\t\tconst spec = this.spec\n\t\tconst monitor = this.monitor\n\t\treturn spec.canDrop ? spec.canDrop(monitor.getItem(), monitor) : true\n\t}\n\n\tpublic hover() {\n\t\tconst spec = this.spec\n\t\tconst monitor = this.monitor\n\t\tif (spec.hover) {\n\t\t\tspec.hover(monitor.getItem(), monitor)\n\t\t}\n\t}\n\n\tpublic drop() {\n\t\tconst spec = this.spec\n\t\tconst monitor = this.monitor\n\t\tif (spec.drop) {\n\t\t\treturn spec.drop(monitor.getItem(), monitor)\n\t\t}\n\t\treturn\n\t}\n}\n","import type { TargetConnector } from '../../internals/index.js'\nimport { registerTarget } from '../../internals/index.js'\nimport type { DropTargetMonitor } from '../../types/index.js'\nimport type { DropTargetHookSpec } from '../types.js'\nimport { useDragDropManager } from '../useDragDropManager.js'\nimport { useIsomorphicLayoutEffect } from '../useIsomorphicLayoutEffect.js'\nimport { useAccept } from './useAccept.js'\nimport { useDropTarget } from './useDropTarget.js'\n\nexport function useRegisteredDropTarget<O, R, P>(\n\tspec: DropTargetHookSpec<O, R, P>,\n\tmonitor: DropTargetMonitor<O, R>,\n\tconnector: TargetConnector,\n): void {\n\tconst manager = useDragDropManager()\n\tconst dropTarget = useDropTarget(spec, monitor)\n\tconst accept = useAccept(spec)\n\n\tuseIsomorphicLayoutEffect(\n\t\tfunction registerDropTarget() {\n\t\t\tconst [handlerId, unregister] = registerTarget(\n\t\t\t\taccept,\n\t\t\t\tdropTarget,\n\t\t\t\tmanager,\n\t\t\t)\n\t\t\tmonitor.receiveHandlerId(handlerId)\n\t\t\tconnector.receiveHandlerId(handlerId)\n\t\t\treturn unregister\n\t\t},\n\t\t[\n\t\t\tmanager,\n\t\t\tmonitor,\n\t\t\tdropTarget,\n\t\t\tconnector,\n\t\t\taccept.map((a) => a.toString()).join('|'),\n\t\t],\n\t)\n}\n","import { useEffect, useMemo } from 'react'\n\nimport type { DropTargetMonitor } from '../../types/index.js'\nimport type { DropTargetHookSpec } from '../types.js'\nimport { DropTargetImpl } from './DropTargetImpl.js'\n\nexport function useDropTarget<O, R, P>(\n\tspec: DropTargetHookSpec<O, R, P>,\n\tmonitor: DropTargetMonitor<O, R>,\n) {\n\tconst dropTarget = useMemo(() => new DropTargetImpl(spec, monitor), [monitor])\n\tuseEffect(() => {\n\t\tdropTarget.spec = spec\n\t}, [spec])\n\treturn dropTarget\n}\n","import { invariant } from '@react-dnd/invariant'\nimport type { Identifier } from 'dnd-core'\nimport { useMemo } from 'react'\n\nimport type { DropTargetHookSpec } from '../types.js'\n\n/**\n * Internal utility hook to get an array-version of spec.accept.\n * The main utility here is that we aren't creating a new array on every render if a non-array spec.accept is passed in.\n * @param spec\n */\nexport function useAccept<O, R, P>(\n\tspec: DropTargetHookSpec<O, R, P>,\n): Identifier[] {\n\tconst { accept } = spec\n\treturn useMemo(() => {\n\t\tinvariant(spec.accept != null, 'accept must be defined')\n\t\treturn Array.isArray(accept) ? accept : [accept]\n\t}, [accept])\n}\n","import type { ConnectDropTarget } from '../../types/index.js'\nimport type { DropTargetHookSpec, FactoryOrInstance } from '../types.js'\nimport { useCollectedProps } from '../useCollectedProps.js'\nimport { useOptionalFactory } from '../useOptionalFactory.js'\nimport { useConnectDropTarget } from './connectors.js'\nimport { useDropTargetConnector } from './useDropTargetConnector.js'\nimport { useDropTargetMonitor } from './useDropTargetMonitor.js'\nimport { useRegisteredDropTarget } from './useRegisteredDropTarget.js'\n\n/**\n * useDropTarget Hook\n * @param spec The drop target specification (object or function, function preferred)\n * @param deps The memoization deps array to use when evaluating spec changes\n */\nexport function useDrop<\n\tDragObject = unknown,\n\tDropResult = unknown,\n\tCollectedProps = unknown,\n>(\n\tspecArg: FactoryOrInstance<\n\t\tDropTargetHookSpec<DragObject, DropResult, CollectedProps>\n\t>,\n\tdeps?: unknown[],\n): [CollectedProps, ConnectDropTarget] {\n\tconst spec = useOptionalFactory(specArg, deps)\n\tconst monitor = useDropTargetMonitor<DragObject, DropResult>()\n\tconst connector = useDropTargetConnector(spec.options)\n\tuseRegisteredDropTarget(spec, monitor, connector)\n\n\treturn [\n\t\tuseCollectedProps(spec.collect, monitor, connector),\n\t\tuseConnectDropTarget(connector),\n\t]\n}\n","import { useMemo } from 'react'\n\nimport { DropTargetMonitorImpl } from '../../internals/index.js'\nimport type { DropTargetMonitor } from '../../types/index.js'\nimport { useDragDropManager } from '../useDragDropManager.js'\n\nexport function useDropTargetMonitor<O, R>(): DropTargetMonitor<O, R> {\n\tconst manager = useDragDropManager()\n\treturn useMemo(() => new DropTargetMonitorImpl(manager), [manager])\n}\n","import { useMemo } from 'react'\n\nimport { TargetConnector } from '../../internals/index.js'\nimport type { DropTargetOptions } from '../../types/index.js'\nimport { useDragDropManager } from '../useDragDropManager.js'\nimport { useIsomorphicLayoutEffect } from '../useIsomorphicLayoutEffect.js'\n\nexport function useDropTargetConnector(\n\toptions: DropTargetOptions,\n): TargetConnector {\n\tconst manager = useDragDropManager()\n\tconst connector = useMemo(\n\t\t() => new TargetConnector(manager.getBackend()),\n\t\t[manager],\n\t)\n\tuseIsomorphicLayoutEffect(() => {\n\t\tconnector.dropTargetOptions = options || null\n\t\tconnector.reconnect()\n\t\treturn () => connector.disconnectDropTarget()\n\t}, [options])\n\treturn connector\n}\n","import { useEffect, useLayoutEffect } from 'react'\n\n// suppress the useLayoutEffect warning on server side.\nexport const useIsomorphicLayoutEffect =\n\ttypeof window !== 'undefined' ? useLayoutEffect : useEffect\n","import { useMemo } from 'react'\n\nimport type { FactoryOrInstance } from './types.js'\n\nexport function useOptionalFactory<T>(\n\targ: FactoryOrInstance<T>,\n\tdeps?: unknown[],\n): T {\n\tconst memoDeps = [...(deps || [])]\n\tif (deps == null && typeof arg !== 'function') {\n\t\tmemoDeps.push(arg)\n\t}\n\treturn useMemo<T>(() => {\n\t\treturn typeof arg === 'function' ? (arg as () => T)() : (arg as T)\n\t}, memoDeps)\n}\n","export interface Ref<T> {\n\tcurrent: T\n}\n\nexport function isRef(obj: unknown): boolean {\n\treturn (\n\t\t// eslint-disable-next-line no-prototype-builtins\n\t\tobj !== null &&\n\t\ttypeof obj === 'object' &&\n\t\tObject.prototype.hasOwnProperty.call(obj, 'current')\n\t)\n}\n","import type {\n\tDragDropManager,\n\tDragSource,\n\tDropTarget,\n\tIdentifier,\n\tSourceType,\n\tTargetType,\n\tUnsubscribe,\n} from 'dnd-core'\n\nexport function registerTarget(\n\ttype: TargetType,\n\ttarget: DropTarget,\n\tmanager: DragDropManager,\n): [Identifier, Unsubscribe] {\n\tconst registry = manager.getRegistry()\n\tconst targetId = registry.addTarget(type, target)\n\n\treturn [targetId, () => registry.removeTarget(targetId)]\n}\n\nexport function registerSource(\n\ttype: SourceType,\n\tsource: DragSource,\n\tmanager: DragDropManager,\n): [Identifier, Unsubscribe] {\n\tconst registry = manager.getRegistry()\n\tconst sourceId = registry.addSource(type, source)\n\n\treturn [sourceId, () => registry.removeSource(sourceId)]\n}\n","import { invariant } from '@react-dnd/invariant'\nimport type { ReactElement } from 'react'\nimport { cloneElement, isValidElement } from 'react'\n\nfunction throwIfCompositeComponentElement(element: ReactElement<any>) {\n\t// Custom components can no longer be wrapped directly in React DnD 2.0\n\t// so that we don't need to depend on findDOMNode() from react-dom.\n\tif (typeof element.type === 'string') {\n\t\treturn\n\t}\n\n\tconst displayName =\n\t\t(element.type as any).displayName || element.type.name || 'the component'\n\n\tthrow new Error(\n\t\t'Only native element nodes can now be passed to React DnD connectors.' +\n\t\t\t`You can either wrap ${displayName} into a <div>, or turn it into a ` +\n\t\t\t'drag source or a drop target itself.',\n\t)\n}\n\nfunction wrapHookToRecognizeElement(hook: (node: any, options: any) => void) {\n\treturn (elementOrNode = null, options = null) => {\n\t\t// When passed a node, call the hook straight away.\n\t\tif (!isValidElement(elementOrNode)) {\n\t\t\tconst node = elementOrNode\n\t\t\thook(node, options)\n\t\t\t// return the node so it can be chained (e.g. when within callback refs\n\t\t\t// <div ref={node => connectDragSource(connectDropTarget(node))}/>\n\t\t\treturn node\n\t\t}\n\n\t\t// If passed a ReactElement, clone it and attach this function as a ref.\n\t\t// This helps us achieve a neat API where user doesn't even know that refs\n\t\t// are being used under the hood.\n\t\tconst element: ReactElement | null = elementOrNode\n\t\tthrowIfCompositeComponentElement(element as any)\n\n\t\t// When no options are passed, use the hook directly\n\t\tconst ref = options ? (node: Element) => hook(node, options) : hook\n\t\treturn cloneWithRef(element, ref)\n\t}\n}\n\nexport function wrapConnectorHooks(hooks: any) {\n\tconst wrappedHooks: any = {}\n\n\tObject.keys(hooks).forEach((key) => {\n\t\tconst hook = hooks[key]\n\n\t\t// ref objects should be passed straight through without wrapping\n\t\tif (key.endsWith('Ref')) {\n\t\t\twrappedHooks[key] = hooks[key]\n\t\t} else {\n\t\t\tconst wrappedHook = wrapHookToRecognizeElement(hook)\n\t\t\twrappedHooks[key] = () => wrappedHook\n\t\t}\n\t})\n\n\treturn wrappedHooks\n}\n\nfunction setRef(ref: any, node: any) {\n\tif (typeof ref === 'function') {\n\t\tref(node)\n\t} else {\n\t\tref.current = node\n\t}\n}\n\nfunction cloneWithRef(element: any, newRef: any): ReactElement<any> {\n\tconst previousRef = element.ref\n\tinvariant(\n\t\ttypeof previousRef !== 'string',\n\t\t'Cannot connect React DnD to an element with an existing string ref. ' +\n\t\t\t'Please convert it to use a callback ref instead, or wrap it into a <span> or <div>. ' +\n\t\t\t'Read more: https://reactjs.org/docs/refs-and-the-dom.html#callback-refs',\n\t)\n\n\tif (!previousRef) {\n\t\t// When there is no ref on the element, use the new ref directly\n\t\treturn cloneElement(element, {\n\t\t\tref: newRef,\n\t\t})\n\t} else {\n\t\treturn cloneElement(element, {\n\t\t\tref: (node: any) => {\n\t\t\t\tsetRef(previousRef, node)\n\t\t\t\tsetRef(newRef, node)\n\t\t\t},\n\t\t})\n\t}\n}\n"],"names":["module","exports","equal","a","b","constructor","length","i","keys","Array","isArray","RegExp","source","flags","valueOf","Object","prototype","toString","hasOwnProperty","call","key","invariant","condition","format","args","isProduction","undefined","Error","error","argIndex","replace","name","framesToPop","process","shallowEqual","objA","objB","compare","compareContext","compareResult","keysA","keysB","bHasOwnProperty","bind","idx","valueA","valueB","memoize","fn","result","EnterLeaveCounter","isNodeInDocument","entered","this","enteringNode","previousLength","itemsA","itemsB","set","Set","insertItem","item","add","forEach","push","union","filter","node","contains","leavingNode","items","NativeDragSource","config","initializeExposedProperties","exposeProperties","property","defineProperty","configurable","enumerable","get","console","warn","dataTransfer","newProperties","propertyFn","value","matchesTypes","defineProperties","monitor","handle","getSourceId","FILE","URL","TEXT","HTML","getDataFromDataTransfer","typesToTry","defaultValue","reduce","resultSoFar","typeToTry","getData","nativeTypesConfig","NativeTypes","files","slice","html","urls","split","text","matchNativeItemType","dataTransferTypes","types","nativeItemType","typeConfig","some","t","indexOf","isFirefox","test","navigator","userAgent","isSafari","Boolean","window","safari","MonotonicInterpolant","xs","ys","indexes","sort","dx","dy","dys","dxs","ms","c1s","m2","mNext","dxNext","common","m","c2s","c3s","c1","invDx","x","mid","low","high","xHere","Math","floor","diff","max","diffSq","getNodeClientOffset","el","nodeType","parentElement","getBoundingClientRect","top","left","y","getEventClientOffset","e","clientX","clientY","getDragPreviewOffset","sourceNode","dragPreview","clientOffset","anchorPoint","offsetPoint","isImage","document","nodeName","documentElement","isImageNode","dragPreviewNodeOffsetFromClient","offsetFromDragPreview","sourceWidth","offsetWidth","sourceHeight","offsetHeight","anchorX","anchorY","dragPreviewWidth","width","dragPreviewHeight","height","devicePixelRatio","getDragPreviewSize","offsetX","offsetY","isManualOffsetY","interpolate","calculateYOffset","OptionsReader","globalContext","options","ownerDocument","optionsArgs","ref","rootElement","HTML5BackendImpl","manager","sourcePreviewNodes","Map","sourcePreviewNodeOptions","sourceNodes","sourceNodeOptions","dragStartSourceIds","dropTargetIds","dragEnterTargetIds","currentNativeSource","currentNativeHandle","currentDragSourceNode","altKeyPressed","mouseMoveTimeoutTimer","asyncEndDragFrameId","dragOverTargetIds","lastClientOffset","hoverRafId","getSourceClientOffset","sourceId","endDragNativeItem","isDraggingNativeItem","actions","endDrag","registry","removeSource","body","endDragIfSourceWasRemovedFromDOM","clearCurrentDragSourceNode","isDragging","cancelHover","scheduleHover","requestAnimationFrame","hover","cancelAnimationFrame","handleTopDragStartCapture","handleTopDragStart","defaultPrevented","beginDrag","publishSource","nativeType","setDragImage","getCurrentSourcePreviewNodeOptions","dragPreviewOffset","setData","err","setCurrentDragSourceNode","target","captureDraggingState","publishDragSource","setTimeout","beginDragNativeItem","hasAttribute","preventDefault","handleTopDragEndCapture","handleTopDragEnterCapture","loadDataTransfer","enterLeaveCounter","enter","handleTopDragEnter","altKey","targetId","canDropOnTarget","dropEffect","getCurrentDropEffect","handleTopDragOverCapture","handleTopDragOver","handleTopDragLeaveCapture","leave","handleTopDropCapture","reset","handleTopDrop","drop","handleSelectStart","dragDrop","tagName","isContentEditable","getActions","getMonitor","getRegistry","ref1","size","root","__isReactDndBackendSetUp","addEventListeners","removeEventListeners","handleDragStart","setAttribute","addEventListener","removeEventListener","handleDragEnter","handleDragOver","handleDrop","_objectSpread","getCurrentSourceNodeOptions","itemType","getItemType","type","createNativeDragSource","addSource","clearTimeout","unshift","_e","HTML5Backend","context","DndContext","createContext","dragDropManager","obj","path","c","without","isObject","input","xor","map","has","count","INIT_COORDS","BEGIN_DRAG","PUBLISH_DRAG_SOURCE","HOVER","DROP","END_DRAG","setClientOffset","sourceClientOffset","payload","ResetCoordinatesAction","createBeginDrag","sourceIds","dispatch","verifyInvariants","getDraggableSource","verifyGetSourceClientOffsetIsFunction","getSource","verifyItemIsObject","pinSource","getSourceType","isSourcePublic","canDragSource","createDrop","targetIds","getDroppableTargets","index","dropResult","determineDropResult","action","didDrop","getTarget","verifyDropResultType","getDropResult","getTargetIds","reverse","createEndDrag","verifyIsDragging","unpinSource","matchesType","targetType","draggedItemType","createHover","targetIdsArg","verifyTargetIdsIsArray","removeNonMatchingTargetIds","checkInvariants","hoverAllTargets","lastIndexOf","getTargetType","splice","createPublishDragSource","DragDropManagerImpl","store","isSetUp","handleRefCountChange","shouldSetUp","getState","refCount","backend","setup","teardown","subscribe","createDragDropActions","boundActions","actionCreator","apply","subtract","NONE","ALL","areDirty","dirtyIds","handlerIds","__IS_NONE__","__IS_ALL__","DragDropMonitorImpl","listener","prevStateId","stateId","handleChange","state","currentStateId","dirtyHandlerIds","previousState","dragOffset","nextState","canDrag","canDrop","shallow","dragOperation","initialClientOffset","initialSourceClientOffset","getDifferenceFromInitialOffset","scope","global","self","BrowserMutationObserver","MutationObserver","WebKitMutationObserver","makeRequestCallFromTimer","callback","timeoutHandle","handleTimer","intervalHandle","setInterval","clearInterval","makeRequestCall","toggle","observer","createTextNode","observe","characterData","data","AsapQueue","queue","pendingErrors","flushing","capacity","flush","q","currentIndex","scan","newLength","registerPendingError","requestErrorThrow","requestFlush","shift","task","RawTask","onError","release","TaskFactory","freeTasks","tasks","pop","asapQueue","taskFactory","HandlerRole","ADD_SOURCE","ADD_TARGET","REMOVE_SOURCE","REMOVE_TARGET","validateType","allowArray","SOURCE","TARGET","nextUniqueId","getNextHandlerId","role","id","parseRoleFromHandlerId","handlerId","mapContainsValue","searchValue","entries","isDone","next","done","HandlerRegistryImpl","dragSources","dropTargets","pinnedSourceId","pinnedSource","validateSourceContract","addHandler","validateTargetContract","addTarget","handler","includePinned","isSourceId","isPinned","isTargetId","enqueueTask","create","removeTarget","strictEquality","areCoordsEqual","offsetA","offsetB","areArraysEqual","isEqual","prevTargetIds","didChange","prevInnermostTargetId","innermostTargetId","initialState","createDragDropManager","backendFactory","backendOptions","debugMode","makeStoreInstance","receiveBackend","reduxDevTools","__REDUX_DEVTOOLS_EXTENSION__","createStore","instanceId","INSTANCE_SYM","Symbol","DndProvider","memo","_param","children","props","getGlobalContext","ctx","createSingletonDndContext","isGlobalInstance","getDndContextValue","useEffect","_jsx","useMonitorOutput","collect","onCollect","onUpdate","useState","collected","setCollected","updateCollected","useCallback","nextValue","useIsomorphicLayoutEffect","useCollector","getHandlerId","subscribeToStateChange","useCollectedProps","collector","connector","reconnect","useConnectDragSource","useMemo","hooks","dragSource","useConnectDragPreview","SourceConnector","wrapConnectorHooks","clearDragSource","dragSourceOptions","isRef","dragSourceRef","dragSourceNode","reconnectDragSource","clearDragPreview","dragPreviewOptions","dragPreviewRef","dragPreviewNode","reconnectDragPreview","dragSourceOptionsInternal","dragPreviewOptionsInternal","lastConnectedHandlerId","lastConnectedDragSource","lastConnectedDragSourceOptions","lastConnectedDragPreview","lastConnectedDragPreviewOptions","newHandlerId","didHandlerIdChange","didConnectedDragSourceChange","didDragSourceOptionsChange","disconnectDragSource","dragSourceUnsubscribe","connectDragSource","forceDidChange","didConnectedDragPreviewChange","didDragPreviewOptionsChange","disconnectDragPreview","dragPreviewUnsubscribe","connectDragPreview","current","isCallingCanDrag","isCallingIsDragging","DragSourceMonitorImpl","internalMonitor","isDraggingSource","isOverTarget","subscribeToOffsetChange","getItem","getInitialClientOffset","getInitialSourceClientOffset","getClientOffset","DragSourceImpl","spec","globalMonitor","end","useRegisteredDragSource","useDragDropManager","useDragSource","useDragType","registerSource","unregister","receiveHandlerId","useDrag","specArg","deps","useOptionalFactory","begin","useDragSourceMonitor","getBackend","useDragSourceConnector","previewOptions","useContext","useConnectDropTarget","dropTarget","TargetConnector","clearDropTarget","dropTargetOptions","dropTargetRef","dropTargetNode","dropTargetOptionsInternal","lastConnectedDropTarget","lastConnectedDropTargetOptions","didDropTargetChange","didOptionsChange","disconnectDropTarget","unsubscribeDropTarget","connectDropTarget","isCallingCanDrop","DropTargetMonitorImpl","DropTargetImpl","useRegisteredDropTarget","useDropTarget","accept","useAccept","registerTarget","join","useDrop","useDropTargetMonitor","useDropTargetConnector","useLayoutEffect","arg","memoDeps","throwIfCompositeComponentElement","element","displayName","wrappedHooks","hook","endsWith","wrappedHook","elementOrNode","isValidElement","cloneWithRef","wrapHookToRecognizeElement","setRef","newRef","previousRef","cloneElement"],"sourceRoot":""}