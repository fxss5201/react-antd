{"version":3,"file":"static/js/817.88f20314.chunk.js","mappings":"4PAYMA,EAAiB,CACrBC,SAAU,CACRC,GAAI,CACFC,KAAM,IAERC,GAAI,CACFD,KAAM,IAGVE,WAAY,CACVH,GAAI,CACFC,KAAM,IAERC,GAAI,CACFD,KAAM,MAKNG,EAAqB,CACzBD,WAAY,CACVH,GAAI,CACFC,KAAM,GACNI,OAAQ,GAEVH,GAAI,CACFD,KAAM,GACNI,OAAQ,KAiId,UA5HiB,WACf,OAAoCC,EAAAA,EAAAA,WAAS,GAAM,eAA5CC,EAAU,KAAEC,EAAa,KAChC,EAAeC,EAAAA,EAAAA,UAARC,GAAsB,YAAlB,GAEX,GAAoBC,EAAAA,EAAAA,KAAZC,EAAC,EAADA,EAAGC,EAAI,EAAJA,KACXA,EAAKC,GAAG,mBAAmB,SAACC,GACtBR,GAAYG,EAAKM,gBACvB,KACAC,EAAAA,EAAAA,IAAW,WACTJ,EAAKK,IAAI,kBACX,IAMA,OACE,UAAC,KAAI,gBACHR,KAAMA,GACFZ,GAAc,IAClBqB,KAAK,WACLC,KAAK,QACLC,SAVa,SAACC,GAChBC,QAAQC,IAAI,4BAA6BF,EAC3C,EASIG,oBAAkB,EAClBC,MAAO,CAAEC,MAAO,SAAU,WAE1B,SAAC,SAAS,CACRR,KAAK,QACLS,MAAQhB,EAAE,UACViB,MAAO,CACL,CACEC,KAAM,QACNC,QAASnB,EAAE,mCAEb,CACEoB,UAAU,EACVD,QAASnB,EAAE,+BAEb,UAEF,SAAC,IAAK,CAACqB,YAAarB,EAAE,6BAA8BsB,YAAU,OAGhE,SAAC,SAAS,CACRf,KAAK,QACLS,MAAQhB,EAAE,SACViB,MAAO,CACL,CACEG,UAAU,EACVD,QAASnB,EAAE,6BAEb,CACEuB,QAASC,EAAAA,EAAAA,aACTL,QAASnB,EAAE,oCAEb,UAEF,SAAC,IAAK,CAACqB,YAAarB,EAAE,4BAA6BsB,YAAU,OAG/D,SAAC,SAAS,CACRf,KAAK,WACLS,MAAQhB,EAAE,YACViB,MAAO,CACL,CACEG,UAAU,EACVD,QAASnB,EAAE,iCAEb,UAEF,SAAC,aAAc,CAACqB,YAAarB,EAAE,+BAAgCsB,YAAU,OAG3E,SAAC,SAAS,CACRf,KAAK,UACLS,MAAQhB,EAAE,oBACVyB,aAAc,CAAC,YACfR,MAAO,CACL,CACEG,UAAU,EACVD,QAASnB,EAAE,kCAEb,gBAAG0B,EAAa,EAAbA,cAAa,MAAQ,CACtBC,UAAS,SAACC,EAAGC,GACX,OAAKA,GAASH,EAAc,cAAgBG,EAGrCC,QAAQC,OAAO,IAAIC,MAAMhC,EAAE,sDAFzB8B,QAAQG,SAGnB,EACD,GACD,UAEF,SAAC,aAAc,CAACZ,YAAarB,EAAE,iCAAkCsB,YAAU,OAG7E,SAAC,UAAS,gBACRf,KAAK,YACL2B,cAAc,WACV1C,GAAkB,IACtByB,MAAO,CACL,CACEU,UAAW,SAACC,EAAGC,GAAK,OAClBA,EAAQC,QAAQG,UAAYH,QAAQC,OAAO,IAAIC,MAAMhC,EAAE,4BAA4B,IAEvF,UAEF,UAAC,IAAQ,WACLA,EAAE,mBAAkB,KAAG,SAAC,KAAI,CAACmC,GAAG,GAAE,SAAGnC,EAAE,sBAI7C,UAAC,UAAS,kBAAKR,GAAkB,eAC/B,SAAC,IAAM,CAAC0B,KAAK,UAAUkB,SAAS,SAASC,QAAS,kBAAMzC,GAAc,EAAK,EAAE0C,UAAU,SAAQ,SAC3FtC,EAAE,eAEN,iBAAKsC,UAAU,gBAAe,WAC5B,SAAC,KAAI,CAACA,UAAU,eAAeH,GAAG,SAAQ,SAAEnC,EAAE,aAC9C,SAAC,KAAI,CAACsC,UAAU,gBAAgBH,GAAG,kBAAiB,SAAEnC,EAAE,+BAKlE,C","sources":["pages/login/Register.jsx"],"sourcesContent":["import React, { useState } from 'react';\nimport { Link } from 'react-router-dom';\nimport { useTranslation } from 'react-i18next';\nimport {\n  Button,\n  Checkbox,\n  Form,\n  Input\n} from 'antd';\nimport config from '../../config';\nimport { useUnmount } from 'ahooks';\n\nconst formItemLayout = {\n  labelCol: {\n    xs: {\n      span: 24,\n    },\n    sm: {\n      span: 8,\n    },\n  },\n  wrapperCol: {\n    xs: {\n      span: 24,\n    },\n    sm: {\n      span: 16,\n    },\n  },\n};\n\nconst tailFormItemLayout = {\n  wrapperCol: {\n    xs: {\n      span: 24,\n      offset: 0,\n    },\n    sm: {\n      span: 16,\n      offset: 8,\n    },\n  },\n};\n\nconst Register = () => {\n  const [isValidate, setIsValidate] = useState(false)\n  const [form] = Form.useForm();\n\n  const { t, i18n } = useTranslation();\n  i18n.on('languageChanged', (lng) => {\n    if (isValidate) form.validateFields();\n  })\n  useUnmount(() => {\n    i18n.off('languageChanged');\n  })\n\n  const onFinish = (values) => {\n    console.log('Received values of form: ', values);\n  };\n\n  return (\n    <Form\n      form={form}\n      {...formItemLayout}\n      name=\"register\"\n      size=\"large\"\n      onFinish={onFinish}\n      scrollToFirstError\n      style={{ width: '450px' }}\n    >\n      <Form.Item\n        name=\"email\"\n        label={ t('E-mail') }\n        rules={[\n          {\n            type: 'email',\n            message: t('The input is not valid E-mail!'),\n          },\n          {\n            required: true,\n            message: t('Please input your E-mail!'),\n          },\n        ]}\n      >\n        <Input placeholder={t('Please input your E-mail!')} allowClear />\n      </Form.Item>\n\n      <Form.Item\n        name=\"Phone\"\n        label={ t('Phone') }\n        rules={[\n          {\n            required: true,\n            message: t('Please input your Phone!'),\n          },\n          {\n            pattern: config.phonePattern,\n            message: t('Incorrect phone number format!'),\n          },\n        ]}\n      >\n        <Input placeholder={t('Please input your Phone!')} allowClear />\n      </Form.Item>\n\n      <Form.Item\n        name=\"password\"\n        label={ t('Password') }\n        rules={[\n          {\n            required: true,\n            message: t('Please input your Password!'),\n          },\n        ]}\n      >\n        <Input.Password placeholder={t('Please input your Password!')} allowClear />\n      </Form.Item>\n\n      <Form.Item\n        name=\"confirm\"\n        label={ t('Confirm Password') }\n        dependencies={['password']}\n        rules={[\n          {\n            required: true,\n            message: t('Please confirm your password!'),\n          },\n          ({ getFieldValue }) => ({\n            validator(_, value) {\n              if (!value || getFieldValue('password') === value) {\n                return Promise.resolve();\n              }\n              return Promise.reject(new Error(t('The two passwords that you entered do not match!')));\n            },\n          }),\n        ]}\n      >\n        <Input.Password placeholder={t('Please confirm your password!')} allowClear />\n      </Form.Item>\n\n      <Form.Item\n        name=\"agreement\"\n        valuePropName=\"checked\"\n        {...tailFormItemLayout}\n        rules={[\n          {\n            validator: (_, value) =>\n              value ? Promise.resolve() : Promise.reject(new Error(t('Should accept agreement'))),\n          },\n        ]}\n      >\n        <Checkbox>\n          { t('I have read the') } <Link to=\"\">{ t('agreement') }</Link>\n        </Checkbox>\n      </Form.Item>\n\n      <Form.Item {...tailFormItemLayout}>\n        <Button type=\"primary\" htmlType=\"submit\" onClick={() => setIsValidate(true)} className=\"w-full\">\n          { t('Register') }\n        </Button>\n        <div className='mt-3 clearfix'>\n          <Link className=\"float-left a\" to=\"/login\">{t('Login!')}</Link>\n          <Link className=\"float-right a\" to=\"/login/password\">{t('Forgot password')}</Link>\n        </div>\n      </Form.Item>\n    </Form>\n  );\n};\n\nexport default Register;\n"],"names":["formItemLayout","labelCol","xs","span","sm","wrapperCol","tailFormItemLayout","offset","useState","isValidate","setIsValidate","Form","form","useTranslation","t","i18n","on","lng","validateFields","useUnmount","off","name","size","onFinish","values","console","log","scrollToFirstError","style","width","label","rules","type","message","required","placeholder","allowClear","pattern","config","dependencies","getFieldValue","validator","_","value","Promise","reject","Error","resolve","valuePropName","to","htmlType","onClick","className"],"sourceRoot":""}