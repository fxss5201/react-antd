{"version":3,"file":"static/js/477.e7ca6192.chunk.js","mappings":"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","sources":["pages/login/components/ForgetPasswordVerification.jsx","pages/login/components/ForgetPasswordReset.jsx","pages/login/ForgetPassword.jsx"],"sourcesContent":["import React, { useState } from 'react';\nimport { useTranslation } from 'react-i18next';\nimport {\n  Button,\n  Form,\n  Input,\n} from 'antd';\nimport { useCountDown, useUnmount } from 'ahooks';\nimport config from '../../../config';\n\nconst formItemLayout = {\n  labelCol: {\n    xs: {\n      span: 24,\n    },\n    sm: {\n      span: 4,\n    },\n  },\n  wrapperCol: {\n    xs: {\n      span: 24,\n    },\n    sm: {\n      span: 20,\n    },\n  },\n};\n\nconst tailFormItemLayout = {\n  wrapperCol: {\n    xs: {\n      span: 24,\n      offset: 0,\n    },\n    sm: {\n      span: 20,\n      offset: 4,\n    },\n  },\n};\n\nconst ForgetPasswordVerification = ({ onFinishVerification }) => {\n  const [isValidate, setIsValidate] = useState(false);\n  const [form] = Form.useForm();\n\n  const { t, i18n } = useTranslation();\n  i18n.on('languageChanged', (lng) => {\n    if (isValidate) form.validateFields();\n  })\n  useUnmount(() => {\n    i18n.off('languageChanged');\n  })\n  \n  const [isGetVerificationLoading, setIsGetVerificationLoading] = useState(false);\n  const [targetDate, setTargetDate] = useState();\n  const [countdown] = useCountDown({\n    targetDate,\n    onEnd: () => {\n      setIsGetVerificationLoading(false);\n    },\n  });\n  const getVerification = () => {\n    form.validateFields(['Phone']).then(() => {\n      setTargetDate(Date.now() + 60 * 1000);\n      setIsGetVerificationLoading(true);\n    })\n  };\n\n  return (\n    <Form\n      form={form}\n      {...formItemLayout}\n      name=\"ForgetPassword\"\n      size=\"large\"\n      onFinish={onFinishVerification}\n      scrollToFirstError\n      style={{ width: '800px', marginTop: '100px' }}\n    >\n      <Form.Item\n        name=\"Phone\"\n        label={ t('Phone') }\n        rules={[\n          {\n            required: true,\n            message: t('Please input your Phone!'),\n          },\n          {\n            pattern: config.phonePattern,\n            message: t('Incorrect phone number format!'),\n          },\n        ]}\n      >\n        <Input placeholder={t('Please input your Phone!')} allowClear />\n      </Form.Item>\n\n      <Form.Item\n        name=\"Verification\"\n        label={ t('Verification') }\n        rules={[\n          {\n            required: true,\n            message: t('Please input your Verification!'),\n          },\n          {\n            pattern: config.verificationPattern,\n            message: t('Incorrect format of verification number!')\n          },\n        ]}\n      >\n        <Input placeholder={t('Verification')} addonAfter={\n          isGetVerificationLoading ? `${Math.round(countdown / 1000)}s` : <div className='cursor-pointer' onClick={getVerification}>{t('Get verification code')}</div>\n        } allowClear />\n      </Form.Item>\n\n      <Form.Item {...tailFormItemLayout}>\n        <Button type=\"primary\" htmlType=\"submit\" onClick={() => setIsValidate(true)} className=\"w-full\">\n          { t('Next step') }\n        </Button>\n      </Form.Item>\n    </Form>\n  );\n};\n\nexport default ForgetPasswordVerification;\n","import React, { useState } from 'react';\nimport { useTranslation } from 'react-i18next';\nimport {\n  Button,\n  Form,\n  Input\n} from 'antd';\nimport { useUnmount } from 'ahooks';\n\nconst formItemLayout = {\n  labelCol: {\n    xs: {\n      span: 24,\n    },\n    sm: {\n      span: 4,\n    },\n  },\n  wrapperCol: {\n    xs: {\n      span: 24,\n    },\n    sm: {\n      span: 20,\n    },\n  },\n};\n\nconst tailFormItemLayout = {\n  wrapperCol: {\n    xs: {\n      span: 24,\n      offset: 0,\n    },\n    sm: {\n      span: 20,\n      offset: 4,\n    },\n  },\n};\n\nconst ForgetPasswordReset = ({ onFinishReset }) => {\n  const [isValidate, setIsValidate] = useState(false);\n  const [form] = Form.useForm();\n\n  const { t, i18n } = useTranslation();\n  i18n.on('languageChanged', (lng) => {\n    if (isValidate) form.validateFields();\n  })\n  useUnmount(() => {\n    i18n.off('languageChanged');\n  })\n\n  return (\n    <Form\n      form={form}\n      {...formItemLayout}\n      name=\"ForgetPassword\"\n      size=\"large\"\n      onFinish={onFinishReset}\n      scrollToFirstError\n      style={{ width: '800px', marginTop: '100px' }}\n    >\n      <Form.Item\n        name=\"password\"\n        label={ t('Password') }\n        rules={[\n          {\n            required: true,\n            message: t('Please input your Password!'),\n          },\n        ]}\n      >\n        <Input.Password placeholder={t('Please input your Password!')} allowClear />\n      </Form.Item>\n\n      <Form.Item\n        name=\"confirm\"\n        label={ t('Confirm Password') }\n        dependencies={['password']}\n        rules={[\n          {\n            required: true,\n            message: t('Please confirm your password!'),\n          },\n          ({ getFieldValue }) => ({\n            validator(_, value) {\n              if (!value || getFieldValue('password') === value) {\n                return Promise.resolve();\n              }\n              return Promise.reject(new Error(t('The two passwords that you entered do not match!')));\n            },\n          }),\n        ]}\n      >\n        <Input.Password placeholder={t('Please confirm your password!')} allowClear />\n      </Form.Item>\n\n      <Form.Item {...tailFormItemLayout}>\n        <Button type=\"primary\" htmlType=\"submit\" onClick={() => setIsValidate(true)} className=\"w-full\">\n          { t('Reset password') }\n        </Button>\n      </Form.Item>\n    </Form>\n  );\n};\n\nexport default ForgetPasswordReset;\n","import React, { useState } from 'react';\nimport { Link } from 'react-router-dom';\nimport { useTranslation } from 'react-i18next';\nimport { Steps, theme } from 'antd';\nimport ForgetPasswordVerification from './components/ForgetPasswordVerification';\nimport ForgetPasswordReset from './components/ForgetPasswordReset';\n\nconst { useToken } = theme;\n\nconst ForgetPassword = () => {\n  const { t } = useTranslation();\n  const { token } = useToken();\n  const { colorPrimary } = token;\n\n  const [current, setCurrent] = useState(0);\n  const stepsItems = [\n    {\n      key: 0,\n      title: t('Verification code verification'),\n    },\n    {\n      key: 1,\n      title: t('Reset password'),\n    }\n  ]\n  \n  const onFinishVerification = (values) => {\n    setCurrent(current + 1);\n    console.log('Received values of form: ', values);\n  }\n\n  const onFinishReset = (values) => {\n    console.log('Received values of form: ', values);\n  };\n\n  return (\n    <div style={{ width: '800px' }}>\n      <Steps current={current} items={stepsItems} />\n      {current === 0 ? <ForgetPasswordVerification onFinishVerification={onFinishVerification} /> : <ForgetPasswordReset onFinishReset={onFinishReset} />}\n      <div className='mt-3 clearfix'>\n        <Link className=\"float-left a\" to=\"/login\" style={{color: colorPrimary}}>{t('Login!')}</Link>\n        <Link className=\"float-right a\" to=\"/login/register\" style={{color: colorPrimary}}>{t('register now!')}</Link>\n      </div>\n    </div>\n  );\n};\n\nexport default ForgetPassword;\n"],"names":["formItemLayout","labelCol","xs","span","sm","wrapperCol","tailFormItemLayout","offset","onFinishVerification","useState","isValidate","setIsValidate","Form","form","useTranslation","t","i18n","on","lng","validateFields","useUnmount","off","isGetVerificationLoading","setIsGetVerificationLoading","targetDate","setTargetDate","useCountDown","onEnd","countdown","name","size","onFinish","scrollToFirstError","style","width","marginTop","label","rules","required","message","pattern","config","placeholder","allowClear","addonAfter","Math","round","className","onClick","then","Date","now","type","htmlType","onFinishReset","dependencies","getFieldValue","validator","_","value","Promise","reject","Error","resolve","useToken","theme","colorPrimary","token","current","setCurrent","stepsItems","key","title","items","values","console","log","to","color"],"sourceRoot":""}