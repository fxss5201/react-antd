{"version":3,"file":"static/js/713.7b5ec3f7.chunk.js","mappings":"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","sources":["pages/login/Register.jsx","../node_modules/@ant-design/icons-svg/es/asn/CheckCircleFilled.js","../node_modules/antd/node_modules/@ant-design/icons/es/icons/CheckCircleFilled.js","../node_modules/@ant-design/icons-svg/es/asn/ExclamationCircleFilled.js","../node_modules/antd/node_modules/@ant-design/icons/es/icons/ExclamationCircleFilled.js"],"sourcesContent":["import React, { useState } from 'react';\nimport { Link } from 'react-router-dom';\nimport { useTranslation } from 'react-i18next';\nimport {\n  Button,\n  Checkbox,\n  Form,\n  Input\n} from 'antd';\nimport config from '../../config';\nimport { useUnmount } from 'ahooks';\nimport { getColorPrimary } from '../../utils';\n\nconst formItemLayout = {\n  labelCol: {\n    xs: {\n      span: 24,\n    },\n    sm: {\n      span: 8,\n    },\n  },\n  wrapperCol: {\n    xs: {\n      span: 24,\n    },\n    sm: {\n      span: 16,\n    },\n  },\n};\n\nconst tailFormItemLayout = {\n  wrapperCol: {\n    xs: {\n      span: 24,\n      offset: 0,\n    },\n    sm: {\n      span: 16,\n      offset: 8,\n    },\n  },\n};\n\nconst Register = () => {\n  const colorPrimary = getColorPrimary();\n  const [isValidate, setIsValidate] = useState(false)\n  const [form] = Form.useForm();\n\n  const { t, i18n } = useTranslation();\n  i18n.on('languageChanged', (lng) => {\n    if (isValidate) form.validateFields();\n  })\n  useUnmount(() => {\n    i18n.off('languageChanged');\n  })\n\n  const onFinish = (values) => {\n    console.log('Received values of form: ', values);\n  };\n\n  return (\n    <Form\n      form={form}\n      {...formItemLayout}\n      name=\"register\"\n      size=\"large\"\n      onFinish={onFinish}\n      scrollToFirstError\n      style={{ width: '450px' }}\n    >\n      <Form.Item\n        name=\"email\"\n        label={ t('E-mail') }\n        rules={[\n          {\n            type: 'email',\n            message: t('The input is not valid E-mail!'),\n          },\n          {\n            required: true,\n            message: t('Please input your E-mail!'),\n          },\n        ]}\n      >\n        <Input placeholder={t('Please input your E-mail!')} allowClear />\n      </Form.Item>\n\n      <Form.Item\n        name=\"Phone\"\n        label={ t('Phone') }\n        rules={[\n          {\n            required: true,\n            message: t('Please input your Phone!'),\n          },\n          {\n            pattern: config.phonePattern,\n            message: t('Incorrect phone number format!'),\n          },\n        ]}\n      >\n        <Input placeholder={t('Please input your Phone!')} allowClear />\n      </Form.Item>\n\n      <Form.Item\n        name=\"password\"\n        label={ t('Password') }\n        rules={[\n          {\n            required: true,\n            message: t('Please input your Password!'),\n          },\n        ]}\n      >\n        <Input.Password placeholder={t('Please input your Password!')} allowClear />\n      </Form.Item>\n\n      <Form.Item\n        name=\"confirm\"\n        label={ t('Confirm Password') }\n        dependencies={['password']}\n        rules={[\n          {\n            required: true,\n            message: t('Please confirm your password!'),\n          },\n          ({ getFieldValue }) => ({\n            validator(_, value) {\n              if (!value || getFieldValue('password') === value) {\n                return Promise.resolve();\n              }\n              return Promise.reject(new Error(t('The two passwords that you entered do not match!')));\n            },\n          }),\n        ]}\n      >\n        <Input.Password placeholder={t('Please confirm your password!')} allowClear />\n      </Form.Item>\n\n      <Form.Item\n        name=\"agreement\"\n        valuePropName=\"checked\"\n        {...tailFormItemLayout}\n        rules={[\n          {\n            validator: (_, value) =>\n              value ? Promise.resolve() : Promise.reject(new Error(t('Should accept agreement'))),\n          },\n        ]}\n      >\n        <Checkbox>\n          { t('I have read the') } <Link to=\"\" style={{color: colorPrimary}}>{ t('agreement') }</Link>\n        </Checkbox>\n      </Form.Item>\n\n      <Form.Item {...tailFormItemLayout}>\n        <Button type=\"primary\" htmlType=\"submit\" onClick={() => setIsValidate(true)} className=\"w-full\">\n          { t('Register') }\n        </Button>\n        <div className='mt-3 clearfix'>\n          <Link className=\"float-left a\" to=\"/login\" style={{color: colorPrimary}}>{t('Login!')}</Link>\n          <Link className=\"float-right a\" to=\"/login/password\" style={{color: colorPrimary}}>{t('Forgot password')}</Link>\n        </div>\n      </Form.Item>\n    </Form>\n  );\n};\n\nexport default Register;\n","// This icon file is generated automatically.\nvar CheckCircleFilled = { \"icon\": { \"tag\": \"svg\", \"attrs\": { \"viewBox\": \"64 64 896 896\", \"focusable\": \"false\" }, \"children\": [{ \"tag\": \"path\", \"attrs\": { \"d\": \"M512 64C264.6 64 64 264.6 64 512s200.6 448 448 448 448-200.6 448-448S759.4 64 512 64zm193.5 301.7l-210.6 292a31.8 31.8 0 01-51.7 0L318.5 484.9c-3.8-5.3 0-12.7 6.5-12.7h46.9c10.2 0 19.9 4.9 25.9 13.3l71.2 98.8 157.2-218c6-8.3 15.6-13.3 25.9-13.3H699c6.5 0 10.3 7.4 6.5 12.7z\" } }] }, \"name\": \"check-circle\", \"theme\": \"filled\" };\nexport default CheckCircleFilled;\n","import _objectSpread from \"@babel/runtime/helpers/esm/objectSpread2\";\n// GENERATE BY ./scripts/generate.ts\n// DON NOT EDIT IT MANUALLY\nimport * as React from 'react';\nimport CheckCircleFilledSvg from \"@ant-design/icons-svg/es/asn/CheckCircleFilled\";\nimport AntdIcon from '../components/AntdIcon';\nvar CheckCircleFilled = function CheckCircleFilled(props, ref) {\n  return /*#__PURE__*/React.createElement(AntdIcon, _objectSpread(_objectSpread({}, props), {}, {\n    ref: ref,\n    icon: CheckCircleFilledSvg\n  }));\n};\nCheckCircleFilled.displayName = 'CheckCircleFilled';\nexport default /*#__PURE__*/React.forwardRef(CheckCircleFilled);","// This icon file is generated automatically.\nvar ExclamationCircleFilled = { \"icon\": { \"tag\": \"svg\", \"attrs\": { \"viewBox\": \"64 64 896 896\", \"focusable\": \"false\" }, \"children\": [{ \"tag\": \"path\", \"attrs\": { \"d\": \"M512 64C264.6 64 64 264.6 64 512s200.6 448 448 448 448-200.6 448-448S759.4 64 512 64zm-32 232c0-4.4 3.6-8 8-8h48c4.4 0 8 3.6 8 8v272c0 4.4-3.6 8-8 8h-48c-4.4 0-8-3.6-8-8V296zm32 440a48.01 48.01 0 010-96 48.01 48.01 0 010 96z\" } }] }, \"name\": \"exclamation-circle\", \"theme\": \"filled\" };\nexport default ExclamationCircleFilled;\n","import _objectSpread from \"@babel/runtime/helpers/esm/objectSpread2\";\n// GENERATE BY ./scripts/generate.ts\n// DON NOT EDIT IT MANUALLY\nimport * as React from 'react';\nimport ExclamationCircleFilledSvg from \"@ant-design/icons-svg/es/asn/ExclamationCircleFilled\";\nimport AntdIcon from '../components/AntdIcon';\nvar ExclamationCircleFilled = function ExclamationCircleFilled(props, ref) {\n  return /*#__PURE__*/React.createElement(AntdIcon, _objectSpread(_objectSpread({}, props), {}, {\n    ref: ref,\n    icon: ExclamationCircleFilledSvg\n  }));\n};\nExclamationCircleFilled.displayName = 'ExclamationCircleFilled';\nexport default /*#__PURE__*/React.forwardRef(ExclamationCircleFilled);"],"names":["formItemLayout","labelCol","xs","span","sm","wrapperCol","tailFormItemLayout","offset","colorPrimary","getColorPrimary","useState","isValidate","setIsValidate","Form","form","useTranslation","t","i18n","on","lng","validateFields","useUnmount","off","name","size","onFinish","values","console","log","scrollToFirstError","style","width","label","rules","type","message","required","placeholder","allowClear","pattern","config","dependencies","getFieldValue","validator","_","value","Promise","reject","Error","resolve","valuePropName","to","color","htmlType","onClick","className","CheckCircleFilled","props","ref","React","AntdIcon","_objectSpread","icon","CheckCircleFilledSvg","displayName","ExclamationCircleFilled","ExclamationCircleFilledSvg"],"sourceRoot":""}