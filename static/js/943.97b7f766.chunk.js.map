{"version":3,"file":"static/js/943.97b7f766.chunk.js","mappings":"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","sources":["pages/login/components/PasswordLogin.jsx","pages/login/components/VerificationLogin.jsx","pages/login/index.jsx"],"sourcesContent":["import React, { useState } from 'react';\nimport { LockOutlined, UserOutlined } from '@ant-design/icons';\nimport { Button, Checkbox, Form, Input, message } from 'antd';\nimport { useTranslation } from 'react-i18next';\nimport { Link, useNavigate } from \"react-router-dom\";\nimport { useLocalStorageState, useMount, useUnmount } from 'ahooks';\nimport { addPrefixName, encryptFn, decryptFn } from '../../../utils/index';\nimport Cookies from 'js-cookie';\nimport { useDispatch } from 'react-redux';\nimport { setUserInfo } from './../../../store/userInfo';\n\nconst PasswordLogin = ({ activeKey }) => {\n  const [isValidate, setIsValidate] = useState(false);\n  const [localLoginInfo, setLocalLoginInfo] = useLocalStorageState(addPrefixName('loginInfo'));\n\n  const [form] = Form.useForm()\n  useMount(() => {\n    if (localLoginInfo) {\n      form.setFieldsValue({\n        username: localLoginInfo.username,\n        password: decryptFn(localLoginInfo.password),\n        remember: localLoginInfo.remember\n      })\n    }\n  })\n  // useEffect(() => {\n  //   form.resetFields()\n  // }, [form, activeKey])\n\n  const { t, i18n } = useTranslation();\n  i18n.on('languageChanged', (lng) => {\n    if (isValidate) form.validateFields();\n  })\n  useUnmount(() => {\n    i18n.off('languageChanged');\n  })\n\n  const dispatch = useDispatch();\n  const navigate = useNavigate();\n  const onFinish = (values) => {\n    setLocalLoginInfo({\n      username: values.username,\n      password: encryptFn(values.password),\n      remember: values.remember,\n    })\n    Cookies.set(addPrefixName('accessToken'), 'accessToken123', { expires: 7 })\n    dispatch(setUserInfo({\n      name: 'fxss'\n    }));\n    message.success(t('登陆成功'));\n    navigate('/');\n    console.log('Received values of form: ', values);\n  };\n\n  return (\n    <Form\n      initialValues={{\n        remember: true,\n      }}\n      form={form}\n      onFinish={onFinish}\n      size=\"large\"\n      name=\"login\"\n      className=\"w-80\"\n    >\n      <Form.Item\n        name=\"username\"\n        rules={[\n          {\n            required: true,\n            message: t('Please input your Username!'),\n          },\n        ]}\n      >\n        <Input prefix={<UserOutlined className=\"text-gray-400\" />} placeholder={t('Username')} allowClear />\n      </Form.Item>\n      <Form.Item\n        name=\"password\"\n        rules={[\n          {\n            required: true,\n            message: t('Please input your Password!'),\n          },\n        ]}\n      >\n        <Input.Password prefix={<LockOutlined className=\"text-gray-400\" />} placeholder={t('Password')} allowClear />\n      </Form.Item>\n      <Form.Item>\n        <Form.Item name=\"remember\" valuePropName=\"checked\" noStyle>\n          <Checkbox>{t('Remember me')}</Checkbox>\n        </Form.Item>\n\n        <Link className=\"float-right a\" to=\"/login/password\">{t('Forgot password')}</Link>\n      </Form.Item>\n\n      <Form.Item>\n        <Button type=\"primary\" htmlType=\"submit\" className=\"w-full\" onClick={() => setIsValidate(true)}>{t('Log in')}</Button>\n        <div className='mt-3'>{t('Or')} <Link to=\"/login/register\" className=\"a\">{t('register now!')}</Link></div>\n      </Form.Item>\n    </Form>\n  );\n}\n\nexport default PasswordLogin;\n","import React, { useEffect, useState } from 'react';\nimport { SafetyCertificateOutlined, MobileOutlined } from '@ant-design/icons';\nimport { Button, Form, Input } from 'antd';\nimport { useTranslation } from 'react-i18next';\nimport { Link } from \"react-router-dom\";\nimport { useCountDown, useUnmount } from 'ahooks';\nimport config from '../../../config';\n\nconst VerificationLogin = ({ activeKey }) => {\n  const [isValidate, setIsValidate] = useState(false)\n\n  const [form] = Form.useForm()\n  useEffect(() => {\n    // form.resetFields();\n    setTargetDate(undefined);\n    setIsGetVerificationLoading(false);\n  }, [form, activeKey])\n\n  const { t, i18n } = useTranslation();\n  i18n.on('languageChanged', (lng) => {\n    if (isValidate) form.validateFields();\n  })\n  useUnmount(() => {\n    i18n.off('languageChanged');\n  })\n\n  const [isGetVerificationLoading, setIsGetVerificationLoading] = useState(false);\n  const [targetDate, setTargetDate] = useState();\n  const [countdown] = useCountDown({\n    targetDate,\n    onEnd: () => {\n      setIsGetVerificationLoading(false);\n    },\n  });\n\n  const onFinish = (values) => {\n    console.log('Received values of form: ', values);\n  };\n  const getVerification = () => {\n    form.validateFields(['Phone']).then(() => {\n      setTargetDate(Date.now() + 60 * 1000);\n      setIsGetVerificationLoading(true);\n    })\n  };\n\n  return (\n    <Form\n      initialValues={{\n        remember: true,\n      }}\n      form={form}\n      onFinish={onFinish}\n      size=\"large\"\n      name=\"login\"\n      className=\"w-80\"\n    >\n      <Form.Item\n        name=\"Phone\"\n        rules={[\n          {\n            required: true,\n            message: t('Please input your Phone!'),\n          },\n          {\n            pattern: config.phonePattern,\n            message: t('Incorrect mobile number format!'),\n          },\n        ]}\n      >\n        <Input prefix={<MobileOutlined className=\"text-gray-400\" />} placeholder={t('Phone')} allowClear />\n      </Form.Item>\n\n      <Form.Item\n        name=\"Verification\"\n        rules={[\n          {\n            required: true,\n            message: t('Please input your Verification!'),\n          },\n          {\n            pattern: config.verificationPattern,\n            message: t('Incorrect format of verification number!')\n          },\n        ]}\n        className='flex-auto'\n      >\n        <Input prefix={<SafetyCertificateOutlined className=\"text-gray-400\" />} placeholder={t('Verification')} addonAfter={\n          isGetVerificationLoading ? `${Math.round(countdown / 1000)}s` : <div className='cursor-pointer' onClick={getVerification}>{t('Get verification code')}</div>\n        } allowClear />\n      </Form.Item>\n\n      <Form.Item>\n        <Button type=\"primary\" htmlType=\"submit\" className=\"w-full\" onClick={() => setIsValidate(true)}>{t('Log in')}</Button>\n        <div className='mt-3 clearfix'>\n          <Link className=\"float-left a\" to=\"/login/register\">{t('register now!')}</Link>\n          <Link className=\"float-right a\" to=\"/login/password\">{t('Forgot password')}</Link>\n        </div>\n      </Form.Item>\n    </Form>\n  );\n}\n\nexport default VerificationLogin;\n","import React, { useState } from 'react';\nimport { Tabs } from 'antd';\nimport { useTranslation } from 'react-i18next';\nimport PasswordLogin from './components/PasswordLogin';\nimport VerificationLogin from './components/VerificationLogin';\n\nconst LoginIndex = () => {\n  const { t } = useTranslation();\n  const [activeKey , setActiveKey] = useState('1')\n  const onChange = (key) => {\n    setActiveKey(key);\n  };\n\n  return (\n    <Tabs\n      activeKey={activeKey}\n      size=\"large\"\n      onChange={onChange}\n      centered\n      items={[\n        {\n          label: t('Password Login'),\n          key: '1',\n          children: <PasswordLogin activeKey={activeKey} />,\n        },\n        {\n          label: t('Verification login'),\n          key: '2',\n          children: <VerificationLogin activeKey={activeKey} />,\n        }\n      ]}\n    />\n  );\n}\n\nexport default LoginIndex;\n"],"names":["activeKey","useState","isValidate","setIsValidate","useLocalStorageState","addPrefixName","localLoginInfo","setLocalLoginInfo","Form","form","useMount","setFieldsValue","username","password","decryptFn","remember","useTranslation","t","i18n","on","lng","validateFields","useUnmount","off","dispatch","useDispatch","navigate","useNavigate","initialValues","onFinish","values","encryptFn","Cookies","expires","setUserInfo","name","message","console","log","size","className","rules","required","prefix","UserOutlined","placeholder","allowClear","LockOutlined","valuePropName","noStyle","to","type","htmlType","onClick","useEffect","setTargetDate","undefined","setIsGetVerificationLoading","isGetVerificationLoading","targetDate","useCountDown","onEnd","countdown","pattern","config","MobileOutlined","SafetyCertificateOutlined","addonAfter","Math","round","then","Date","now","setActiveKey","onChange","key","centered","items","label","children"],"sourceRoot":""}