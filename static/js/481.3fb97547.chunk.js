"use strict";(self.webpackChunkreact_antd=self.webpackChunkreact_antd||[]).push([[481],{52026:function(n,e,t){var s=t(29439),o=t(72791),i=t(64209),r=t(98180),a=t(78029),l=t(77027),c=t(71810),p=t(87309),d=t(56079),h=t(45657),u=t(80184);e.Z=function(n){var e=n.lang,t=void 0===e?"javascript":e,m=n.children,g=void 0===m?"":m,x=l.ZP.useMessage(),y=(0,s.Z)(x,2),f=y[0],C=y[1],j=(0,o.useState)(!1),v=(0,s.Z)(j,2),b=v[0],Z=v[1];return(0,u.jsxs)("div",{className:"relative",children:[C,(0,u.jsxs)("div",{className:"absolute right-1 top-1 flex items-center",children:[(0,u.jsx)("span",{className:"text-zinc-400 mr-3",children:t}),(0,u.jsx)(c.Z,{title:"\u590d\u5236\u4ee3\u7801",children:(0,u.jsx)(a.CopyToClipboard,{text:g,onCopy:function(n,e){n?e?(Z(!0),f.success({content:"\u590d\u5236\u6210\u529f\uff01",duration:2,onClose:function(){Z(!1)}})):(Z(!1),f.error({content:"\u590d\u5236\u5931\u8d25\uff01",duration:2})):f.warning({content:"\u7f3a\u4e4f\u5f85\u590d\u5236\u5185\u5bb9\uff01",duration:2})},children:(0,u.jsx)(p.ZP,{size:"small",className:"opacity-80",icon:b?(0,u.jsx)(d.Z,{}):(0,u.jsx)(h.Z,{})})})})]}),(0,u.jsx)(i.Z,{language:t,showLineNumbers:!0,style:r.Z,customStyle:{borderRadius:"6px",fontSize:"14px",paddingTop:"22px",margin:0},children:g})]})}},76481:function(n,e,t){t.r(e),t.d(e,{default:function(){return d}});t(72791);var s=t(52026),o=t(52202),i=t(80184),r=function(){return(0,i.jsx)(s.Z,{lang:"jsx",children:'import React from "react";\nimport uniquePropHOC from "./lib/unique-prop-hoc";\n\n// this comment is here to demonstrate an extremely long line length, well beyond what you should probably allow in your own code, though sometimes you\'ll be highlighting code you can\'t refactor, which is unfortunate but should be handled gracefully\n\nclass Expire extends React.Component {\n    constructor(props) {\n        super(props);\n        this.state = { component: props.children }\n    }\n    componentDidMount() {\n        setTimeout(() => {\n            this.setState({\n                component: null\n            });\n        }, this.props.time || this.props.seconds * 1000);\n    }\n    render() {\n        return this.state.component;\n    }\n}\n\nexport default uniquePropHOC(["time", "seconds"])(Expire);'})},a=t(2703),l=o.Z.Title,c=o.Z.Text,p=o.Z.Link,d=function(){var n=(0,a.RQ)();return(0,i.jsxs)("div",{children:[(0,i.jsx)(l,{children:"react-syntax-highlighter"}),(0,i.jsx)(c,{children:(0,i.jsx)(p,{href:"https://react-syntax-highlighter.github.io/react-syntax-highlighter/demo/",target:"_blank",style:{color:n},children:"\u5b98\u65b9\u5b9e\u4f8b"})}),(0,i.jsx)(l,{level:2,style:{marginTop:"0.5em"},children:"\u5b89\u88c5\uff1a"}),(0,i.jsx)(s.Z,{lang:"sh",children:"npm install react-syntax-highlighter --save"}),(0,i.jsx)(l,{level:2,style:{marginTop:"0.5em"},children:"\u4f8b\u5b50\uff1a"}),(0,i.jsx)(r,{}),(0,i.jsx)(l,{level:2,style:{marginTop:"0.5em"},children:"\u4ee3\u7801\u6e32\u67d3\u5c01\u88c5\u7ec4\u4ef6\uff1a"}),(0,i.jsx)(s.Z,{lang:"jsx",children:"import { useState } from 'react';\nimport { Prism as SyntaxHighlighter } from 'react-syntax-highlighter';\nimport { vscDarkPlus } from 'react-syntax-highlighter/dist/esm/styles/prism';\nimport { CopyToClipboard } from 'react-copy-to-clipboard';\nimport { Button, message, Tooltip } from 'antd';\nimport { CopyOutlined, CheckOutlined } from '@ant-design/icons';\n\nconst CodeHighlighter = ({ lang = 'javascript', children = '' }) => {\n  const [messageApi, contextHolder] = message.useMessage();\n  const [copied, setCopied] = useState(false);\n  const onCopy = (text, result) => {\n    if (!text) {\n      messageApi.warning({\n        content: '\u7f3a\u4e4f\u5f85\u590d\u5236\u5185\u5bb9\uff01',\n        duration: 2,\n      });\n      return;\n    }\n    if (result) {\n      setCopied(true);\n      messageApi.success({\n        content: '\u590d\u5236\u6210\u529f\uff01',\n        duration: 2,\n        onClose: () => {\n          setCopied(false);\n        }\n      });\n    } else {\n      setCopied(false);\n      messageApi.error({\n        content: '\u590d\u5236\u5931\u8d25\uff01',\n        duration: 2,\n      });\n    }\n  };\n\n  const customStyle = {\n    borderRadius: '6px',\n    fontSize: '14px',\n    paddingTop: '22px',\n    margin: 0,\n  }\n\n  return (\n    <div className='relative'>\n      {contextHolder}\n      <div className='absolute right-1 top-1 flex items-center'>\n        <span className='text-zinc-400 mr-3'>{lang}</span>\n        <Tooltip title=\"\u590d\u5236\u4ee3\u7801\">\n          <CopyToClipboard text={children} onCopy={onCopy}>\n            <Button size=\"small\" className='opacity-80' icon={copied ? <CheckOutlined /> : <CopyOutlined /> }  />\n          </CopyToClipboard>\n        </Tooltip>\n      </div>\n      <SyntaxHighlighter language={lang} wrapLongLines showLineNumbers style={vscDarkPlus} customStyle={customStyle}>\n        {children}\n      </SyntaxHighlighter>\n    </div>\n  );\n};\n\nexport default CodeHighlighter;"})]})}}}]);
//# sourceMappingURL=481.3fb97547.chunk.js.map