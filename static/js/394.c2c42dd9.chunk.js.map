{"version":3,"file":"static/js/394.c2c42dd9.chunk.js","mappings":"kLAIQA,EAAaC,EAAAA,EAAAA,SAerB,IAbiB,SAAH,GAAqB,IAAhBC,EAAS,EAATA,UAETC,EADUH,IAAVI,MACAD,aACR,OACE,SAAC,IAAO,CAACE,UAAU,SAASC,QAAQ,2BAAM,UACxC,eAAGJ,UAAWK,IAAWL,EAAW,OAAQ,KAAMM,KAAK,6CAA6CC,OAAO,SAASC,IAAI,aAAaC,MAAO,CAACC,MAAOT,GAAc,WAChK,SAAC,IAAY,KACb,iBAAMD,UAAU,OAAM,SAAC,iCAI/B,C,uECXA,GAJeW,E,SAAAA,GAAqB,CAClCC,UAAW,oD,4ECILd,EAAaC,EAAAA,EAAAA,SAuBrB,EArBmB,SAAH,GAAoB,IAAfc,EAAQ,EAARA,SAEXZ,EADUH,IAAVI,MACAD,aACR,GAA6Ba,EAAAA,EAAAA,IAAqBC,EAAAA,EAAAA,IAAc,WAAvDC,GAAiE,YAAjD,GACpBC,GAASC,EAAAA,EAAAA,KAAY,SAAAC,GAAK,OAAIA,EAAMF,OAAOG,KAAK,IAChDC,GAAWC,EAAAA,EAAAA,MAMhB,OACE,SAAC,IAAO,CAACnB,UAAU,SAASC,QAAoB,SAAXa,EAAoB,uBAAe,uBAAa,UACnF,iBAAKjB,UAAS,2CAAsCa,GAAYU,QAAS,kBAPnDC,EAOsF,SAAXP,EAAoB,OAAS,OANlII,GAASI,EAAAA,EAAAA,IAAaD,SACtBR,EAAiBQ,GAFQ,IAACA,CAO+G,EAAC,WACpI,SAAC,EAAM,CAACE,KAAiB,SAAXT,EAAoB,oCAAsC,mCAAqCjB,UAAU,UAAUS,MAAO,CAACC,MAAOT,MAChJ,iBAAMD,UAAU,OAAM,SAAa,SAAXiB,EAAoB,eAAO,gBAI3D,C,gHCrBMU,EAAMC,EAAQ,MAyBpB,UAvBoB,WAClB,OACE,iBAAK5B,UAAU,yBAAwB,WACrC,iBAAKA,UAAU,gDAA+C,UAC3D6B,EAAAA,EAAAA,mBAA2B,SAAC,IAAU,CAAChB,SAAS,uCACjD,SAAC,IAAQ,CAACb,UAAU,aAEtB,gBAAKA,UAAU,oCAAmC,UAChD,iBAAKA,UAAU,QAAO,WACpB,gBAAKA,UAAU,yCAAwC,SAAE2B,EAAIG,QAC7D,SAAC,EAAAC,SAAQ,CAACC,UACb,SAAC,IAAI,CAACC,IAAI,wBAASC,KAAK,QAAO,UAC9B,gBAAKlC,UAAU,SAASS,MAAO,CAAE0B,OAAQ,YAE1C,UACK,SAAC,KAAM,aAMnB,C","sources":["components/DocsLink.jsx","components/MyIcon.js","components/ToggleLang.jsx","layout/LoginLayout.jsx"],"sourcesContent":["import { LinkOutlined } from '@ant-design/icons';\r\nimport { Popover, theme } from 'antd';\r\nimport classNames from 'classnames';\r\n\r\nconst { useToken } = theme;\r\n\r\nconst DocsLink = ({className}) => {\r\n  const { token } = useToken();\r\n  const { colorPrimary } = token;\r\n  return (\r\n    <Popover placement=\"bottom\" content='文档地址'>\r\n      <a className={classNames(className, 'flex', 'a')} href='https://fxss5201.github.io/react-antd-docs' target='_blank' rel=\"noreferrer\" style={{color: colorPrimary}}>\r\n        <LinkOutlined />\r\n        <span className='ml-1'>文档地址</span>\r\n      </a>\r\n    </Popover>\r\n  )\r\n}\r\n\r\nexport default DocsLink;\r\n","import { createFromIconfontCN } from '@ant-design/icons';\r\n\r\nconst MyIcon = createFromIconfontCN({\r\n  scriptUrl: '//at.alicdn.com/t/c/font_3796796_zcpz7u9c75j.js', // 在 iconfont.cn 上生成\r\n});\r\n\r\nexport default MyIcon;\r\n","import MyIcon from '../components/MyIcon';\r\nimport { useSelector, useDispatch } from 'react-redux';\r\nimport { useLocalStorageState } from 'ahooks';\r\nimport { Popover, theme } from 'antd';\r\nimport { changeLocale } from '../store/locale';\r\nimport { addPrefixName } from './../utils/index';\r\n\r\nconst { useToken } = theme;\r\n\r\nconst ToggleLang = ({addClass}) => {\r\n  const { token } = useToken();\r\n  const { colorPrimary } = token;\r\n  const [, setLocaleStorage] = useLocalStorageState(addPrefixName('locale'));\r\n\tconst locale = useSelector(state => state.locale.value);\r\n\tconst dispatch = useDispatch();\r\n\tconst changeLocaleEvent = (val) =>  {\r\n\t\tdispatch(changeLocale(val));\r\n\t\tsetLocaleStorage(val);\r\n\t};\r\n\r\n  return (\r\n    <Popover placement=\"bottom\" content={locale === 'zhCN' ? '中文/English' : 'English/中文'}>\r\n      <div className={`flex items-center cursor-pointer ${addClass}`} onClick={() => changeLocaleEvent(locale === 'zhCN' ? 'enGb' : 'zhCN')}>\r\n        <MyIcon type={locale === 'zhCN' ? 'icon-zhongyingwenqiehuan-zhongwen' : 'icon-zhongyingwenqiehuan-yingwen' } className='text-24' style={{color: colorPrimary}} />\r\n        <span className='ml-1'>{locale === 'zhCN' ? '中文' : 'English' }</span>\r\n      </div>\r\n    </Popover>\r\n  )\r\n}\r\n\r\nexport default ToggleLang;\r\n","import React, { Suspense } from 'react';\r\nimport { Outlet } from 'react-router-dom';\r\nimport ToggleLang from '../components/ToggleLang';\r\nimport { Spin } from 'antd';\r\nimport DocsLink from '../components/DocsLink';\r\nimport config from '../config/index';\r\n\r\nconst pkg = require('./../../package.json');\r\n\r\nconst LoginLayout = () => {\r\n  return (\r\n    <div className='w-full h-full relative'>\r\n      <div className='absolute top-4 right-8 z-10 flex items-center'>\r\n        {config.isShowToggleLang && <ToggleLang addClass='text-gray-900 hover:text-blue-400' />}\r\n        <DocsLink className='ml-4'></DocsLink>\r\n      </div>\r\n      <div className='w-full h-full flex justify-center'>\r\n        <div className='mt-20'>\r\n          <div className='text-lg font-semibold text-center mb-5'>{pkg.name}</div>\r\n          <Suspense fallback={\r\n\t\t\t\t\t\t\t<Spin tip=\"加载中...\" size=\"large\">\r\n\t\t\t\t\t\t\t\t<div className='w-full' style={{ height: '50vh' }}></div>\r\n\t\t\t\t\t\t\t</Spin>\r\n\t\t\t\t\t\t}>\r\n            <Outlet />\r\n          </Suspense>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default LoginLayout;\r\n"],"names":["useToken","theme","className","colorPrimary","token","placement","content","classNames","href","target","rel","style","color","createFromIconfontCN","scriptUrl","addClass","useLocalStorageState","addPrefixName","setLocaleStorage","locale","useSelector","state","value","dispatch","useDispatch","onClick","val","changeLocale","type","pkg","require","config","name","Suspense","fallback","tip","size","height"],"sourceRoot":""}