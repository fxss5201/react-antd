{"version":3,"file":"static/js/541.be52d6fa.chunk.js","mappings":"0QA8CA,EArCqB,SAACA,GAAW,IAAD,QACtBC,GAAMC,EAAAA,EAAAA,MAAND,EACHE,GAAWC,EAAAA,EAAAA,MACVC,GAAQC,EAAAA,EAAAA,IAAYH,EAASI,SAAUC,EAAAA,EAAAA,GAAAA,UAEzCC,EAAWJ,EACXA,EAAMK,UAA6B,QAArB,EAAIL,EAAMK,SAAS,UAAE,OAAjB,EAAmBC,QACvCF,EAAWJ,EAAMK,SAAS,IAE7B,IAAME,EAAqB,QAAhB,EAAGH,EAASI,YAAI,aAAb,EAAeD,MACvBE,EAASb,EAAe,QAAd,EAACQ,EAASI,YAAI,aAAb,EAAeD,OAIhC,OAFCG,EAAAA,EAAAA,GAASH,IAAUE,EAASF,EAAQE,GAEjCT,EAAMW,UAAiB,SAAC,KAAQ,CAACC,GAAIZ,EAAMW,SAAUE,SAAO,IAKjD,QAAX,EAACb,EAAMQ,YAAI,OAAV,EAAYM,aAGIC,EAAAA,EAAAA,KAAYC,EAAAA,EAAAA,IAAc,gBAYxCrB,EAAMU,UAXY,SAAC,KAAQ,CAACO,GAAG,SAASC,SAAO,IAJhBlB,EAAMU,QAgB7C,ECzBA,EAfkB,WAChB,OACE,+BACE,UAAC,EAAY,YACX,SAAC,KAAiB,CAChBY,OAAQ,SAACnB,GACP,OAAOA,EAASI,QAClB,KAEF,SAAC,KAAM,QAIf,C,kICXaD,EAAc,SAAdA,IAA2C,IAEhC,EAFIiB,EAAI,uDAAG,GAAIC,EAAM,uDAAG,GAC3CC,EAAS,CAAC,EAAE,UACCD,GAAM,IAAvB,2BAAyB,CAAC,IAAjBE,EAAI,QACZ,GAAIA,EAAKH,OAASA,EAAM,OAAOG,EAC/B,GAAIA,EAAKhB,SAAU,CAClB,IAAMiB,EAAMrB,EAAYiB,EAAMG,EAAKhB,UAC/BkB,OAAOC,KAAKF,GAAKG,SAAQL,EAASE,EACvC,CACD,CAAC,+BACD,OAAOF,CACR,EAOaM,EAAuB,SAAvBA,IAAyC,IAE9B,EAFaP,EAAM,uDAAG,GACzCC,EAAS,GAAG,UACCD,GAAM,IAAvB,2BAAyB,CAAC,IAAjBE,EAAI,QACPA,EAAKM,aACFN,EAAKhB,SACPe,EAAOQ,MAAK,kBACPP,GAAI,IACPhB,SAAUqB,EAAqBL,EAAKhB,aAGtCe,EAAOQ,KAAKP,GAGnB,CAAC,+BACD,OAAOD,CACR,EAOaS,EAA4B,SAA5BA,IAA8C,IAEnC,EAFkBV,EAAM,uDAAG,GAC9CC,EAAS,GAAG,UACCD,GAAM,IAAvB,2BAAyB,CAAC,IACJ,IAOZ,IARDE,EAAI,QACV,GAAIA,EAAKhB,SACPe,EAAOQ,KAAK,CACVE,IAAKT,EAAKH,KACVa,KAAe,QAAX,EAAEV,EAAKb,YAAI,aAAT,EAAWuB,KACjBC,MAAgB,QAAX,EAAEX,EAAKb,YAAI,aAAT,EAAWD,MAClBF,SAAUwB,EAA0BR,EAAKhB,iBAG3Ce,EAAOQ,KAAK,CACVE,IAAKT,EAAKH,KACVa,KAAe,QAAX,EAAEV,EAAKb,YAAI,aAAT,EAAWuB,KACjBC,MAAgB,QAAX,EAAEX,EAAKb,YAAI,aAAT,EAAWD,OAGzB,CAAC,+BACD,OAAOa,CACR,C","sources":["router/RouterExtend.jsx","layout/AllLayout.jsx","utils/router.js"],"sourcesContent":["import React from 'react';\nimport { useLocation, Navigate } from \"react-router-dom\";\nimport { addPrefixName } from '../utils';\nimport Cookies from 'js-cookie';\nimport { searchRoute } from '../utils/router';\nimport { routerList } from './index';\nimport { useTitle } from 'ahooks';\nimport { useTranslation } from 'react-i18next';\n\nconst RouterExtend = (props) => {\n  const { t } = useTranslation();\n\tconst location = useLocation();\n  const route = searchRoute(location.pathname, routerList[0].children);\n\n  let curRoute = route\n  if (route.children && route.children[0]?.index) {\n    curRoute = route.children[0]\n  }\n\tconst title = curRoute.meta?.title\n\tconst tTitle = t(curRoute.meta?.title)\n\t// 此处利用多语言 t('aaa') 是否等于 'aaa' 来判断是否使用多语言\n  useTitle(title === tTitle ? title : tTitle)\n\n\tif (route.redirect) return <Navigate to={route.redirect} replace />;\n\n  // TODO 在跳转路由之前，清除所有的请求\n\n\t// * 判断当前路由是否需要访问权限(不需要权限直接放行)\n\tif (!route.meta?.requiresAuth) return props.children;\n\n\t// * 判断是否有Token\n  const accessToken = Cookies.get(addPrefixName('accessToken'));\n\tif (!accessToken) return <Navigate to=\"/login\" replace />;\n\n\t// // * Dynamic Router(动态路由，根据后端返回的菜单数据生成的一维数组)\n\t// const dynamicRouter = store.getState().auth.authRouter;\n\t// // * Static Router(静态路由，必须配置首页地址，否则不能进首页获取菜单、按钮权限等数据)，获取数据的时候会loading，所有配置首页地址也没问题\n\t// const staticRouter = [HOME_URL, \"/403\"];\n\t// const routers = dynamicRouter.concat(staticRouter);\n\t// // * 如果访问的地址没有在路由表中重定向到403页面\n\t// if (routers.indexOf(location.pathname) === -1) return <Navigate to=\"/403\" />;\n\n\t// * 当前账号有权限返回 Router，正常访问页面\n\treturn props.children;\n};\n\nexport default RouterExtend;\n","import React from 'react';\r\nimport { Outlet, ScrollRestoration } from 'react-router-dom';\r\nimport RouterExtend from '../router/RouterExtend';\r\n\r\nconst AllLayout = () => {\r\n  return (\r\n    <>\r\n      <RouterExtend>\r\n        <ScrollRestoration\r\n          getKey={(location) => {\r\n            return location.pathname;\r\n          }}\r\n        />\r\n        <Outlet />\r\n      </RouterExtend>\r\n    </>\r\n  )\r\n};\r\n\r\nexport default AllLayout;\r\n","/**\r\n * @description 递归查询对应的路由\r\n * @param {String} path 当前访问地址\r\n * @param {Array} routes 路由列表\r\n * @returns array\r\n */\r\nexport const searchRoute = (path = '', routes = []) => {\r\n\tlet result = {};\r\n\tfor (let item of routes) {\r\n\t\tif (item.path === path) return item;\r\n\t\tif (item.children) {\r\n\t\t\tconst res = searchRoute(path, item.children);\r\n\t\t\tif (Object.keys(res).length) result = res;\r\n\t\t}\r\n\t}\r\n\treturn result;\r\n};\r\n\r\n/**\r\n * @description 递归查询menu可展示的路由\r\n * @param {Array} routes 路由列表\r\n * @returns array\r\n */\r\nexport const searchShowMenuRoutes = (routes = []) => {\r\n\tlet result = [];\r\n\tfor (let item of routes) {\r\n\t\tif (!item.hideInMenu) {\r\n      if (item.children) {\r\n        result.push({\r\n          ...item,\r\n          children: searchShowMenuRoutes(item.children)\r\n        })\r\n      } else {\r\n        result.push(item)\r\n      }\r\n    }\r\n\t}\r\n\treturn result;\r\n};\r\n\r\n/**\r\n * @description 递归menu可展示的路由转换为Menu导航菜单\r\n * @param {Array} routes 路由列表\r\n * @returns array\r\n */\r\nexport const showMenuRoutesToMenuItems = (routes = []) => {\r\n\tlet result = [];\r\n\tfor (let item of routes) {\r\n    if (item.children) {\r\n      result.push({\r\n        key: item.path,\r\n        icon: item.meta?.icon,\r\n        label: item.meta?.title,\r\n        children: showMenuRoutesToMenuItems(item.children)\r\n      })\r\n    } else {\r\n      result.push({\r\n        key: item.path,\r\n        icon: item.meta?.icon,\r\n        label: item.meta?.title,\r\n      })\r\n    }\r\n\t}\r\n\treturn result;\r\n};\r\n"],"names":["props","t","useTranslation","location","useLocation","route","searchRoute","pathname","routerList","curRoute","children","index","title","meta","tTitle","useTitle","redirect","to","replace","requiresAuth","Cookies","addPrefixName","getKey","path","routes","result","item","res","Object","keys","length","searchShowMenuRoutes","hideInMenu","push","showMenuRoutesToMenuItems","key","icon","label"],"sourceRoot":""}