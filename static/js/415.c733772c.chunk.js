"use strict";(self.webpackChunkreact_antd=self.webpackChunkreact_antd||[]).push([[415],{52026:function(n,e,t){var o=t(29439),s=t(72791),i=t(64209),r=t(98180),a=t(78029),c=t(77027),l=t(71810),p=t(87309),u=t(56079),d=t(45657),x=t(80184);e.Z=function(n){var e=n.lang,t=void 0===e?"javascript":e,m=n.children,C=void 0===m?"":m,h=c.ZP.useMessage(),f=(0,o.Z)(h,2),g=f[0],j=f[1],y=(0,s.useState)(!1),Z=(0,o.Z)(y,2),v=Z[0],b=Z[1];return(0,x.jsxs)("div",{className:"relative",children:[j,(0,x.jsxs)("div",{className:"absolute right-1 top-1 flex items-center",children:[(0,x.jsx)("span",{className:"text-zinc-400 mr-3",children:t}),(0,x.jsx)(l.Z,{title:"\u590d\u5236\u4ee3\u7801",children:(0,x.jsx)(a.CopyToClipboard,{text:C,onCopy:function(n,e){n?e?(b(!0),g.success({content:"\u590d\u5236\u6210\u529f\uff01",duration:2,onClose:function(){b(!1)}})):(b(!1),g.error({content:"\u590d\u5236\u5931\u8d25\uff01",duration:2})):g.warning({content:"\u7f3a\u4e4f\u5f85\u590d\u5236\u5185\u5bb9\uff01",duration:2})},children:(0,x.jsx)(p.ZP,{size:"small",className:"opacity-80",icon:v?(0,x.jsx)(u.Z,{}):(0,x.jsx)(d.Z,{})})})})]}),(0,x.jsx)(i.Z,{language:t,showLineNumbers:!0,style:r.Z,customStyle:{borderRadius:"6px",fontSize:"14px",paddingTop:"22px",margin:0},children:C})]})}},3415:function(n,e,t){t.r(e),t.d(e,{default:function(){return f}});var o=t(72791),s=t(52026),i=t(52202),r=t(29439),a=t(78029),c=t(77027),l=t(64910),p=t(71810),u=t(87309),d=t(56079),x=t(45657),m=t(80184),C=function(){var n=c.ZP.useMessage(),e=(0,r.Z)(n,2),t=e[0],s=e[1],i=(0,o.useState)("demo"),C=(0,r.Z)(i,2),h=C[0],f=C[1],g=(0,o.useState)(!1),j=(0,r.Z)(g,2),y=j[0],Z=j[1];return(0,m.jsxs)("div",{children:[s,(0,m.jsxs)(l.Z.Group,{compact:!0,children:[(0,m.jsx)(l.Z,{style:{width:"calc(100% - 32px)"},defaultValue:h,onChange:function(n){return f(n.target.value)}}),(0,m.jsx)(p.Z,{title:"\u590d\u5236",children:(0,m.jsx)(a.CopyToClipboard,{text:h,onCopy:function(n,e){n?e?(Z(!0),t.success({content:"\u590d\u5236\u6210\u529f\uff01",duration:2,onClose:function(){Z(!1)}})):(Z(!1),t.error({content:"\u590d\u5236\u5931\u8d25\uff01",duration:2})):t.warning({content:"\u8bf7\u8f93\u5165\u5f85\u590d\u5236\u5185\u5bb9\uff01",duration:2})},children:(0,m.jsx)(u.ZP,{className:"opacity-80",icon:y?(0,m.jsx)(d.Z,{}):(0,m.jsx)(x.Z,{})})})})]})]})},h=i.Z.Title,f=function(){return(0,m.jsxs)("div",{children:[(0,m.jsx)(h,{children:"react-copy-to-clipboard"}),(0,m.jsx)(h,{level:2,style:{marginTop:"0.5em"},children:"\u5b89\u88c5\uff1a"}),(0,m.jsx)(s.Z,{lang:"sh",children:"npm install --save react-copy-to-clipboard"}),(0,m.jsx)(h,{level:2,style:{marginTop:"0.5em"},children:"\u4f8b\u5b50\uff1a"}),(0,m.jsx)(C,{}),(0,m.jsx)(h,{level:2,style:{marginTop:"0.5em"},children:"\u4f8b\u5b50\u4ee3\u7801\uff1a"}),(0,m.jsx)(s.Z,{lang:"jsx",children:"import { useState } from 'react';\nimport { CopyToClipboard } from 'react-copy-to-clipboard';\nimport { message, Button, Input, Tooltip } from 'antd';\nimport { CopyOutlined, CheckOutlined } from '@ant-design/icons';\n\nconst CopyDemo = () => {\n  const [messageApi, contextHolder] = message.useMessage();\n  const [inputStr, setInputStr] = useState('demo');\n  const [copied, setCopied] = useState(false);\n  const onCopy = (text, result) => {\n    if (!text) {\n      messageApi.warning({\n        content: '\u8bf7\u8f93\u5165\u5185\u5bb9\uff01',\n        duration: 2,\n      });\n      return;\n    }\n    if (result) {\n      setCopied(true);\n      messageApi.success({\n        content: '\u590d\u5236\u6210\u529f\uff01',\n        duration: 2,\n        onClose: () => {\n          setCopied(false);\n        }\n      });\n    } else {\n      setCopied(false);\n      messageApi.error({\n        content: '\u590d\u5236\u5931\u8d25\uff01',\n        duration: 2,\n      });\n    }\n  };\n\n  return (\n    <div>\n      {contextHolder}\n      <Input.Group compact>\n        <Input\n          style={{\n            width: 'calc(100% - 32px)',\n          }}\n          defaultValue={inputStr}\n          onChange={(e) => setInputStr(e.target.value)}\n        />\n        <Tooltip title=\"\u590d\u5236\">\n          <CopyToClipboard text={inputStr} onCopy={onCopy}>\n            <Button className='opacity-80' icon={copied ? <CheckOutlined /> : <CopyOutlined /> }  />\n          </CopyToClipboard>\n        </Tooltip>\n      </Input.Group>\n    </div>\n  );\n};\n\nexport default CopyDemo;"})]})}}}]);
//# sourceMappingURL=415.c733772c.chunk.js.map