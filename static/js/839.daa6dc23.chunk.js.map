{"version":3,"file":"static/js/839.daa6dc23.chunk.js","mappings":"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","sources":["components/CodeHighlighter.jsx","components/EchartsModule.jsx","pages/pageEcharts/PageDemo1.jsx","pages/pageEcharts/PageDemo2.jsx","pages/pageEcharts/PageDemo3.jsx","pages/pageEcharts/PageDemo4.jsx","pages/pageEcharts/PageDemo5.jsx","pages/pageEcharts/PageDemo6.jsx","pages/pageEcharts/PageDemo7.jsx","pages/pageEcharts/PageDemo8.jsx","pages/pageEcharts/PageEcharts.jsx","pages/pageEcharts/Codes.js"],"sourcesContent":["import { useState } from 'react';\nimport { Prism as SyntaxHighlighter } from 'react-syntax-highlighter';\nimport { vscDarkPlus } from 'react-syntax-highlighter/dist/esm/styles/prism';\nimport { CopyToClipboard } from 'react-copy-to-clipboard';\nimport { Button, message, Tooltip } from 'antd';\nimport { CopyOutlined, CheckOutlined } from '@ant-design/icons';\nimport classNames from 'classnames';\n\nconst CodeHighlighter = ({ lang='javascript', children='', className='' }) => {\n  const [messageApi, contextHolder] = message.useMessage();\n  const [copied, setCopied] = useState(false);\n  const onCopy = (text, result) => {\n    if (!text) {\n      messageApi.warning({\n        content: '缺乏待复制内容！',\n        duration: 2,\n      });\n      return;\n    }\n    if (result) {\n      setCopied(true);\n      messageApi.success({\n        content: '复制成功！',\n        duration: 2,\n        onClose: () => {\n          setCopied(false);\n        }\n      });\n    } else {\n      setCopied(false);\n      messageApi.error({\n        content: '复制失败！',\n        duration: 2,\n      });\n    }\n  };\n\n  const customStyle = {\n    borderRadius: '6px',\n    fontSize: '14px',\n    paddingTop: '22px',\n    margin: 0,\n  }\n\n  return (\n    <div className={classNames('relative', className)}>\n      {contextHolder}\n      <div className='absolute right-1 top-1 flex items-center'>\n        <span className='text-zinc-400 mr-3'>{lang}</span>\n        <Tooltip title=\"复制代码\">\n          <CopyToClipboard text={children} onCopy={onCopy}>\n            <Button size=\"small\" className='opacity-80' icon={copied ? <CheckOutlined /> : <CopyOutlined /> }  />\n          </CopyToClipboard>\n        </Tooltip>\n      </div>\n      <SyntaxHighlighter language={lang} showLineNumbers style={vscDarkPlus} customStyle={customStyle}>\n        {children}\n      </SyntaxHighlighter>\n    </div>\n  );\n};\n\nexport default CodeHighlighter;\n","import { useEffect, useImperativeHandle, useRef } from \"react\";\nimport * as echarts from 'echarts';\nimport { useDeepCompareEffect, useMount, useSize, useUnmount, useUpdateEffect } from \"ahooks\";\nimport classNames from 'classnames';\n\nconst EchartsModule = ({\n  // https://echarts.apache.org/zh/api.html#echarts.init\n  // 初始化传入的 opts\n  opts = { renderer: 'svg' },\n  // 配置项\n  options = {},\n  // 数据集合\n  seriesData = [],\n  // 自动切换的时间跨度\n  intervalTime = 1500,\n  // 是否自动播放\n  autoPlay = true,\n  // 是否自动添加鼠标上移事件\n  isAddOn = true,\n  onRef,\n  className = ''\n}) => {\n  \n  const echartsRef = useRef(null);\n  let myChart = useRef(null);\n  let echartsOptions = useRef({});\n  let myChartEventTime = useRef(null);\n  let currentSeriesIndex = useRef(0);\n  let currentDataIndex = useRef(-1);\n  let timer = useRef(intervalTime);\n\n  // 是否调用过 echartsPlay\n  let isEchartsPlay = useRef(false);\n  // echarts初始化\n  function init() {\n    destroyEchart() //判断是否有echart实例，如果有，先销毁\n    myChart.current = echarts.init(echartsRef.current, null, opts)\n    update()\n\n    if (isAddOn) {\n      addEventFn()\n    }\n  }\n\n  // 绑定事件\n  function addEventFn() {\n    // 鼠标移上查看的时候，暂停动画\n    myChart.current.on('mouseover', 'series', event => {\n      // 取消之前高亮的图形\n      myChart.current.dispatchAction({\n        type: 'downplay',\n        seriesIndex: currentSeriesIndex.current,\n        dataIndex: currentDataIndex.current\n      })\n      echartsPause()\n    })\n    // 鼠标移出的时候打开动画\n    myChart.current.on('mouseout', 'series', event => {\n      // 自动播放 或者 调用过 echartsPlay\n      if (autoPlay || isEchartsPlay.current) echartsPlay(true, event.seriesIndex, event.dataIndex - 1)\n    })\n  }\n\n  // 移除事件\n  function removeEventFn() {\n    myChart.current.off('mouseover')\n    myChart.current.off('mouseout')\n  }\n\n  // 数据更新\n  function update() {\n    // 逻辑处理组件options参数\n    const curOptions = {\n      ...options,\n      series: seriesData\n      // other options here ...\n    }\n    echartsOptions.current = curOptions\n    // 调用ECharts组件setOption更新\n    myChart.current.setOption(curOptions, true)\n    if (curOptions.series.length && autoPlay) {\n      myChart.current.dispatchAction({\n        type: 'highlight',\n        seriesIndex: currentSeriesIndex.current,\n        dataIndex: currentDataIndex.current\n      })\n      // 显示 tooltip\n      myChart.current.dispatchAction({\n        type: 'showTip',\n        seriesIndex: currentSeriesIndex.current,\n        dataIndex: currentDataIndex.current\n      })\n      echartsPlay(false, currentSeriesIndex.current, currentDataIndex.current <= seriesData[currentSeriesIndex.current].data.length - 1 ? currentDataIndex.current : -1)\n    }\n  }\n\n  // 销毁echarts\n  function destroyEchart() {\n    if (myChart.current) {\n      if (isAddOn) {\n        removeEventFn()\n      }\n      if (typeof myChart.current.clear === 'function') myChart.current.clear()\n      if (typeof myChart.current.dispose === 'function') myChart.current.dispose()\n      myChart.current = null\n    }\n  }\n\n  /**\n   * echarts开启动画，可手动调用\n   * clear: 是否立即开始动画，并清除上个定时器，开启下个定时器，默认为 false\n   * seriesIndex: series 中的第几项数据，默认为 0\n   * dataIndex: series[seriesIndex].data 中的第几项，默认为 -1\n   */\n  function echartsPlay(clear = false, seriesIndex = 0, dataIndex = -1) {\n    if (clear) {\n      echartsPause()\n    }\n    isEchartsPlay.current = true\n    currentSeriesIndex.current = seriesIndex\n    currentDataIndex.current = dataIndex\n    if (!myChartEventTime.current) {\n      echartsEventPlay(seriesIndex)\n    }\n  }\n\n  function echartsTimeout(seriesIndex = 0) {\n    myChartEventTime.current = setTimeout(() => {\n      echartsEventPlay(seriesIndex)\n    }, timer.current)\n  }\n\n  function echartsEventPlay(seriesIndex = 0) {\n    const dataLen = echartsOptions.current.series[seriesIndex].data.length\n    if (myChart.current && myChart.current.dispatchAction) {\n      // 取消之前高亮的图形\n      myChart.current.dispatchAction({\n        type: 'downplay',\n        seriesIndex,\n        dataIndex: currentDataIndex.current\n      })\n      currentDataIndex.current = (currentDataIndex.current + 1) % dataLen\n      // 高亮当前图形\n      myChart.current.dispatchAction({\n        type: 'highlight',\n        seriesIndex,\n        dataIndex: currentDataIndex.current\n      })\n      // 显示 tooltip\n      myChart.current.dispatchAction({\n        type: 'showTip',\n        seriesIndex,\n        dataIndex: currentDataIndex.current\n      })\n    }\n    echartsTimeout(seriesIndex)\n  }\n\n  // echarts关闭动画，可手动调用\n  function echartsPause() {\n    if (myChart.current && myChart.current.dispatchAction) {\n      // 取消之前高亮的图形\n      myChart.current.dispatchAction({\n        type: 'downplay',\n        seriesIndex: currentSeriesIndex.current,\n        dataIndex: currentDataIndex.current\n      })\n      // 取消显示 tooltip\n      myChart.current.dispatchAction({\n        type: 'hideTip'\n      })\n    }\n    if (myChartEventTime.current) {\n      clearTimeout(myChartEventTime.current)\n      myChartEventTime.current = null\n    }\n  }\n\n  // 重置大小\n  const echartsResize = () => {\n    if (myChart.current) myChart.current.resize()\n  }\n\n  useMount(() => {\n    init()\n  })\n  useUnmount(() => {\n    echartsPause()\n    destroyEchart()\n  })\n\n  useDeepCompareEffect(() => {\n    update()\n  }, [seriesData])\n\n  useUpdateEffect(() => {\n    if (autoPlay) {\n      echartsPlay(false, currentSeriesIndex.current, currentDataIndex.current)\n    } else {\n      echartsPause()\n    }\n  }, [autoPlay])\n\n  useUpdateEffect(() => {\n    timer.current = intervalTime\n  }, [intervalTime])\n\n  useUpdateEffect(() => {\n    if (isAddOn) {\n      addEventFn()\n    } else {\n      removeEventFn()\n    }\n  }, [isAddOn])\n\n  const size = useSize(echartsRef)\n  useEffect(() => {\n    echartsResize()\n  }, [size])\n\n  useImperativeHandle(onRef, () => {\n    return {\n      echartsInstance: () => myChart.current,\n      echartsPlay,\n      echartsPause\n    }\n  });\n\n  return (\n    <div ref={echartsRef} className={classNames('w-full h-full', className)}></div>\n  );\n};\n\nexport default EchartsModule;\n","import { Button, Typography, theme } from \"antd\";\nimport { useState } from \"react\";\nimport EchartsModule from \"../../components/EchartsModule\";\n\nconst { Title } = Typography;\nconst { useToken } = theme;\n\nconst PageDemo = () => {\n  const { token } = useToken();\n  const { colorText, colorBgContainer, colorBorder } = token;\n  const options = {\n    grid: {\n      top: '15%',\n      bottom: '10%',\n    },\n    textStyle: {\n      color: colorText,\n    },\n    legend: {\n      textStyle: {\n        color: colorText,\n      },\n    },\n    xAxis: {\n      type: 'category',\n      data: ['Matcha Latte', 'Milk Tea', 'Cheese Cocoa', 'Walnut Brownie', 'Brownie', 'Cheese']\n    },\n    yAxis: {},\n    tooltip: {\n      trigger: 'axis',\n      className: 'echart-tooltip-zIndex',\n      backgroundColor: colorBgContainer,\n      borderColor: colorBorder,\n      textStyle: {\n        color: colorText,\n      },\n    }\n  }\n\n  const [seriesData, setSeriesData] = useState([\n    {\n      type: 'bar',\n      name: '2015',\n      data: [89.3, 92.1, 94.4, 85.4, 88, 90]\n    },\n    {\n      type: 'bar',\n      name: '2016',\n      data: [95.8, 89.4, 91.2, 76.9, 75, 68]\n    },\n    {\n      type: 'bar',\n      name: '2017',\n      data: [97.7, 83.1, 92.5, 78.1, 95, 93]\n    }\n  ])\n  const changeDate = () => {\n    setSeriesData([\n      {\n        type: 'bar',\n        name: '2015',\n        data: [89.3, 92.1, 94.4, 85.4, 50, 69]\n      },\n      {\n        type: 'bar',\n        name: '2016',\n        data: [95.8, 89.4, 91.2, 76.9, 75, 68]\n      }\n    ])\n  }\n\n  return (\n    <div>\n      <Title level={3}>1、默认展示，测试 seriesData 变更</Title>\n      <div>\n        <Button onClick={changeDate}>切换</Button>\n      </div>\n      <div className=\"w-full h-80\">\n        <EchartsModule options={options} seriesData={seriesData}></EchartsModule>\n      </div>\n    </div>\n  );\n};\n\nexport default PageDemo;\n","import { Button, Typography, theme } from \"antd\";\nimport { useState } from \"react\";\nimport EchartsModule from \"../../components/EchartsModule\";\n\nconst { Title } = Typography;\nconst { useToken } = theme;\n\nconst PageDemo = () => {\n  const { token } = useToken();\n  const { colorText, colorBgContainer, colorBorder } = token;\n  const [isShow, setIsShow] = useState(false)\n  const options = {\n    grid: {\n      top: '15%',\n      bottom: '10%',\n    },\n    textStyle: {\n      color: colorText,\n    },\n    legend: {\n      textStyle: {\n        color: colorText,\n      },\n    },\n    xAxis: {},\n    yAxis: {\n      type: 'category',\n      data: ['Latte', 'Tea', 'Cocoa', 'Brownie']\n    },\n    tooltip: {\n      trigger: 'axis',\n      className: 'echart-tooltip-zIndex',\n      backgroundColor: colorBgContainer,\n      borderColor: colorBorder,\n      textStyle: {\n        color: colorText,\n      },\n    }\n  }\n  const [seriesData, setSeriesData] = useState([])\n  function changeDate() {\n    setIsShow(true)\n    setSeriesData([\n      {\n        type: 'bar',\n        name: '2015',\n        data: [89.3, 92.1, 94.4, 85.4]\n      },\n      {\n        type: 'bar',\n        name: '2016',\n        data: [95.8, 89.4, 91.2, 76.9]\n      }\n    ])\n  }\n\n  return (\n    <div>\n      <Title level={3}>2、默认不展示，展示的时候，设置 seriesData</Title>\n      <div>\n        <Button onClick={changeDate}>切换</Button>\n      </div>\n      <div className=\"w-full h-72\">\n        {isShow && <EchartsModule options={options} seriesData={seriesData}></EchartsModule>}\n      </div>\n    </div>\n  );\n};\n\nexport default PageDemo;\n","import { Button, Typography, theme } from \"antd\";\nimport { useState } from \"react\";\nimport EchartsModule from \"../../components/EchartsModule\";\n\nconst { Title } = Typography;\nconst { useToken } = theme;\n\nconst PageDemo = () => {\n  const { token } = useToken();\n  const { colorText, colorBgContainer, colorBorder } = token;\n  const options = {\n    grid: {\n      top: '15%',\n      bottom: '10%',\n    },\n    textStyle: {\n      color: colorText,\n    },\n    legend: {\n      textStyle: {\n        color: colorText,\n      },\n    },\n    xAxis: {\n      type: 'category',\n      data: ['Matcha Latte', 'Milk Tea', 'Cheese Cocoa', 'Walnut Brownie', 'Brownie', 'Cheese']\n    },\n    yAxis: {},\n    tooltip: {\n      trigger: 'axis',\n      className: 'echart-tooltip-zIndex',\n      backgroundColor: colorBgContainer,\n      borderColor: colorBorder,\n      textStyle: {\n        color: colorText,\n      },\n    }\n  }\n  const [seriesData, setSeriesData] = useState([\n    {\n      type: 'bar',\n      name: '2015',\n      data: [89.3, 92.1, 94.4, 85.4, 88, 90]\n    },\n    {\n      type: 'bar',\n      name: '2016',\n      data: [95.8, 89.4, 91.2, 76.9, 75, 68]\n    },\n    {\n      type: 'bar',\n      name: '2017',\n      data: [97.7, 83.1, 92.5, 78.1, 95, 93]\n    }\n  ])\n  function changeDate() {\n    setSeriesData([\n      {\n        type: 'bar',\n        name: '2015',\n        data: [89.3, 92.1]\n      }\n    ])\n  }\n\n  return (\n    <div>\n      <Title level={3}>3、前后两次赋值的 seriesData[0].data.length 不一样，动画从头开始</Title>\n      <div>\n        <Button onClick={changeDate}>切换</Button>\n      </div>\n      <div className=\"w-full h-80\">\n        <EchartsModule options={options} seriesData={seriesData}></EchartsModule>\n      </div>\n    </div>\n  );\n};\n\nexport default PageDemo;\n","import { Button, Typography, theme } from \"antd\";\nimport { useState } from \"react\";\nimport EchartsModule from \"../../components/EchartsModule\";\n\nconst { Title } = Typography;\nconst { useToken } = theme;\n\nconst PageDemo = () => {\n  const { token } = useToken();\n  const { colorText, colorBgContainer, colorBorder } = token;\n  const [boxWidth, setBoxWidth] = useState(true)\n  const [boxHeight, setBoxHeight] = useState(true)\n  const options = {\n    grid: {\n      top: '15%',\n      bottom: '10%',\n    },\n    textStyle: {\n      color: colorText,\n    },\n    legend: {\n      textStyle: {\n        color: colorText,\n      },\n    },\n    xAxis: {\n      type: 'category',\n      data: ['Matcha Latte', 'Milk Tea', 'Cheese Cocoa', 'Walnut Brownie', 'Brownie', 'Cheese']\n    },\n    yAxis: {},\n    tooltip: {\n      trigger: 'axis',\n      className: 'echart-tooltip-zIndex',\n      backgroundColor: colorBgContainer,\n      borderColor: colorBorder,\n      textStyle: {\n        color: colorText,\n      },\n    }\n  }\n  const seriesData = [\n    {\n      type: 'line',\n      name: '2015',\n      data: [89.3, 92.1, 94.4, 85.4, 88, 90]\n    },\n    {\n      type: 'line',\n      name: '2016',\n      data: [95.8, 89.4, 91.2, 76.9, 75, 68]\n    },\n    {\n      type: 'line',\n      name: '2017',\n      data: [97.7, 83.1, 92.5, 78.1, 95, 93]\n    }\n  ]\n  function changeDate4() {\n    setBoxWidth(!boxWidth)\n  }\n  function changeDate41() {\n    setBoxHeight(!boxHeight)\n  }\n\n  return (\n    <div>\n      <Title level={3}>3、切换宽高，自动 resize</Title>\n      <div>\n        <Button onClick={changeDate4}>切换宽度</Button>\n        <Button className=\"ml-2\" onClick={changeDate41}>切换高度</Button>\n      </div>\n      <div className=\"w-full h-80\">\n        <div style={{width: boxWidth ? '100%' : '50%', height: boxHeight ? '100%' : '75%'}}>\n          <EchartsModule options={options} seriesData={seriesData}></EchartsModule>\n        </div>\n      </div>\n    </div>\n  );\n};\n\nexport default PageDemo;\n","import { Button, Typography, theme } from \"antd\";\nimport { useState } from \"react\";\nimport EchartsModule from \"../../components/EchartsModule\";\n\nconst { Title } = Typography;\nconst { useToken } = theme;\n\nconst PageDemo = () => {\n  const { token } = useToken();\n  const { colorText, colorBgContainer, colorBorder } = token;\n  const [autoPlay, setAutoPlay] = useState(true)\n  const options = {\n    textStyle: {\n      color: colorText,\n    },\n    title: {\n      text: '饼图程序调用高亮示例',\n      left: 'center',\n      textStyle: {\n        color: colorText,\n      },\n    },\n    tooltip: {\n      trigger: 'item',\n      formatter: '{a} <br/>{b} : {c} ({d}%)',\n      confine: true,\n      className: 'echart-tooltip-zIndex',\n      backgroundColor: colorBgContainer,\n      borderColor: colorBorder,\n      textStyle: {\n        color: colorText,\n      },\n    },\n    legend: {\n      orient: 'vertical',\n      left: 'left',\n      data: ['直接访问', '邮件营销', '联盟广告', '视频广告', '搜索引擎'],\n      textStyle: {\n        color: colorText,\n      },\n    }\n  }\n\n  const seriesData = [\n    {\n      name: '访问来源',\n      type: 'pie',\n      radius: '55%',\n      center: ['50%', '60%'],\n      lable: {\n        textStyle: {\n          color: colorText,\n        },\n      },\n      data: [\n        { value: 335, name: '直接访问' },\n        { value: 310, name: '邮件营销' },\n        { value: 234, name: '联盟广告' },\n        { value: 135, name: '视频广告' },\n        { value: 1548, name: '搜索引擎' }\n      ],\n      emphasis: {\n        itemStyle: {\n          shadowBlur: 10,\n          shadowOffsetX: 0,\n        }\n      }\n    }\n  ]\n  const changeDate = () => {\n    setAutoPlay(!autoPlay)\n  }\n\n  return (\n    <div>\n      <Title level={3}>5、改变 autoPlay 开始结束动画，使用 autoPlay 改变的好处是可以从上次暂停动画项处继续动画</Title>\n      <div>\n        <Button onClick={changeDate}>{ autoPlay ? '结束' : '开始' }动画</Button>\n      </div>\n      <div className=\"w-full h-80\">\n        <EchartsModule options={options} seriesData={seriesData} autoPlay={autoPlay}></EchartsModule>\n      </div>\n    </div>\n  );\n};\n\nexport default PageDemo;\n","import { Button, Typography, theme } from \"antd\";\nimport React from \"react\";\nimport EchartsModule from \"../../components/EchartsModule\";\n\nconst { Title } = Typography;\nconst { useToken } = theme;\n\nconst PageDemo = () => {\n  const { token } = useToken();\n  const { colorText, colorBgContainer, colorBorder } = token;\n  const echartsRef = React.createRef();\n  const options = {\n    textStyle: {\n      color: colorText,\n    },\n    title: {\n      text: '饼图程序调用高亮示例',\n      left: 'center',\n      textStyle: {\n        color: colorText,\n      },\n    },\n    tooltip: {\n      trigger: 'item',\n      formatter: '{a} <br/>{b} : {c} ({d}%)',\n      confine: true,\n      className: 'echart-tooltip-zIndex',\n      backgroundColor: colorBgContainer,\n      borderColor: colorBorder,\n      textStyle: {\n        color: colorText,\n      },\n    },\n    legend: {\n      orient: 'vertical',\n      left: 'left',\n      data: ['直接访问', '邮件营销', '联盟广告', '视频广告', '搜索引擎'],\n      textStyle: {\n        color: colorText,\n      },\n    }\n  }\n\n  const seriesData = [\n    {\n      name: '访问来源',\n      type: 'pie',\n      radius: '55%',\n      center: ['50%', '60%'],\n      lable: {\n        textStyle: {\n          color: colorText,\n        },\n      },\n      data: [\n        { value: 335, name: '直接访问' },\n        { value: 310, name: '邮件营销' },\n        { value: 234, name: '联盟广告' },\n        { value: 135, name: '视频广告' },\n        { value: 1548, name: '搜索引擎' }\n      ],\n      emphasis: {\n        itemStyle: {\n          shadowBlur: 10,\n          shadowOffsetX: 0,\n        }\n      }\n    }\n  ]\n  const changeDate = () => {\n    echartsRef.current.echartsPlay(true, 0, -1)\n  }\n  const changeDate1 = () => {\n    echartsRef.current.echartsPause()\n  }\n  const changeDate2 = () => {\n    const echartsInstance = echartsRef.current.echartsInstance()\n    echartsInstance.clear()\n    echartsInstance.dispose()\n  }\n\n  return (\n    <div>\n      <Title level={3}>6、通过 ref 调用开始结束动画，使用 ref 调用的好处是可以指定在第几项开始动画</Title>\n      <div>\n        <Button onClick={changeDate}>开始动画</Button>\n        <Button className=\"ml-2\" onClick={changeDate1}>结束动画</Button>\n        <Button className=\"ml-2\" onClick={changeDate2}>获取实例，销毁echarts</Button>\n      </div>\n      <div className=\"w-full h-80\">\n        <EchartsModule onRef={echartsRef} options={options} seriesData={seriesData}></EchartsModule>\n      </div>\n    </div>\n  );\n};\n\nexport default PageDemo;\n","import { Button, Typography, theme } from \"antd\";\nimport { useState } from \"react\";\nimport EchartsModule from \"../../components/EchartsModule\";\n\nconst { Title } = Typography;\nconst { useToken } = theme;\n\nconst PageDemo = () => {\n  const { token } = useToken();\n  const { colorText, colorBgContainer, colorBorder } = token;\n  const [intervalTime, setIntervalTime] = useState(5000)\n  const options = {\n    grid: {\n      top: '15%',\n      bottom: '10%',\n    },\n    textStyle: {\n      color: colorText,\n    },\n    legend: {\n      textStyle: {\n        color: colorText,\n      },\n    },\n    xAxis: {\n      type: 'category',\n      data: ['Matcha Latte', 'Milk Tea', 'Cheese Cocoa', 'Walnut Brownie', 'Brownie', 'Cheese']\n    },\n    yAxis: {},\n    tooltip: {\n      trigger: 'axis',\n      className: 'echart-tooltip-zIndex',\n      backgroundColor: colorBgContainer,\n      borderColor: colorBorder,\n      textStyle: {\n        color: colorText,\n      },\n    }\n  }\n\n  const seriesData = [\n    {\n      type: 'line',\n      name: '2015',\n      data: [89.3, 92.1, 94.4, 85.4, 88, 90]\n    },\n    {\n      type: 'line',\n      name: '2016',\n      data: [95.8, 89.4, 91.2, 76.9, 75, 68]\n    },\n    {\n      type: 'line',\n      name: '2017',\n      data: [97.7, 83.1, 92.5, 78.1, 95, 93]\n    }\n  ]\n  const changeDate = () => {\n    setIntervalTime(1000)\n  }\n\n  return (\n    <div>\n      <Title level={3}>7、切换动画跳动时间 5s 变 1s</Title>\n      <div>\n        <Button onClick={changeDate}>切换</Button>\n      </div>\n      <div className=\"w-full h-80\">\n        <EchartsModule options={options} seriesData={seriesData} intervalTime={intervalTime}></EchartsModule>\n      </div>\n    </div>\n  );\n};\n\nexport default PageDemo;\n","import { Button, Typography, theme } from \"antd\";\nimport { useState } from \"react\";\nimport EchartsModule from \"../../components/EchartsModule\";\n\nconst { Title } = Typography;\nconst { useToken } = theme;\n\nconst PageDemo = () => {\n  const { token } = useToken();\n  const { colorText, colorBgContainer, colorBorder } = token;\n  const [isAddOn, setIsAddOn] = useState(false)\n  const options = {\n    grid: {\n      top: '15%',\n      bottom: '10%',\n    },\n    textStyle: {\n      color: colorText,\n    },\n    legend: {\n      textStyle: {\n        color: colorText,\n      },\n    },\n    xAxis: {\n      type: 'category',\n      data: ['Matcha Latte', 'Milk Tea', 'Cheese Cocoa', 'Walnut Brownie', 'Brownie', 'Cheese']\n    },\n    yAxis: {},\n    tooltip: {\n      trigger: 'axis',\n      className: 'echart-tooltip-zIndex',\n      backgroundColor: colorBgContainer,\n      borderColor: colorBorder,\n      textStyle: {\n        color: colorText,\n      },\n    }\n  }\n\n  const seriesData = [\n    {\n      type: 'line',\n      name: '2015',\n      data: [89.3, 92.1, 94.4, 85.4, 88, 90]\n    },\n    {\n      type: 'line',\n      name: '2016',\n      data: [95.8, 89.4, 91.2, 76.9, 75, 68]\n    },\n    {\n      type: 'line',\n      name: '2017',\n      data: [97.7, 83.1, 92.5, 78.1, 95, 93]\n    }\n  ]\n  const changeDate = () => {\n    setIsAddOn(true)\n  }\n\n  return (\n    <div>\n      <Title level={3}>8、通过 isAddOn 添加移除鼠标事件</Title>\n      <div>\n        <Button onClick={changeDate}>{ isAddOn ? '移除' : '添加' }</Button>\n      </div>\n      <div className=\"w-full h-80\">\n        <EchartsModule options={options} seriesData={seriesData} isAddOn={isAddOn}></EchartsModule>\n      </div>\n    </div>\n  );\n};\n\nexport default PageDemo;\n","import { Typography } from 'antd';\nimport CodeHighlighter from '../../components/CodeHighlighter';\nimport PageDemo1 from \"./PageDemo1\";\nimport PageDemo2 from \"./PageDemo2\";\nimport PageDemo3 from \"./PageDemo3\";\nimport PageDemo4 from \"./PageDemo4\";\nimport PageDemo5 from \"./PageDemo5\";\nimport PageDemo6 from \"./PageDemo6\";\nimport PageDemo7 from \"./PageDemo7\";\nimport PageDemo8 from \"./PageDemo8\";\nimport { EchartsModuleCode } from './Codes';\n\nconst { Title } = Typography;\n\nconst PageEcharts = () => {\n\n  return (\n    <div>\n      <Title>echarts</Title>\n      <Title level={2} style={{ marginTop: '0.5em' }}>安装：</Title>\n      <CodeHighlighter lang='sh'>\n        {'npm install echarts --save'}\n      </CodeHighlighter>\n      <Title level={2} style={{ marginTop: '0.5em' }}>例子：</Title>\n      <div className='w-full flex'>\n        <div className='w-1/2 px-3'>\n          <PageDemo1></PageDemo1>\n        </div>\n        <div className='w-1/2 px-3'>\n          <PageDemo2></PageDemo2>\n        </div>\n      </div>\n      <div className='w-full flex'>\n        <div className='w-1/2 px-3'>\n          <PageDemo3></PageDemo3>\n        </div>\n        <div className='w-1/2 px-3'>\n          <PageDemo4></PageDemo4>\n        </div>\n      </div>\n      <div className='w-full flex'>\n        <div className='w-1/2 px-3'>\n          <PageDemo5></PageDemo5>\n        </div>\n        <div className='w-1/2 px-3'>\n          <PageDemo6></PageDemo6>\n        </div>\n      </div>\n      <div className='w-full flex'>\n        <div className='w-1/2 px-3'>\n          <PageDemo7></PageDemo7>\n        </div>\n        <div className='w-1/2 px-3'>\n          <PageDemo8></PageDemo8>\n        </div>\n      </div>\n      <Title level={2} style={{ marginTop: '0.5em' }}>echarts组件封装：</Title>\n      <CodeHighlighter lang='jsx'>\n        {EchartsModuleCode}\n      </CodeHighlighter>\n    </div>\n  );\n};\n\nexport default PageEcharts;\n","export const EchartsModuleCode = `import { useEffect, useImperativeHandle, useRef } from \"react\";\nimport * as echarts from 'echarts';\nimport { useDeepCompareEffect, useMount, useSize, useUnmount, useUpdateEffect } from \"ahooks\";\n\nconst EchartsModule = ({\n  // https://echarts.apache.org/zh/api.html#echarts.init\n  // 初始化传入的 opts\n  opts = { renderer: 'svg' },\n  // 配置项\n  options = {},\n  // 数据集合\n  seriesData = [],\n  // 自动切换的时间跨度\n  intervalTime = 1500,\n  // 是否自动播放\n  autoPlay = true,\n  // 是否自动添加鼠标上移事件\n  isAddOn = true,\n  onRef\n}) => {\n  \n  const echartsRef = useRef(null);\n  let myChart = useRef(null);\n  let echartsOptions = useRef({});\n  let myChartEventTime = useRef(null);\n  let currentSeriesIndex = useRef(0);\n  let currentDataIndex = useRef(-1);\n  let timer = useRef(intervalTime);\n\n  // 是否调用过 echartsPlay\n  let isEchartsPlay = useRef(false);\n  // echarts初始化\n  function init() {\n    destroyEchart() //判断是否有echart实例，如果有，先销毁\n    myChart.current = echarts.init(echartsRef.current, null, opts)\n    update()\n\n    if (isAddOn) {\n      addEventFn()\n    }\n  }\n\n  // 绑定事件\n  function addEventFn() {\n    // 鼠标移上查看的时候，暂停动画\n    myChart.current.on('mouseover', 'series', event => {\n      // 取消之前高亮的图形\n      myChart.current.dispatchAction({\n        type: 'downplay',\n        seriesIndex: currentSeriesIndex.current,\n        dataIndex: currentDataIndex.current\n      })\n      echartsPause()\n    })\n    // 鼠标移出的时候打开动画\n    myChart.current.on('mouseout', 'series', event => {\n      // 自动播放 或者 调用过 echartsPlay\n      if (autoPlay || isEchartsPlay.current) echartsPlay(true, event.seriesIndex, event.dataIndex - 1)\n    })\n  }\n\n  // 移除事件\n  function removeEventFn() {\n    myChart.current.off('mouseover')\n    myChart.current.off('mouseout')\n  }\n\n  // 数据更新\n  function update() {\n    // 逻辑处理组件options参数\n    const curOptions = {\n      ...options,\n      series: seriesData\n      // other options here ...\n    }\n    echartsOptions.current = curOptions\n    // 调用ECharts组件setOption更新\n    myChart.current.setOption(curOptions, true)\n    if (curOptions.series.length && autoPlay) {\n      myChart.current.dispatchAction({\n        type: 'highlight',\n        seriesIndex: currentSeriesIndex.current,\n        dataIndex: currentDataIndex.current\n      })\n      // 显示 tooltip\n      myChart.current.dispatchAction({\n        type: 'showTip',\n        seriesIndex: currentSeriesIndex.current,\n        dataIndex: currentDataIndex.current\n      })\n      echartsPlay(false, currentSeriesIndex.current, currentDataIndex.current <= seriesData[currentSeriesIndex.current].data.length - 1 ? currentDataIndex.current : -1)\n    }\n  }\n\n  // 销毁echarts\n  function destroyEchart() {\n    if (myChart.current) {\n      if (isAddOn) {\n        removeEventFn()\n      }\n      if (typeof myChart.current.clear === 'function') myChart.current.clear()\n      if (typeof myChart.current.dispose === 'function') myChart.current.dispose()\n      myChart.current = null\n    }\n  }\n\n  /**\n   * echarts开启动画，可手动调用\n   * clear: 是否立即开始动画，并清除上个定时器，开启下个定时器，默认为 false\n   * seriesIndex: series 中的第几项数据，默认为 0\n   * dataIndex: series[seriesIndex].data 中的第几项，默认为 -1\n   */\n  function echartsPlay(clear = false, seriesIndex = 0, dataIndex = -1) {\n    if (clear) {\n      echartsPause()\n    }\n    isEchartsPlay.current = true\n    currentSeriesIndex.current = seriesIndex\n    currentDataIndex.current = dataIndex\n    if (!myChartEventTime.current) {\n      echartsEventPlay(seriesIndex)\n    }\n  }\n\n  function echartsTimeout(seriesIndex = 0) {\n    myChartEventTime.current = setTimeout(() => {\n      echartsEventPlay(seriesIndex)\n    }, timer.current)\n  }\n\n  function echartsEventPlay(seriesIndex = 0) {\n    const dataLen = echartsOptions.current.series[seriesIndex].data.length\n    if (myChart.current && myChart.current.dispatchAction) {\n      // 取消之前高亮的图形\n      myChart.current.dispatchAction({\n        type: 'downplay',\n        seriesIndex,\n        dataIndex: currentDataIndex.current\n      })\n      currentDataIndex.current = (currentDataIndex.current + 1) % dataLen\n      // 高亮当前图形\n      myChart.current.dispatchAction({\n        type: 'highlight',\n        seriesIndex,\n        dataIndex: currentDataIndex.current\n      })\n      // 显示 tooltip\n      myChart.current.dispatchAction({\n        type: 'showTip',\n        seriesIndex,\n        dataIndex: currentDataIndex.current\n      })\n    }\n    echartsTimeout(seriesIndex)\n  }\n\n  // echarts关闭动画，可手动调用\n  function echartsPause() {\n    if (myChart.current && myChart.current.dispatchAction) {\n      // 取消之前高亮的图形\n      myChart.current.dispatchAction({\n        type: 'downplay',\n        seriesIndex: currentSeriesIndex.current,\n        dataIndex: currentDataIndex.current\n      })\n      // 取消显示 tooltip\n      myChart.current.dispatchAction({\n        type: 'hideTip'\n      })\n    }\n    if (myChartEventTime.current) {\n      clearTimeout(myChartEventTime.current)\n      myChartEventTime.current = null\n    }\n  }\n\n  // 重置大小\n  const echartsResize = () => {\n    if (myChart.current) myChart.current.resize()\n  }\n\n  useMount(() => {\n    init()\n  })\n  useUnmount(() => {\n    echartsPause()\n    destroyEchart()\n  })\n\n  useDeepCompareEffect(() => {\n    update()\n  }, [seriesData])\n\n  useUpdateEffect(() => {\n    if (autoPlay) {\n      echartsPlay(false, currentSeriesIndex.current, currentDataIndex.current)\n    } else {\n      echartsPause()\n    }\n  }, [autoPlay])\n\n  useUpdateEffect(() => {\n    timer.current = intervalTime\n  }, [intervalTime])\n\n  useUpdateEffect(() => {\n    if (isAddOn) {\n      addEventFn()\n    } else {\n      removeEventFn()\n    }\n  }, [isAddOn])\n\n  const size = useSize(echartsRef)\n  useEffect(() => {\n    echartsResize()\n  }, [size])\n\n  useImperativeHandle(onRef, () => {\n    return {\n      echartsInstance: () => myChart.current,\n      echartsPlay,\n      echartsPause\n    }\n  });\n\n  return (\n    <div ref={echartsRef} className=\"w-full h-full\"></div>\n  );\n};\n\nexport default EchartsModule;`\n"],"names":["_ref","_ref$lang","lang","_ref$children","children","_ref$className","className","_message$useMessage","message","_message$useMessage2","_slicedToArray","messageApi","contextHolder","_useState","useState","_useState2","copied","setCopied","_jsxs","classNames","_jsx","Tooltip","title","CopyToClipboard","text","onCopy","result","success","content","duration","onClose","error","warning","Button","size","icon","CheckOutlined","CopyOutlined","SyntaxHighlighter","language","showLineNumbers","style","vscDarkPlus","customStyle","borderRadius","fontSize","paddingTop","margin","_ref$opts","opts","renderer","_ref$options","options","_ref$seriesData","seriesData","_ref$intervalTime","intervalTime","_ref$autoPlay","autoPlay","_ref$isAddOn","isAddOn","onRef","echartsRef","useRef","myChart","echartsOptions","myChartEventTime","currentSeriesIndex","currentDataIndex","timer","isEchartsPlay","addEventFn","current","on","event","dispatchAction","type","seriesIndex","dataIndex","echartsPause","echartsPlay","removeEventFn","off","update","curOptions","_objectSpread","series","setOption","length","data","destroyEchart","clear","dispose","arguments","undefined","echartsEventPlay","dataLen","setTimeout","echartsTimeout","clearTimeout","useMount","echarts","useUnmount","useDeepCompareEffect","useUpdateEffect","useSize","useEffect","resize","useImperativeHandle","echartsInstance","ref","Title","Typography","useToken","theme","token","colorText","grid","top","bottom","textStyle","color","legend","xAxis","yAxis","tooltip","trigger","backgroundColor","colorBgContainer","borderColor","colorBorder","name","setSeriesData","level","onClick","EchartsModule","isShow","setIsShow","_useState3","_useState4","boxWidth","setBoxWidth","boxHeight","setBoxHeight","width","height","setAutoPlay","left","formatter","confine","orient","radius","center","lable","value","emphasis","itemStyle","shadowBlur","shadowOffsetX","React","setIntervalTime","setIsAddOn","marginTop","CodeHighlighter","PageDemo1","PageDemo2","PageDemo3","PageDemo4","PageDemo5","PageDemo6","PageDemo7","PageDemo8"],"sourceRoot":""}